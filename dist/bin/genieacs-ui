#!/usr/bin/env node
"use strict";const e=require("path"),t=require("fs"),r=require("os"),n=require("ipaddr.js"),s=require("cluster"),i=require("http"),a=require("https"),o=require("zlib"),c=require("koa"),u=require("koa-router"),l=require("jsonwebtoken"),f=require("koa-static"),p=require("koa-compress"),d=require("koa-bodyparser"),m=require("koa-jwt"),h=require("stream"),y=require("mongodb"),v=require("vm"),g=require("parsimmon"),w=require("espresso-iisojs"),A=require("crypto"),S=require("later"),_=require("url"),I=require("dgram"),O=require("child_process"),E=require("yaml");function N(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}const b=N(s),T=N(c),D=N(u),x=N(f),C=N(p),R=N(d),P=N(m),L=N(g);let M,k,$,q,j,U,W=e.resolve(__dirname,"..");for(;!t.existsSync(W+"/package.json");){const t=e.resolve(W,"..");if(t===W){W=process.cwd();break}W=t}const F={EXT_DIR:{type:"path",default:e.resolve(W,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/genieacs"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"0.0.0.0"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"0.0.0.0"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"0.0.0.0"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"0.0.0.0"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},G={};function B(t,r,n=!1){if(null!=G[t])return!0;function s(t,r){switch(r){case"int":return Number(t);case"bool":return["true","1"].includes(String(t).trim().toLowerCase());case"string":return String(t);case"path":return t?e.resolve(t):"";default:return null}}"CONFIG_DIR"!==t&&"config-dir"!==t||(M=M||e.resolve(W,r)),"CWMP_SSL"!==t&&"cwmp-ssl"!==t||(k=k||String(r).toLowerCase().trim()),"NBI_SSL"!==t&&"nbi-ssl"!==t||($=$||String(r).toLowerCase().trim()),"FS_SSL"!==t&&"fs-ssl"!==t||(q=q||String(r).toLowerCase().trim()),"UI_SSL"!==t&&"ui-ssl"!==t||(j=j||String(r).toLowerCase().trim()),"FS_HOSTNAME"!==t&&"fs-hostname"!==t||(U=U||String(r).trim()),"PRESETS_CACHE_DURATION"!==t&&"presets-cache-duration"!==t||B("MAX_CACHE_TTL",r),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==t&&"get-parameter-names-depth-threshold"!==t||B("GPN_NEXT_LEVEL",r),"TASK_PARAMETERS_BATCH_SIZE"!==t&&"task-parameters-batch-size"!==t||B("GPV_BATCH_SIZE",r),"FS_IP"!==t&&"fs-ip"!==t||B("FS_HOSTNAME",r);let i=null;for(const[e,a]of Object.entries(F)){let o=e;if(n&&(o=o.toLowerCase().replace(/_/g,"-")),t===o?(i=s(r,a.type),o=e):t.startsWith(o+"-")&&(i=s(r,a.type),o=`${e}-${t.slice(e.length+1)}`),null!=i)return G[o]=i,process.env["GENIEACS_"+o]=i,!0}return!1}const J=process.argv.slice(2);for(;J.length;){const e=J.shift();if("-"===e[0]){const t=J.shift();B(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&B(e.slice(9),t);const H=M?M+"/config.json":W+"/config/config.json";if(t.existsSync(H)){const e=JSON.parse(t.readFileSync(H).toString());for(const[t,r]of Object.entries(e))B(t,r)||(process.env["GENIEACS_"+t]=""+r)}if(M&&B("EXT_DIR",M+"/ext"),["true","1"].includes(k)){const e=M||W+"/config";B("CWMP_SSL_CERT",e+"/cwmp.crt"),B("CWMP_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes($)){const e=M||W+"/config";B("NBI_SSL_CERT",e+"/cwmp.crt"),B("NBI_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(q)){const e=M||W+"/config";B("FS_SSL_CERT",e+"/cwmp.crt"),B("FS_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(j)){const e=M||W+"/config";B("UI_SSL_CERT",e+"/cwmp.crt"),B("UI_SSL_KEY",e+"/cwmp.key")}if(U){const e=G.FS_PORT||7567;B("FS_URL_PREFIX",(!!G.FS_SSL_CERT?"https":"http")+`://${U}:${e}/`)}for(const[e,t]of Object.entries(F))null!=t.default&&B(e,t.default);function K(e,t){if(!t)return G[e];let r=G[e=`${e}-${t}`];if(null!=r)return r;let n=e.lastIndexOf("-");return r=G[e.slice(0,n)],null!=r?r:(n=e.lastIndexOf("-",n-1),r=G[e.slice(0,n)],null!=r?r:(n=e.lastIndexOf("-",n-1),r=G[e.slice(0,n)],null!=r?r:(n=e.lastIndexOf("-",n-1),n>0&&(r=G[e.slice(0,n)],null!=r)?r:null)))}const z=""+K("FORWARDED_HEADER"),V=new WeakMap,Z=[];for(const e of z.split(",").map((e=>e.trim())))try{Z.push(n.parseCIDR(e))}catch(t){try{const t=n.parse(e);Z.push([t,8*t.toByteArray().length])}catch(e){}}function X(e){let t=V.get(e);if(!t){const r=e.socket;t={localAddress:r.localAddress,localPort:r.localPort,remoteAddress:r.remoteAddress,remotePort:r.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const s=e.headers.forwarded;if(s){const e=n.parse(r.remoteAddress);if(Z.some((t=>e.match(t)))){const e=function(e){e=e.toLowerCase();const t={};let r,n=0,s=-1;for(let i=0;i<e.length;++i){const a=e.charCodeAt(i);if(61===a)n>=0&&(r=e.slice(n,i).trim(),n=-1,s=i+1);else if(59===a)s>=0&&(t[r]=e.slice(s,i).trim()),s=-1,n=i+1;else{if(44===a)return s>=0&&(t[r]=e.slice(s,i).trim()),t;if(34===a&&s>=0){const a=i;if(!e.slice(s,a).trim())for(i+=1;i<e.length;++i){const o=e.charCodeAt(i);if(92===o&&++i,34===o){t[r]=JSON.parse(e.slice(a,i+1).trim()),s=-1,n=i+1;break}}}}}return s>=0&&(t[r]=e.slice(s).trim()),t}(s);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,r]=e.host.split(":",2);t.localPort=+r||t.localPort}if(e.for)if(e.for.startsWith("[")){const r=e.for.lastIndexOf("]");r>=0&&(t.remoteAddress=e.for.slice(1,r),t.remotePort=parseInt(e.for.slice(r+2))||t.remotePort)}else{const r=e.for.lastIndexOf(":");r>=0?(t.remoteAddress=e.for.slice(0,r),t.remotePort=parseInt(e.for.slice(r+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const r=e.by.lastIndexOf("]");r>=0&&(t.localAddress=e.by.slice(1,r),t.localPort=parseInt(e.by.slice(r+2))||t.localPort)}else{const r=e.by.lastIndexOf(":");r>=0?(t.localAddress=e.by.slice(0,r),t.localPort=parseInt(e.by.slice(r+1))||t.localPort):t.localAddress=e.by}}}V.set(e,t)}return t}const Y=K("LOG_FORMAT"),Q=K("ACCESS_LOG_FORMAT")||Y,ee={};let te,re,ne=!1,se=!1,ie=t.createWriteStream(null,{fd:process.stderr.fd}),ae=t.fstatSync(ie.fd),oe=t.createWriteStream(null,{fd:process.stdout.fd}),ce=t.fstatSync(oe.fd);function ue(){let e=1;te&&(++e,t.stat(te,((r,n)=>{if(r&&!r.message.startsWith("ENOENT:"))throw r;n&&n.dev===ae.dev&&n.ino===ae.ino||(ie.end(),ie=t.createWriteStream(null,{fd:t.openSync(te,"a")}),ae=t.fstatSync(ie.fd)),0==--e&&setTimeout(ue,6e4-Date.now()%6e4).unref()}))),re&&(++e,t.stat(re,((r,n)=>{if(r&&!r.message.startsWith("ENOENT:"))throw r;n&&n.dev===ce.dev&&n.ino===ce.ino||(oe.end(),oe=t.createWriteStream(null,{fd:t.openSync(re,"a")}),ce=t.fstatSync(oe.fd)),0==--e&&setTimeout(ue,6e4-Date.now()%6e4).unref()}))),0==--e&&setTimeout(ue,6e4-Date.now()%6e4).unref()}function le(e){if(e.sessionContext){const t=e.sessionContext;e.deviceId=t.deviceId,e.remoteAddress=X(t.httpRequest).remoteAddress,delete e.sessionContext}if(e.exception){const t=e.exception;e.exceptionName=t.name,e.exceptionMessage=t.message,e.exceptionStack=t.stack,delete e.exception}if(e.task&&(e.taskId=e.task._id,delete e.task),e.rpc){const t=e.rpc;t.acsRequest?(e.acsRequestId=t.id,e.acsRequestName=t.acsRequest.name,t.acsRequest.commandKey&&(e.acsRequestCommandKey=t.acsRequest.commandKey)):t.cpeRequest?(e.cpeRequestId=t.id,"Inform"===t.cpeRequest.name?(e.informEvent=t.cpeRequest.event.join(","),e.informRetryCount=t.cpeRequest.retryCount):(e.cpeRequestName=t.cpeRequest.name,t.cpeRequest.commandKey&&(e.cpeRequestCommandKey=t.cpeRequest.commandKey))):t.cpeFault&&(e.acsRequestId=t.id,e.cpeFaultCode=t.cpeFault.detail.faultCode,e.cpeFaultString=t.cpeFault.detail.faultString),delete e.rpc}if(e.fault){const t=e.fault;e.faultCode=t.code,e.faultMessage=t.message,delete e.fault}e.context&&(e.remoteAddress=X(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,r]of Object.entries(e))null==r&&delete e[t];return e}function fe(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(le(e))}${r.EOL}`}return`${JSON.stringify(le(e))}${r.EOL}`}function pe(e,t){const n={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};le(e);let s="";e.remoteAddress&&(s=e.deviceId&&n.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:e.remoteAddress+": ");const i=Object.keys(e);let a="";const o=[];for(const t of i)n[t]||o.push(`${t}=${JSON.stringify(e[t])}`);if(o.length&&(a="; "+o.join(" ")),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${s}${e.message}${a}${r.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${s}${e.message}${a}${r.EOL}`}function de(e){e.timestamp=(new Date).toISOString(),"json"===Y?(e=Object.assign({},ee,e),ie.write(fe(e,ne))):ie.write(pe(e,ne))}function me(e){e.severity="info",de(e)}function he(e){e.severity="error",de(e)}function ye(e){e.timestamp=(new Date).toISOString(),"json"===Q?(Object.assign(e,ee),oe.write(fe(e,se))):oe.write(pe(e,se))}function ve(e){e.severity="info",ye(e)}function ge(e){e.severity="warn",ye(e)}let we=0,Ae=[];function Se(){const e=b.default.fork();return e.on("error",(t=>{if("EPIPE"!==t.code)throw t;setTimeout((()=>{if(!e.isDead())throw t}),50)})),e}function _e(e,t,r){const n={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(n.exitCode=t),null!=r&&(n.signal=r),he(n);const s=Date.now();Ae.push(s);let i=0,a=0,o=0;if(Ae=Ae.filter((e=>{if(e>s-6e4)++i;else if(e>s-12e4)++a;else{if(!(e>s-18e4))return!1;++o}return!0})),i>5&&a>5&&o>5){process.exitCode=1,b.default.removeListener("exit",_e);for(const e in b.default.workers)b.default.workers[e].kill();he({message:"Too many crashes, exiting",pid:process.pid})}else we=Math.max(s,we+2e3),we!==s?setTimeout((()=>{process.exitCode||Se()}),we-s):Se()}function Ie(){b.default.removeListener("exit",_e);for(const e in b.default.workers)b.default.workers[e].kill()}const Oe=b.default.worker;let Ee,Ne;function be(){return new Promise(((e,t)=>{var r,n;setTimeout((()=>{t(new Error("Could not close server in a timely manner"))}),3e4).unref(),r=2e4,n=e,Ee?(setTimeout((()=>{if(!n)return;Ee.removeListener("request",Ne),Ee.setTimeout(1);const e=n;n=null,setTimeout(e,1e3)}),r).unref(),Ee.close((()=>{if(!n)return;const e=n;n=null,setTimeout(e,50)}))):n()}))}function Te(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/,((e,r)=>{const n=r.charAt(0),s=r.slice(1);return"u"===n?String.fromCharCode(parseInt(s,16)):t.hasOwnProperty(n)?t[n]:n}))}function De(e,t){if(!Array.isArray(e))return t(e);let r;for(let n=1;n<e.length;++n){const s=De(e[n],t);s!==e[n]&&(r=r||e.slice(),r[n]=s)}return t(r||e)}async function xe(e,t){if(!Array.isArray(e))return t(e);let r;for(let n=1;n<e.length;++n){const s=await xe(e[n],t);s!==e[n]&&(r=r||e.slice(),r[n]=s)}return t(r||e)}function Ce(e,t){return L.default.seqMap(t,L.default.seq(e,t).many(),((e,t)=>t.reduce(((e,t)=>{const[r,n]=t;return Array.isArray(e)&&r===e[0]?e.concat([n]):Array.isArray(n)&&r===n[0]?[r,e].concat(n.slice(1)):[r,e,n]}),e)))}const Re=L.default.createLanguage({ComparisonOperator:function(){return L.default.alt(L.default.string(">="),L.default.string("<>"),L.default.string("<="),L.default.string("="),L.default.string(">"),L.default.string("<")).skip(L.default.optWhitespace)},LikeOperator:function(){return L.default.alt(L.default.regexp(/like/i).result("LIKE").desc("LIKE"),L.default.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace)},IsNullOperator:function(){return L.default.alt(L.default.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),L.default.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace)},NotOperator:function(){return L.default.regexp(/not/i).result("NOT").notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("NOT")},AndOperator:function(){return L.default.regexp(/and/i).result("AND").notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("AND")},OrOperator:function(){return L.default.regexp(/or/i).result("OR").notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("OR")},Parameter:function(e){return L.default.alt(L.default.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(L.default.string("{").skip(L.default.optWhitespace),L.default.string("}"))).atLeast(1).map((e=>["PARAM",e.length>1?["||"].concat(e):e[0]])).skip(L.default.optWhitespace).desc("parameter")},StringValueSql:function(){return L.default.regexp(/'([^']*)'/,1).atLeast(1).skip(L.default.optWhitespace).map((e=>e.join("'"))).desc("string")},StringValueJs:function(){return L.default.regexp(/"((?:\\.|.)*?)"/,1).skip(L.default.optWhitespace).map(Te).desc("string")},NumberValue:function(){return L.default.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return L.default.alt(L.default.regexp(/true/i).result(!0).desc("TRUE"),L.default.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace)},NullValue:function(){return L.default.regexp(/null/i).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return L.default.seqMap(L.default.regexp(/([a-zA-Z0-9_]+)/,1).skip(L.default.optWhitespace).desc("function"),e.ExpressionList.wrap(L.default.string("(").skip(L.default.optWhitespace),L.default.string(")").skip(L.default.optWhitespace)),((e,t)=>["FUNC",e.toUpperCase()].concat(t)))},WhenPair:function(e){return L.default.seq(L.default.regexp(/when/i).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("WHEN").then(e.Expression),L.default.regexp(/then/i).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("THEN").then(e.Expression))},CaseStatement:function(e){return L.default.seqMap(L.default.regexp(/case/i).result("CASE").notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("CASE"),e.WhenPair.many(),L.default.regexp(/else/i).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/)).skip(L.default.optWhitespace).desc("ELSE").then(e.Expression).map((e=>[[!0,e]])).fallback(null).skip(L.default.regex(/end/i).notFollowedBy(L.default.regexp(/[a-zA-Z0-9_]/))).skip(L.default.optWhitespace),((...e)=>e.flat(2)))},Value:function(e){return L.default.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue,e.CaseStatement)},ValueExpression:function(e){return Ce(L.default.string("||").skip(L.default.optWhitespace),Ce(L.default.alt(L.default.string("+"),L.default.string("-")).skip(L.default.optWhitespace),Ce(L.default.alt(L.default.string("*"),L.default.string("/")).skip(L.default.optWhitespace),L.default.alt(e.Value,e.Parameter,e.Expression.wrap(L.default.string("(").skip(L.default.optWhitespace),L.default.string(")").skip(L.default.optWhitespace))))))},Comparison:function(e){return L.default.alt(L.default.seqMap(e.ValueExpression,e.IsNullOperator,((e,t)=>[t,e])),L.default.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,((e,t,r)=>[t,e,r])),L.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(L.default.regexp(/escape/i).result("ESCAPE").skip(L.default.whitespace).desc("ESCAPE")),e.ValueExpression,((e,t,r,n)=>[t,e,r,n])),L.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,((e,t,r)=>[t,e,r])))},ExpressionList:function(e){return e.Expression.sepBy(L.default.string(",").skip(L.default.optWhitespace))},Expression:function(e){return Ce(e.OrOperator,Ce(e.AndOperator,(t=e.NotOperator,r=e.Comparison.or(e.ValueExpression),L.default.seq(t,r).or(r)))).trim(L.default.optWhitespace);var t,r}});function Pe(e){return e?Re.Expression.tryParse(e):null}function Le(e,t=0){if(!Array.isArray(e))return JSON.stringify(e);const r={OR:10,AND:11,NOT:12,"=":20,"<>":20,">":20,">=":20,"<":20,"<=":20,LIKE:20,"NOT LIKE":20,"IS NULL":20,"IS NOT NULL":20,"||":30,"+":31,"-":31,"*":32,"/":32},n=e[0].toUpperCase();function s(e){return r[n]<=t?`(${e})`:e}if("FUNC"===n)return s(`${e[1]}(${e.slice(2).map((e=>Le(e))).join(", ")})`);if("PARAM"===n)return"string"==typeof e[1]?s(e[1]):Array.isArray(e[1])&&"||"===e[1][0]?s(e[1].slice(1).map((e=>"string"==typeof e?e:`{${Le(e)}}`)).join("")):s(`{${Le(e[1])}}`);if("IS NULL"===n||"IS NOT NULL"===n)return s(`${Le(e[1],r[n])} ${n}`);if("LIKE"===n||"NOT LIKE"===n)return e[3]?s(`${Le(e[1],r[n])} ${n} ${Le(e[2],r[n])} ESCAPE ${Le(e[3],r[n])}`):s(`${Le(e[1],r[n])} ${n} ${Le(e[2],r[n])}`);if("CASE"===n){const t=["CASE"];for(let r=1;r<e.length-1;r+=2){if(!Array.isArray(e[r])&&e[r]){null!=e[r+1]&&t.push("ELSE",Le(e[r+1]));break}t.push("WHEN",Le(e[r]),"THEN",Le(e[r+1]))}return t.push("END"),t.join(" ")}if(n in r){const t=e.slice(1).map(((t,n)=>Le(t,r[e[0]]+Math.min(n-1,0))));return s("NOT"===n?`${n} ${t[0]}`:t.join(` ${n} `))}throw new Error("Unrecognized operator "+e[0])}const Me=Array.isArray,ke=new WeakMap,$e={};function qe(e,t){let r=!0;for(;r;){r=!1;for(let n=2;n<e.length;++n){const s=t(e[n-1],e[n],n-2);s!==$e&&(r=!0,(e=e.slice()).splice(n-1,2,s))}}return 2===e.length?e[1]:e}function je(e,t="",r=""){const n={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let s=function(e,t){const r=e.split("");for(let e=0;e<r.length;++e){const n=r[e];if(n===t)r[e]=r[e+1]||"",r[e+1]="";else if("_"===n)r[e]="\\_";else if("%"===n)for(r[e]="\\%";"%"===r[e+1];)r[++e]=""}return r.filter((e=>e))}(e,t);if(!s.length)return new RegExp("^$",r);s=s.map((e=>n[e]||e)),s[0]=".*"===s[0]?"":"^"+s[0];const i=s.length-1;return s[i]=[".*",""].includes(s[i])?"":s[i]+"$",new RegExp(s.join(""),r)}function Ue(e,t){return"boolean"==typeof e&&(e=+e),"boolean"==typeof t&&(t=+t),typeof e!=typeof t?"string"==typeof e?1:-1:e>t?1:e<t?-1:0}function We(e){switch(typeof e){case"number":return e;case"boolean":return+e;case"string":return parseFloat(e)||0}}function Fe(e){switch(typeof e){case"string":return e;case"number":return e.toString();case"boolean":return(+e).toString()}}function Ge(e){if(!Array.isArray(e))return e;if("CASE"===e[0]){for(let t=1;t<e.length;t+=2){if(Array.isArray(e[t]))return e;if(e[t])return e[t+1]}return null}if("FUNC"===e[0]){if("COALESCE"===e[1]){const t=[];for(let r=2;r<e.length;++r){const n=e[r];if(null!=n&&(t.push(n),!Array.isArray(n)))break}return t.length?1===t.length?t[0]:["FUNC","COALESCE",...t]:null}if("UPPER"===e[1]){if(null==e[2])return null;if(!Me(e[2]))return Fe(e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!Me(e[2]))return Fe(e[2]).toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null}else{if("AND"===e[0]){for(let t=1;t<e.length;++t)if(!Array.isArray(e[t])&&null!=e[t]&&!e[t])return!1;const t=[];for(let r=1;r<e.length;++r){const n=e[r];if(null==n)return null;Array.isArray(n)&&("AND"===n[0]?t.push(...n.slice(1)):t.push(n))}return!t.length||(1===t.length&&t.push(!0),["AND",...t])}if("OR"===e[0]){const t=[];for(let r=1;r<e.length;++r){const n=e[r];if(Array.isArray(n))"OR"===n[0]?t.push(...n.slice(1)):t.push(n);else if(n)return!0}return t.length?(1===t.length&&t.push(!1),["OR",...t]):!!e.some((e=>null==e))&&null}if("NOT"===e[0]){if(null==e[1])return null;if(!Me(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return Me(e[1])?e:null==e[1]||null;if("IS NOT NULL"===e[0])return Me(e[1])?e:null!=e[1]||null;if("LIKE"===e[0]){if(Me(e[1])||Me(e[2])||Me(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=ke.get(e);return t||(t=je(e[2],e[3]),ke.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(Me(e[1])||Me(e[2])||Me(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=ke.get(e);return t||(t=je(e[2],e[3]),ke.set(e,t)),!t.test(e[1])}if("="===e[0])return null==e[1]||null==e[2]?null:Me(e[1])||Me(e[2])?e:0===Ue(e[1],e[2]);if("<>"===e[0])return null==e[1]||null==e[2]?null:Me(e[1])||Me(e[2])?e:0!==Ue(e[1],e[2]);if(">"===e[0])return null==e[1]||null==e[2]?null:Me(e[1])||Me(e[2])?e:Ue(e[1],e[2])>0;if(">="===e[0])return null==e[1]||null==e[2]?null:Me(e[1])||Me(e[2])?e:Ue(e[1],e[2])>=0;if("<"===e[0])return null==e[1]||null==e[2]?null:Me(e[1])||Me(e[2])?e:Ue(e[1],e[2])<0;if("<="===e[0])return null==e[1]||null==e[2]?null:Me(e[1])||Me(e[2])?e:Ue(e[1],e[2])<=0;if("*"===e[0])return qe(e,((e,t)=>null==e||null==t?null:Me(e)||Me(t)?$e:We(e)*We(t)));if("/"===e[0])return qe(e,((e,t,r)=>null==e||null==t?null:Me(e)||Me(t)?$e:0===r?We(e)/We(t):We(e)*We(t)));if("+"===e[0])return qe(e,((e,t)=>null==e||null==t?null:Me(e)||Me(t)?$e:We(e)+We(t)));if("-"===e[0])return qe(e,((e,t,r)=>null==e||null==t?null:Me(e)||Me(t)?$e:0===r?We(e)-We(t):We(e)+We(t)));if("||"===e[0])return qe(e,((e,t)=>null==e||null==t?null:Me(e)||Me(t)?$e:Fe(e)+Fe(t)))}}return e}function Be(e,t,r,n){return De(e,(e=>{if(n&&(e=n(e)),!Me(e))return e;if("FUNC"===e[0]&&"NOW"===e[1]){if(r)return r}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!Me(e[1])){let r;return r="function"==typeof t?t(e[1]):t[e[1]],null==r?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return Ge(e)}))}async function Je(e,t,r,n){return xe(e,(async e=>{if(n&&(e=await n(e)),!Me(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(r)return r}else if("UPPER"===e[1]){if(null==e[2])return null;if(!Me(e[2]))return(""+e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!Me(e[2]))return(""+e[2]).toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!Me(e[1])){let r=t[e[1]];return null==r?null:("object"==typeof r&&(r=r.value?r.value[0]:null),r)}}return Ge(e)}))}function He(e,t){if(null!=e&&!e)return!1;if(null!=t&&!t)return!1;if(!Array.isArray(e)&&!Array.isArray(t))return null!=e&&null!=t||null;if(!Array.isArray(t)&&"AND"===e[0])return e;if(!Array.isArray(e)&&"AND"===t[0])return t;const r=["AND"];return Array.isArray(e)&&"AND"===e[0]?r.push(...e.slice(1)):r.push(e),Array.isArray(t)&&"AND"===t[0]?r.push(...t.slice(1)):r.push(t),r}function Ke(e,t){if(!Array.isArray(e)&&e)return!0;if(!Array.isArray(t)&&t)return!0;if(!Array.isArray(e)&&!Array.isArray(t))return(null==e||null==t)&&null;if(!Array.isArray(t)&&"OR"===e[0])return e;if(!Array.isArray(e)&&"OR"===t[0])return t;const r=["OR"];return Array.isArray(e)&&"OR"===e[0]?r.push(...e.slice(1)):r.push(e),Array.isArray(t)&&"OR"===t[0]?r.push(...t.slice(1)):r.push(t),r}function ze(e){const t=new Set;return De(e,(e=>(Me(e)&&"PARAM"===e[0]&&t.add(e[1]),e))),Array.from(t)}function Ve(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}function Ze(e){return encodeURIComponent(e).replace(/[!~*'()]/g,(e=>"%"+e.charCodeAt(0).toString(16).toUpperCase())).replace(/0x(?=[0-9A-Z]{2})/g,"0%78").replace(/%/g,"0x")}function Xe(e){return decodeURIComponent(e.replace(/0x(?=[0-9A-Z]{2})/g,"%"))}const Ye=Array.isArray;function Qe(e){return De(e,(e=>{if(!Ye(e))return e;if("PARAM"===e[0]){const t=e[1];if("DeviceID.ID"===t)return["PARAM","_id"];if("DeviceID"===t)return["PARAM","_deviceId"];if(t.startsWith("DeviceID."))return["PARAM","_deviceId._"+t.slice(9)];if("Events.Inform"===t)return["PARAM","_lastInform"];if("Events.Registered"===t)return["PARAM","_registered"];if("Events.0_BOOTSTRAP"===t)return["PARAM","_lastBootstrap"];if("Events.1_BOOT"===t)return["PARAM","_lastBoot"]}else if(Ye(e[1])&&"PARAM"===e[1][0]&&e[1][1].startsWith("Tags.")){const t=Xe(e[1][1].slice(5));if("IS NULL"===e[0])return["_tags",t,!1];if("IS NOT NULL"===e[0])return["_tags",t,!0];if("="===e[0]&&!0===e[2])return["_tags",t,!0];if("<>"===e[0]&&!0!==e[2])return["_tags",t,!0]}else if(["=","<>",">",">=","<","<=","LIKE","NOT LIKE","IS NULL","IS NOT NULL"].includes(e[0])){let t=De(e,(e=>Ye(e)&&"PARAM"===e[0]&&"string"==typeof e[1]&&!e[1].startsWith("_")?["PARAM",e[1]+"._value"]:e));if("number"==typeof t[2]){const e=t.slice();e[2]=new Date(t[2]),t=["OR",t,e]}return t}return e}))}function et(e){return De(e,(e=>{if(!Ye(e))return e;if(["=","<>",">",">=","<","<="].includes(e[0])){const t=e.slice();return"PARAM"===t[1][0]&&"_id"===t[1][1]?t[2]=new y.ObjectID(t[2]):("PARAM"===t[1][0]&&"timestamp"===t[1][1]||"PARAM"===t[1][0]&&"expiry"===t[1][1])&&(t[2]=new Date(t[2])),t}return e}))}function tt(e){return De(e,(e=>{if(!Ye(e))return e;if(["=","<>",">",">=","<","<="].includes(e[0])){const t=e.slice();return("PARAM"===t[1][0]&&"timestamp"===t[1][1]||"PARAM"===t[1][0]&&"expiry"===t[1][1])&&(t[2]=new Date(t[2])),t}return e}))}function rt(e){if(!Ye(e)){if(!0===e)return{};throw new Error("Primitives are not valid queries")}return function e(t,r){const n=t[0];if("AND"===n&&2===(t=t.filter((e=>!0!==e))).length)return e(t[1],r);if("OR"===n&&2===(t=t.filter((e=>!1!==e))).length)return e(t[1],r);if(!r&&"AND"===n||r&&"OR"===n)return{$and:t.slice(1).map((t=>e(t,r)))};if(!r&&"OR"===n||r&&"AND"===n)return{$or:t.slice(1).map((t=>e(t,r)))};if("NOT"===n)return e(t[1],!r);if(Ye(t[2]))throw new Error(`Invalid RHS operand of ${n} clause`);if("LIKE"===n||"NOT LIKE"===n){let e,s;if("NOT LIKE"===n&&(r=!r),!Array.isArray(t[1]))throw new Error(`Invalid LHS operand of ${n} clause`);if("FUNC"===t[1][0]&&"UPPER"===t[1][1]){if(t[2]!==t[2].toUpperCase())throw new Error(`Invalid RHS operand of ${n} clause`);e=t[1][2][1],s="i"}else if("FUNC"===t[1][0]&&"LOWER"===t[1][1]){if(t[2]!==t[2].toLowerCase())throw new Error(`Invalid RHS operand of ${n} clause`);e=t[1][2][1],s="i"}else{if("PARAM"!==t[1][0])throw new Error(`Invalid LHS operand of ${n} clause`);e=t[1][1],s=""}const i=je(t[2],t[3],s);return r?{[e]:{$nin:[i,null]}}:{[e]:i}}if("_tags"===n){let e=t[2];return r&&(e=!e),e?{_tags:t[1]}:{_tags:{$ne:t[1]}}}if(!Ye(t[1])||"PARAM"!==t[1][0])throw new Error(`Invalid LHS operand of ${n} clause`);if("IS NULL"===n){return{[t[1][1]]:null}}if("IS NOT NULL"===n){return{[t[1][1]]:{$ne:null}}}if(Ye(t[2])||null==t[2])throw new Error(`Invalid RHS operand of ${n} clause`);if("="===n){const e=t[1][1],n=t[2];return r?{[e]:{$nin:[n,null]}}:{[e]:n}}if("<>"===n){const e=t[1][1],n=t[2];return r?{[e]:n}:{[e]:{$nin:[n,null]}}}if(">"===n){const e=t[1][1],n=t[2];return r?{[e]:{$lte:n}}:{[e]:{$gt:n}}}if(">="===n){const e=t[1][1],n=t[2];return r?{[e]:{$lt:n}}:{[e]:{$gte:n}}}if("<"===n){const e=t[1][1],n=t[2];return r?{[e]:{$gte:n}}:{[e]:{$lt:n}}}if("<="===n){const e=t[1][1],n=t[2];return r?{[e]:{$gt:n}}:{[e]:{$lte:n}}}throw new Error("Unrecognized operator "+n)}(e,!1)}function nt(e){const t=+e;return isNaN(t)?""+e:t}function st(e){const t={};return function e(t,r,n,s){for(const[i,a]of Object.entries(t)){if(!r)if("_lastInform"===i)n["Events.Inform"]={value:[nt(a),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_registered"===i)n["Events.Registered"]={value:[nt(a),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_lastBoot"===i)n["Events.1_BOOT"]={value:[nt(a),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_lastBootstrap"===i)n["Events.0_BOOTSTRAP"]={value:[nt(a),"xsd:dateTime"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_id"===i)n["DeviceID.ID"]={value:[a,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_deviceId"===i)n["DeviceID.Manufacturer"]={value:[a._Manufacturer,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s},n["DeviceID.OUI"]={value:[a._OUI,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s},n["DeviceID.ProductClass"]={value:[a._ProductClass,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s},n["DeviceID.SerialNumber"]={value:[a._SerialNumber,"xsd:string"],valueTimestamp:s,writable:!1,writableTimestamp:s,object:!1,objectTimestamp:s};else if("_tags"===i){n.Tags={writable:!1,writableTimestamp:s,object:!0,objectTimestamp:s};for(const e of a)n["Tags."+Ze(e)]={value:[!0,"xsd:boolean"],valueTimestamp:s,writable:!0,writableTimestamp:s,object:!1,objectTimestamp:s}}if(i.startsWith("_"))continue;let o=s;r?+t._timestamp>s&&(o=+t._timestamp):o=+(t._timestamp||1);const c={};null!=a._value?(c.value=[a._value instanceof Date?+a._value:a._value,a._type],c.valueTimestamp=+(a._timestamp||o),c.object=!1,c.objectTimestamp=o):null!=a._object&&(c.object=a._object,c.objectTimestamp=o),null!=a._writable&&(c.writable=a._writable,c.writableTimestamp=o),null!=a._notification&&(c.notification=a._notification,c.notificationTimestamp=+a._attributesTimestamp||1),null!=a._accessList&&(c.accessList=a._accessList,c.accessListTimestamp=+a._attributesTimestamp||1);const u=r?`${r}.${i}`:i;n[u]=c,(c.object||null==a.object)&&e(a,u,n,o)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}function it(e){const t=Object.assign({},e);return t.timestamp&&(t.timestamp=+t.timestamp),t.expiry&&(t.expiry=+t.expiry),t}function at(e){const t=Object.assign({},e);return t._id=""+t._id,t.timestamp&&(t.timestamp=+t.timestamp),t.expiry&&(t.expiry=+t.expiry),t}function ot(e){return!Object.keys(e).length||function e(t){const r=[];for(const[n,s]of Object.entries(t))if("$"===n[0])if("$and"===n){const t=["AND"];for(const r of Object.values(s))t.push(e(r));r.push(t)}else{if("$or"!==n)throw new Error(`Operator ${n} not supported`);{const t=["OR"];for(const r of Object.values(s))t.push(e(r));r.push(t)}}else if("_tags"===n)if("object"==typeof s){if(Ye(s))throw new Error("Invalid type");const e=[];for(const[t,r]of Object.entries(s))if("$ne"===t){if("string"!=typeof s.$ne)throw new Error("Only string values are allowed for _tags");e.push(["IS NULL",["PARAM","Tags."+Ze(r)]])}else{if("$eq"!==t)throw new Error("Invalid tag query");if("string"!=typeof s.$eq)throw new Error("Only string values are allowed for _tags");e.push(["IS NOT NULL",["PARAM","Tags."+Ze(r)]])}1===e.length?r.push(e[0]):e.length>1&&r.push(["AND",...e])}else r.push(["IS NOT NULL",["PARAM","Tags."+Ze(s)]]);else if(n.startsWith("Tags.")){let e;if("boolean"==typeof s)e=s;else if(s.hasOwnProperty("$eq"))e=!!s.$eq;else if(s.hasOwnProperty("$ne"))e=!s.$ne;else{if(!s.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!s.$exists}r.push([e?"IS NOT NULL":"IS NULL",["PARAM",n]])}else if("object"==typeof s){if(Ye(s))throw new Error("Invalid type");const e=[];for(const[t,r]of Object.entries(s)){if("$eq"===t)e.push(["=",["PARAM",n],r]);else if("$ne"===t)e.push(["OR",["<>",["PARAM",n],r],["IS NULL",["PARAM",n]]]);else if("$lt"===t)e.push(["<",["PARAM",n],r]);else if("$lte"===t)e.push(["<=",["PARAM",n],r]);else if("$gt"===t)e.push([">",["PARAM",n],r]);else{if("$gte"!==t)throw new Error(`Operator ${t} not supported`);e.push([">=",["PARAM",n],r])}if(!["string","number","boolean"].includes(typeof r))throw new Error(`Invalid value for ${t} operator`)}if(1===e.length)r.push(e[0]);else if(e.length>1){const t=["AND"];r.push(t.concat(e))}}else r.push(["=",["PARAM",n],s]);return 1===r.length?r[0]:0===r.length||["AND",...r]}(e)}function ct(e){const t=Object.assign({},e);if(t.precondition)try{Pe(t.precondition)}catch(e){t.precondition=ot(JSON.parse(t.precondition)),t.precondition=t.precondition.length?Le(t.precondition):""}if(t.events){const e=[];for(const[r,n]of Object.entries(t.events))e.push(n?r:"-"+r);t.events=e.join(", ")}const r=t.configurations[0];return 1===t.configurations.length&&"provision"===r.type&&r.name&&r.name.length&&(t.provision=r.name,t.provisionArgs=r.args?r.args.map((e=>Le(e))).join(", "):""),delete t.configurations,t}function ut(e){const t={};return t._id=e._id,e.metadata&&(t["metadata.fileType"]=e.metadata.fileType||"",t["metadata.oui"]=e.metadata.oui||"",t["metadata.productClass"]=e.metadata.productClass||"",t["metadata.version"]=e.metadata.version||""),t}function lt(e){const t=Object.assign({},e);t.precondition||(t.precondition=""),Pe(t.precondition),t.weight=parseInt(t.weight)||0;const r={};if(t.events)for(let e of t.events.split(",")){let t=!0;e=e.trim(),e.startsWith("-")&&(t=!1,e=e.slice(1).trim()),e&&(r[e]=t)}if(t.events=r,!t.provision)throw new Error("Invalid preset provision");const n={type:"provision",name:t.provision,args:null};var s;return t.provisionArgs&&(n.args=(s=t.provisionArgs)?Re.ExpressionList.tryParse(s):[]),delete t.provision,delete t.provisionArgs,t.configurations=[n],t}function ft(e,t){return e+t}function pt(e,t){return e*t}function dt(e,t){return e/t}function mt(e,t){return e%t}function ht(e){return Number(e)}function yt(e,t){return e!==t}function vt(e,t){return e<t}const gt=BigInt,wt=gt(0),At=gt(1),St=gt(2),_t=gt(-1);class It{constructor(e){this.map=new Map,e?(this.map.set(e,1),this.sortedKeys=[e]):this.sortedKeys=[]}reciprocal(){const e=new It;e.sortedKeys=this.sortedKeys,e.map=new Map;for(const[t,r]of this.map)e.map.set(t,0-r);return e}static multiply(e,t){const r=new It;r.sortedKeys=e.sortedKeys.slice(),r.map=new Map(e.map);for(const[e,n]of t.map){const t=r.map.get(e);if(t){const s=n+t;s?r.map.set(e,s):(r.map.delete(e),r.sortedKeys=r.sortedKeys.filter((t=>t!==e)))}else r.map.set(e,n),r.sortedKeys.push(e)}return r.sortedKeys.sort(((e,t)=>e.length!==t.length?t.length-e.length:e>t?1:e<t?-1:0)),r}static compare(e,t){if(e.sortedKeys.length!==t.sortedKeys.length)return t.sortedKeys.length-e.sortedKeys.length;for(let r=0;r<e.sortedKeys.length;++r){const n=e.sortedKeys[r],s=e.map.get(n),i=t.sortedKeys[r],a=t.map.get(i);if(s!==a)return a-s;if(n.length>i.length)return-1;if(n.length<i.length)return 1;if(n>i)return 1;if(n<i)return-1}return 0}}function Ot(e,t){for(;yt(t,wt);){const r=t;t=mt(e,t),e=r}return e}class Et{constructor(e){this.terms=e}static simplifyTerms(e){const t=e.slice().sort(((e,t)=>It.compare(e.indeterminates,t.indeterminates)));for(let e=1;e<t.length;++e){const r=t[e-1],n=t[e];if(0===It.compare(r.indeterminates,n.indeterminates)){const s=ft(pt(r.coefficientNumerator,n.coefficientDenominator),pt(n.coefficientNumerator,r.coefficientDenominator)),i=pt(r.coefficientDenominator,n.coefficientDenominator),a=Ot(s,i);t[e]={indeterminates:n.indeterminates,coefficientNumerator:dt(s,a),coefficientDenominator:dt(i,a)},t[e-1]={indeterminates:r.indeterminates,coefficientNumerator:wt,coefficientDenominator:r.coefficientDenominator}}}return t.filter((e=>yt(e.coefficientNumerator,wt)))}static fromIndeterminate(e){const t=new It(JSON.stringify(e));return new Et([{indeterminates:t,coefficientNumerator:At,coefficientDenominator:At}])}static fromConstant(e){const[t,r]=Math.abs(e).toString(2).split(".",2);let n=gt("0b"+t);e<0&&(n=pt(n,_t));let s=At;var i,a;r&&(i=St,a=gt(r.length),s=i**a,n=ft(pt(n,s),gt("0b"+r)));const o=[{indeterminates:new It,coefficientNumerator:n,coefficientDenominator:s}];return new Et(o)}negation(){const e=this.terms.map((e=>({indeterminates:e.indeterminates,coefficientNumerator:pt(e.coefficientNumerator,_t),coefficientDenominator:e.coefficientDenominator})));return new Et(e)}reciprocal(){const e=this.terms.map((e=>({indeterminates:e.indeterminates.reciprocal(),coefficientNumerator:e.coefficientDenominator,coefficientDenominator:e.coefficientNumerator})));return new Et(e)}constant(){const e=this.terms.filter((e=>!e.indeterminates.sortedKeys.length));return new Et(e)}add(e){return new Et(Et.simplifyTerms(this.terms.concat(e.terms)))}subtract(e){return this.add(e.negation())}multiply(e){const t=[];for(const r of this.terms)for(const n of e.terms){const e=pt(r.coefficientNumerator,n.coefficientNumerator),s=pt(r.coefficientDenominator,n.coefficientDenominator),i=Ot(e,s);t.push({indeterminates:It.multiply(r.indeterminates,n.indeterminates),coefficientNumerator:dt(e,i),coefficientDenominator:dt(s,i)})}return new Et(Et.simplifyTerms(t))}divide(e){return this.multiply(e.reciprocal())}toString(){const e=[];for(const t of this.terms){const r=ht(t.coefficientNumerator)/ht(t.coefficientDenominator),n=[];if(t.indeterminates.sortedKeys.length){for(const e of t.indeterminates.sortedKeys){const r=t.indeterminates.map.get(e);for(let t=Math.abs(r);t>0;--t)r>0?n.push(e):n.push(`["/",1,${e}]`)}1!==r&&n.push(r.toString()),n.length>1?e.push(`["*",${n.join(",")}]`):e.push(n[0])}else e.push(r.toString())}return e.length?1===e.length?e[0]:`["+",${e.join(",")}]`:"0"}}class Nt{}class bt extends Nt{true(){return[[]]}false(){return[]}null(){return[]}}class Tt extends Nt{true(){return[]}false(){return[[]]}null(){return[]}}class Dt extends Nt{true(){return[]}false(){return[]}null(){return[[]]}}class xt extends Nt{constructor(e){if(super(),this.negate=!1,Array.isArray(e)){const t=e[0];"<>"===t?((e=e.slice())[0]="=",this.negate=!0):">="===t?((e=e.slice())[0]="<",this.negate=!0):"<="===t&&((e=e.slice())[0]=">",this.negate=!0)}this.expStr=JSON.stringify(e)}true(e){let t=e.get(this.expStr);return null==t&&e.set(this.expStr,t=e.size),[[t<<2^(this.negate?1:3)]]}false(e){let t=e.get(this.expStr);return null==t&&e.set(this.expStr,t=e.size),[[t<<2^(this.negate?3:1)]]}null(e){let t=e.get(this.expStr);return null==t&&e.set(this.expStr,t=e.size),[[t<<2,t<<2^2]]}}class Ct extends Nt{constructor(e){super(),this.exprSynth=e}true(e){return this.exprSynth.false(e)}false(e){return this.exprSynth.true(e)}null(e){return this.exprSynth.null(e)}}class Rt extends Nt{constructor(e){super(),this.exprSynth=e}true(e){return this.exprSynth.null(e)}false(e){return[...this.exprSynth.true(e),...this.exprSynth.false(e)]}null(){return[]}}class Pt extends Nt{constructor(...e){super(),this.exprSynths=e.filter((e=>!(e instanceof Tt)));const t=[];this.exprSynths=this.exprSynths.filter((e=>!(e instanceof Pt)||(t.push(...e.exprSynths),!1))),this.exprSynths.push(...t)}true(e){return 0===this.exprSynths.length?[]:1===this.exprSynths.length?this.exprSynths[0].true(e):this.exprSynths.some((e=>e instanceof bt))?[[]]:this.exprSynths.map((t=>t.true(e))).flat()}false(e){return 0===this.exprSynths.length?[[]]:1===this.exprSynths.length?this.exprSynths[0].false(e):this.exprSynths.some((e=>e instanceof bt||e instanceof Dt))?[]:w.complement(this.exprSynths.map((t=>w.complement(t.false(e)))).flat())}null(e){if(0===this.exprSynths.length)return[];if(1===this.exprSynths.length)return this.exprSynths[0].null(e);const t=this.exprSynths.map((t=>t.null(e))).flat(),r=this.exprSynths.map((t=>t.true(e))).flat();return w.complement([...w.complement(t),...r])}}class Lt extends Nt{constructor(...e){super(),this.exprSynths=e.filter((e=>!(e instanceof bt)));const t=[];this.exprSynths=this.exprSynths.filter((e=>!(e instanceof Lt)||(t.push(...e.exprSynths),!1))),this.exprSynths.push(...t)}true(e){return 0===this.exprSynths.length?[[]]:1===this.exprSynths.length?this.exprSynths[0].true(e):this.exprSynths.some((e=>e instanceof Tt||e instanceof Dt))?[]:w.complement(this.exprSynths.map((t=>w.complement(t.true(e)))).flat())}false(e){return 0===this.exprSynths.length?[]:1===this.exprSynths.length?this.exprSynths[0].false(e):this.exprSynths.some((e=>e instanceof Tt))?[[]]:this.exprSynths.map((t=>t.false(e))).flat()}null(e){if(0===this.exprSynths.length)return[];if(1===this.exprSynths.length)return this.exprSynths[0].null(e);const t=this.exprSynths.map((t=>t.null(e))).flat(),r=this.exprSynths.map((t=>t.false(e))).flat();return w.complement([...w.complement(t),...r])}}class Mt extends Nt{constructor(e){super(),this.exprSynths=e}true(e){const t=[],r=[];for(let n=0;n<this.exprSynths.length;n+=2){const s=this.exprSynths[n].true(e),i=this.exprSynths[n+1].true(e);t.push(...w.complement([...r,...w.complement(s),...w.complement(i)])),n<this.exprSynths.length-2&&r.push(...w.complement([...this.exprSynths[n].false(e),...this.exprSynths[n].null(e)]))}return t}false(e){const t=[],r=[];for(let n=0;n<this.exprSynths.length;n+=2){const s=this.exprSynths[n].true(e),i=this.exprSynths[n+1].false(e);t.push(...w.complement([...r,...w.complement(s),...w.complement(i)])),n<this.exprSynths.length-2&&r.push(...w.complement([...this.exprSynths[n].false(e),...this.exprSynths[n].null(e)]))}return t}null(e){const t=[],r=[];for(let n=0;n<this.exprSynths.length;n+=2){const s=this.exprSynths[n].true(e),i=this.exprSynths[n+1].null(e);t.push(...w.complement([...r,...w.complement(s),...w.complement(i)])),r.push(...w.complement([...this.exprSynths[n].false(e),...this.exprSynths[n].null(e)]))}return t.push(...w.complement([...r])),t}}const kt=Et.fromConstant(0),$t=Et.fromConstant(1),qt={"=":"=","<>":"<>",">":"<",">=":"<=","<":">","<=":">="};function jt(e){if(!Array.isArray(e))return e;const t=e[0];if("FUNC"===t&&"COALESCE"===e[1]){const t=["CASE"];for(let r=2;r<e.length;++r)t.push(jt(["IS NOT NULL",e[r]]),e[r]);return jt(t)}if("CASE"===t){const t=[];for(let r=1;r<e.length;r+=2){let n=e[r];if(n instanceof Et&&(n=JSON.parse(n.toString())),!Array.isArray(n)&&!n)continue;const s=e[r+1];if(Array.isArray(s)&&"CASE"===s[0]){for(let e=1;e<s.length;e+=2)t.push([He(n,s[e]),s[e+1]]);if(t.push([n,null]),!Array.isArray(n)&&n)break}else t.push([n,s])}for(;null==t[t.length-1][1];)t.pop();return["CASE",...t.flat()]}const r=new Map;for(const[t,n]of e.entries()){if(!Array.isArray(n))continue;if("CASE"!==n[0])continue;const e=[];for(let t=1;t<n.length;t+=2)e.push([n[t],n[t+1]]);r.set(t,e)}if(r.size){let t=[[!0,e]];for(const[e,n]of r){const r=[];for(const[s,i]of n)r.push(...t.map((t=>{const r=t[1].slice();return r[e]=i,[He(s,t[0]),r]})));t=r}for(const e of t)e[1]=jt(e[1]);if(!0===t[0][0])return t[0][1];for(;null==t[t.length-1][1];)t.pop();return["CASE",...t.flat()]}function n(e){return null==e?null:e instanceof Et?e:"number"==typeof e?Et.fromConstant(e):"string"==typeof e?Et.fromConstant(parseFloat(e)||0):"boolean"==typeof e?Et.fromConstant(+e):Et.fromIndeterminate(e)}if("+"===t){const t=[];for(let r=1;r<e.length;++r){const s=n(e[r]);if(null==s)return null;t.push(s)}return t.reduce(((e,t)=>e.add(t)),kt)}if("*"===t){const t=[];for(let r=1;r<e.length;++r){const s=n(e[r]);if(null==s)return null;t.push(s)}return t.reduce(((e,t)=>e.multiply(t)),$t)}if("-"===t){const t=[];for(let r=1;r<e.length;++r){const s=n(e[r]);if(null==s)return null;t.push(s)}return t.reduce(((e,t)=>e.subtract(t)))}if("/"===t){const t=[];for(let r=1;r<e.length;++r){const s=n(e[r]);if(null==s)return null;t.push(s)}return t.reduce(((e,t)=>e.divide(t)))}if(["=","<>",">",">=","<","<="].includes(t)){if(null==e[1]||null==e[2])return null;let r,n;if(e[1]instanceof Et?r=e[1]:"number"==typeof e[1]&&(r=Et.fromConstant(e[1])),e[2]instanceof Et?n=e[2]:"number"==typeof e[2]&&(n=Et.fromConstant(e[2])),r||n)if(r||(r=Et.fromIndeterminate(e[1])),n||(n=Et.fromIndeterminate(e[2])),r=r.subtract(n),n=r.constant().negation(),r=r.add(n),r.terms.length){let s=1;const i=r.terms[0].coefficientNumerator,a=r.terms[0].coefficientDenominator;(vt(i,wt)||vt(a,wt))&&(s*=-1);const o=new Et([{indeterminates:new It,coefficientNumerator:a,coefficientDenominator:i}]);r=r.multiply(o),n=n.multiply(o);const c=r.terms[0].indeterminates.sortedKeys;let u=r.terms[0].indeterminates.map.get(c[0])<0?-1:0;for(const e of r.terms)for(const t of e.indeterminates.map.values())u+=t;u<0&&(s*=-1,r=r.reciprocal(),n=n.reciprocal()),e=s<0?[qt[t],r,n]:[t,r,n]}else{if(e=[t,JSON.parse(r.toString()),JSON.parse(n.toString())],"="===t)return e[1]===e[2];if("<>"===t)return e[1]!==e[2];if(">"===t)return e[1]>e[2];if(">="===t)return e[1]>=e[2];if("<"===t)return e[1]<e[2];if("<="===t)return e[1]<=e[2]}}return e=Ge(e=e.map((e=>e instanceof Et?JSON.parse(e.toString()):e)))}function Ut(e){return e instanceof Nt?e:Array.isArray(e)?"CASE"===e[0]?new Mt(e.slice(1).map((e=>Ut(e)))):new xt(e):null==e?new Dt:e?new bt:new Tt}function Wt(e,t){if(!e.length)return!1;const r=[];for(const n of e){if(!n.length)return!0;const e=[];for(const r of n){let n=t.get(r>>>2);if(!(1&r)!=!(2&r)&&(n=["NOT",n]),Array.isArray(n)&&"NOT"===n[0]&&Array.isArray(n[1])){const e=n[1];n="IS NULL"===e[0]?["IS NOT NULL",...e.slice(1)]:"="===e[0]?["<>",...e.slice(1)]:"<>"===e[0]?["=",...e.slice(1)]:">"===e[0]?["<=",...e.slice(1)]:">="===e[0]?["<",...e.slice(1)]:"<"===e[0]?[">=",...e.slice(1)]:"<="===e[0]?[">",...e.slice(1)]:"NOT"===e[0]?e[1]:["NOT",e]}e.push(n)}e.length>1?r.push(["AND"].concat(e)):r.push(e[0])}return r.length>1?["OR"].concat(r):r[0]}function Ft(e){const t=new Map;for(const[r,n]of e){const e=n[0];if(["=",">","<"].includes(e)&&!Array.isArray(n[2])){const s=JSON.stringify(n[1]);let i=t.get(s);i||t.set(s,i=[]),i.push({op:e,rhs:n[2],var:r})}else{const e=JSON.stringify(n);let s=t.get(e);s||t.set(e,s=[]),s.push({op:"",rhs:null,var:r})}}const r=[],n=new Map;for(const[s,i]of t){const t=e.size;e.set(t,["IS NULL",JSON.parse(s)]),'["PARAM","DeviceID.ID"]'!==s&&'["PARAM","_id"]'!==s||r.push([t<<2^3]);const a=new Map;for(const e of i){if(!e.op)continue;const t=JSON.stringify(e.rhs),r=a.get(t);r?r.set(e.op,e.var):a.set(t,new Map([[e.op,e.var]]))}for(const[t,n]of a)if(n.size>1){if(!n.has("=")){const r=e.size;e.set(r,["=",JSON.parse(s),JSON.parse(t)]),i.push({op:"=",rhs:JSON.parse(t),var:r}),n.set("=",r)}if(!n.has(">")){const r=e.size;e.set(r,[">",JSON.parse(s),JSON.parse(t)]),i.push({op:">",rhs:JSON.parse(t),var:r}),n.set(">",r)}if(!n.has("<")){const r=e.size;e.set(r,["<",JSON.parse(s),JSON.parse(t)]),i.push({op:"<",rhs:JSON.parse(t),var:r}),n.set("<",r)}r.push([n.get("=")<<2^1,n.get(">")<<2^1,n.get("<")<<2^1])}for(let e=0;e<i.length;++e){const s=i[e];if(n.set(s.var,t),r.push([t<<2^3,s.var<<2^1]),r.push([t<<2^3,s.var<<2^3]),r.push([s.var<<2^0,s.var<<2^2,t<<2^2]),s.op)for(let t=e+1;t<i.length;++t){const e=i[t];if(!e.op)continue;let n=0;if(Array.isArray(s.rhs)||Array.isArray(e.rhs)){if(JSON.stringify(s.rhs)!==JSON.stringify(e.rhs))continue}else"string"==typeof s.rhs?"string"==typeof e.rhs?s.rhs>e.rhs?n=1:s.rhs<e.rhs&&(n=-1):n=1:n="string"==typeof e.rhs?-1:+s.rhs-+e.rhs;if(s.op===e.op)0===n?r.push([s.var<<2^1,e.var<<2^1]):"="===s.op?r.push([s.var<<2^3,e.var<<2^3]):">"===s.op&&n>0||"<"===s.op&&n<0?r.push([s.var<<2^3,e.var<<2^1]):("<"===s.op&&n>0||">"===s.op&&n<0)&&r.push([s.var<<2^1,e.var<<2^3]);else if("="===s.op||"="===e.op){let t=s,i=e,a=n;"="!==s.op&&(i=s,t=e,a=-n),">"!==i.op&&"<"!==i.op||(0===a?r.push([t.var<<2^3,i.var<<2^3]):a>0&&">"===i.op||a<0&&"<"===i.op?r.push([t.var<<2^3,i.var<<2^1]):r.push([t.var<<2^3,i.var<<2^3]))}else[">","<"].includes(s.op)&&[">","<"].includes(e.op)&&(">"===s.op&&n<0||"<"===s.op&&n>0?r.push([s.var<<2^1,e.var<<2^1]):r.push([s.var<<2^3,e.var<<2^3]))}}}return{dcSet:r,isNull:n}}function Gt(e,t){const r=[];e:for(const n of e){const e=new Map;for(const t of n)e.set(t>>2,(e.get(t>>2)||0)|1<<(3&t));const s=[],i=[];for(const[r,n]of e){if(10===n)continue e;const e=t.get(r)<<2,a=r<<2;5===n?s.push(3^e):1===n?i.push([3^e,3^a]):4===n?i.push([3^e,1^a]):8&n?s.push(3^a):2&n&&s.push(1^a)}let a=[s];for(;i.length;){const e=[],t=i.pop();for(const r of t)e.push(...a.map((e=>[...e,r])));a=e}r.push(...a)}return r}function Bt(e){const t=new Map;let r=e.true(t);const n=new Map(Array.from(t).map((([e,t])=>[t,JSON.parse(e)]))),{dcSet:s,isNull:i}=Ft(n);r=Gt(r,i);const a=Ht(i);return r=w.espresso(r,s,{canRaise:a}),Wt(r,n)}function Jt(e){if(!Array.isArray(e))return e;if("CASE"===e[0]){e=e.slice();for(let t=1;t<e.length;t+=2)e[t]=Ut(e[t]);return e}const t=e[0];if("IS NULL"===t)return new Rt(Ut(e[1]));if("IS NOT NULL"===t)return new Ct(new Rt(Ut(e[1])));if("NOT"===t)return new Ct(Ut(e[1]));if("OR"===t)return new Pt(...e.slice(1).map((e=>Ut(e))));if("AND"===t)return new Lt(...e.slice(1).map((e=>Ut(e))));for(let t=1;t<e.length;++t)if(e[t]instanceof Nt)e[t]=Bt(e[t]);else if(Array.isArray(e[t])&&"CASE"===e[t][0])for(let r=2;r<e[t].length;r+=2)e[t][r]instanceof Nt&&(e[t][r]=Bt(e[t][r]));return e}function Ht(e){return(t,r)=>{const n=t>>2,s=e.get(n);if(null!=s)return!(1&t)||(!!r.has(s<<2^2)||(!!r.has(s<<2^3)||!r.has(3^t)));for(const[t,s]of e)if(s===n&&!r.has(t<<2^1)&&!r.has(t<<2^3)){if(r.has(t<<2^0))return!1;if(r.has(t<<2^2))return!1}return!0}}function Kt(e,t=!1){if(e=function(e){return(e=De(e,jt))instanceof Et?e=JSON.parse(e.toString()):Array.isArray(e)&&"CASE"===e[0]&&(e=e.map((e=>e instanceof Et?JSON.parse(e.toString()):e))),e}(e),e=De(e,Jt),Array.isArray(e)&&"CASE"===e[0]){if(!t){const t=new Map,r=e.filter(((e,t)=>t%2)).map((e=>e.true(t))),n=new Map(Array.from(t).map((([e,t])=>[t,JSON.parse(e)]))),{dcSet:s,isNull:i}=Ft(n),a=Ht(i),o=["CASE"];for(let t=1;t<e.length;t+=2){let c=Gt(r[(t-1)/2],i);if(c=w.espresso(c,s,{canRaise:a}),!c.length)continue;const u=Wt(c,n);let l=e[t+1];if(l instanceof Nt&&(l=Bt(l)),o.push(u,l),!0===u)break;s.push(...c)}for(;null==o[o.length-1];)o.splice(-2);return o.length<3?null:o}e=Ut(e)}return t&&(e=Ut(e)),e instanceof Nt&&(e=Bt(e)),e}let zt;const Vt={files:"fs.files"};function Zt(){return zt||(zt=new Promise(((e,t)=>{const r=""+K("MONGODB_CONNECTION_URL");y.MongoClient.connect(r,{useNewUrlParser:!0,useUnifiedTopology:!0},((r,n)=>{r?t(r):(!function(e){e.db().collection("cache").createIndex({expire:1},{expireAfterSeconds:0})}(n),e(n))}))}))),zt}function Xt(e,t,r,n){let s;if(r=r||{},t=Kt(t=Be(t,null,Date.now()),!0),Array.isArray(t)){if("devices"===e)t=Qe(t);else if("tasks"===e)t=et(t);else if("faults"===e)t=tt(t);else if("users"===e){const e=ze(t);if(e.includes("password")||e.includes("salt"))return Promise.reject(new Error("Invalid users filter"))}s=rt(t)}else if(null!=t&&!t)return Promise.resolve([]);return new Promise(((t,i)=>{Zt().then((a=>{const o=a.db().collection(Vt[e]||e).find(s);if(r.projection){let t=r.projection;"devices"===e&&(t=function(e){if(!e)return e;const t={};for(const[r,n]of Object.entries(e))"DeviceID.ID"===r?t._id=1:r.startsWith("DeviceID")?(t["_deviceId._SerialNumber"]=n,t["_deviceId._OUI"]=n,t["_deviceId._ProductClass"]=n,t["_deviceId._Manufacturer"]=n):r.startsWith("Tags")?t._tags=n:r.startsWith("Events")?(t._lastInform=n,t._registered=n,t._lastBoot=n,t._lastBootstrap=n):t[r]=n;return t}(r.projection)),"presets"===e&&(t.configurations=1),o.project(t)}if("users"===e&&o.project({password:0,salt:0}),r.skip&&o.skip(r.skip),r.limit&&o.limit(r.limit),r.sort){let t=Object.entries(r.sort).sort(((e,t)=>Math.abs(t[1])-Math.abs(e[1]))).reduce(((e,[t,r])=>Object.assign(e,{[t]:Math.min(Math.max(r,-1),1)})),{});"devices"===e&&(t=function(e){if(!e)return e;const t={};for(const[r,n]of Object.entries(e))"DeviceID.ID"===r?t._id=n:r.startsWith("DeviceID.")?t["_deviceId._"+r.slice(9)]=n:"Events.Inform"===r?t._lastInform=n:"Events.Registered"===r?t._registered=n:"Events.1_BOOT"===r?t._lastBoot=n:"Events.0_BOOTSTRAP"===r?t._lastBootstrap=n:t[r+"._value"]=n;return t}(t)),o.sort(t)}n?o.forEach((t=>{"devices"===e?t=st(t):"faults"===e?t=it(t):"tasks"===e?t=at(t):"presets"===e?t=ct(t):"files"===e&&(t=ut(t)),n(t)}),(e=>{e?i(e):t()})):o.toArray(((r,n)=>r?i(r):("devices"===e?n=n.map((e=>st(e))):"faults"===e?n=n.map((e=>it(e))):"tasks"===e?n=n.map((e=>at(e))):"presets"===e?n=n.map((e=>ct(e))):"files"===e&&(n=n.map((e=>ut(e)))),t(n))))})).catch(i)}))}function Yt(e,t){let r;if(t=Kt(t=Be(t,null,Date.now()),!0),Array.isArray(t))"devices"===e?t=Qe(t):"tasks"===e?t=et(t):"faults"===e&&(t=tt(t)),r=rt(t);else if(null!=t&&!t)return Promise.resolve(0);return new Promise(((t,n)=>{Zt().then((s=>{s.db().collection(Vt[e]||e).find(r).count(((e,r)=>{e?n(e):t(r)}))})).catch(n)}))}function Qt(e,t,r){return new Promise(((n,s)=>{Zt().then((i=>{i.db().collection(Vt[e]||e).replaceOne({_id:t},r,{upsert:!0},(e=>{e?s(e):n()}))})).catch(s)}))}function er(e,t){return new Promise(((r,n)=>{Zt().then((s=>{s.db().collection(Vt[e]||e).deleteOne({_id:t},(e=>{e?n(e):r()}))})).catch(n)}))}function tr(e,t){return Qt("presets",e,t=lt(t))}function rr(e,t){t.script||(t.script="");try{new v.Script(`"use strict";(function(){\n${t.script}\n})();`)}catch(e){return Promise.reject(e)}return Qt("provisions",e,t)}function nr(e,t){return Qt("config",e,t)}function sr(e,t){return Qt("permissions",e,t)}function ir(e,t){return new Promise(((r,n)=>{Zt().then((s=>{s.db().collection("users").updateOne({_id:e},{$set:t},{upsert:!0},(e=>{e?n(e):r()}))})).catch(n)}))}function ar(e){return new Promise(((t,r)=>{Zt().then((n=>{new y.GridFSBucket(n.db()).delete(e,(e=>{e?r(e):t()}))})).catch(r)}))}function or(e){return er("faults",e)}function cr(e){return er("tasks",e)}async function ur(){zt&&await(await zt).close()}const lr=+K("MAX_CACHE_TTL");let fr,pr,dr,mr,hr,yr,vr,gr,wr,Ar,Sr,_r,Ir,Or,Er,Nr,br=0;async function Tr(){fr&&await(await fr).close()}async function Dr(e){Array.isArray(e)?await pr.deleteMany({_id:{$in:e}}):await pr.deleteOne({_id:e})}async function xr(e,t){const r=Math.random().toString(36).slice(2);const n=new Date(Date.now()-br),s=new Date(Date.now()-br+1e3*t);try{await pr.updateOne({_id:e,expire:{$lte:n}},{$set:{value:r,expire:s}},{upsert:!0})}catch(r){if(r&&11e3===r.code)return await new Promise((e=>setTimeout(e,200))),xr(e,t)}return async function(t){if(t){const n=new Date(Date.now()-br+1e3*t);if(1!==(await pr.updateOne({_id:e,value:r},{expire:n})).result.n)throw new Error("Lock expired")}else{if(1!==(await pr.deleteOne({_id:e,value:r})).result.n)throw new Error("Lock expired")}}}async function Cr(){Er&&await(await Er).close()}function Rr(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),S.schedule(S.parse.cron(t.join(" "),!0))}const Pr=new Map;let Lr=null,Mr=1;function kr(e,t="",r={}){for(const n of Object.keys(e)){const s=e[n];"object"!=typeof s||Array.isArray(s)?r[`${t}${n}`]=s:kr(s,`${t}${n}.`,r)}return r}async function $r(){const e=await async function(){return hr.find().toArray()}();let t=await async function(){return yr.find().toArray()}();t=t.map((e=>((e=kr(e))._keys&&e._keys.length||(e._keys=Object.keys(e).filter((e=>!e.startsWith("_")))),e))),e.sort(((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight));const r=[];for(const s of e){let e=null;if(s.schedule){const t=s.schedule.trim().split(/\s+/);e={md5:A.createHash("md5").update(s.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=Rr(t.join(" "))}catch(t){(n={message:"Invalid preset schedule",preset:s._id,schedule:s.schedule}).severity="warn",de(n),e.schedule=!1}}const i=s.events||{};let a=!0;if(s.precondition){try{a=Pe(s.precondition)}catch(e){a=ot(JSON.parse(s.precondition))}a=Be(a)}const o=s.provisions||[];for(const e of s.configurations)switch(e.type){case"age":o.push(["refresh",e.name,+e.age]);break;case"value":o.push(["value",e.name,e.value]);break;case"add_tag":o.push(["tag",e.tag,!0]);break;case"delete_tag":o.push(["tag",e.tag,!1]);break;case"provision":o.push([e.name].concat(e.args||[]));break;case"add_object":for(const r of t)if(r._id===e.object){const t=r._keys.map((e=>`${e}:${JSON.stringify(r[e])}`)).join(","),n=`${e.name}.[${t}]`;o.push(["instances",n,1]);for(const e in r)e.startsWith("_")||-1!==r._keys.indexOf(e)||o.push(["value",`${n}.${e}`,r[e]])}break;case"delete_object":for(const r of t)if(r._id===e.object){const t=r._keys.map((e=>`${e}:${JSON.stringify(r[e])}`)).join(","),n=`${e.name}.[${t}]`;o.push(["instances",n,0])}break;default:throw new Error("Unknown configuration type "+e.type)}r.push({name:s._id,channel:s.channel||"default",schedule:e,events:i,precondition:a,provisions:o})}var n;return r}async function qr(){const e=await async function(){return vr.find().toArray()}(),t={};for(const r of e)t[r._id]={},t[r._id].md5=A.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new v.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function jr(){const e=await async function(){return gr.find().toArray()}(),t={};for(const r of e)t[r._id]={},t[r._id].md5=A.createHash("md5").update(r.script).digest("hex"),t[r._id].script=new v.Script(`"use strict";(function(){\n${r.script}\n})();`,{filename:r._id,lineOffset:-1,timeout:50});return t}async function Ur(){const e=await async function(){return _r.find().toArray()}(),t={};for(const r of e)t[r.role]||(t[r.role]={}),t[r.role][r.access]||(t[r.role][r.access]={}),t[r.role][r.access][r.resource]={access:r.access,filter:Pe(r.filter||"true")},r.validate&&(t[r.role][r.access][r.resource].validate=Pe(r.validate));return t}async function Wr(){const e=await Ar.find().toArray(),t={};for(const r of e){const e=r.filename||r._id.toString();t[e]={},t[e].length=r.length,t[e].md5=r.md5,t[e].contentType=r.contentType}return t}async function Fr(){const e=await async function(){return Ir.find().toArray()}(),t={};for(const r of e)t[r._id]={password:r.password,salt:r.salt,roles:r.roles.split(",").map((e=>e.trim()))};return t}async function Gr(){const e=await async function(){return(await Or.find().toArray()).map((e=>({id:e._id,value:Pe(e.value)})))}();e.sort(((e,t)=>e.id>t.id?1:e.id<t.id?-1:0));const t={filters:{},device:{},index:{},overview:{}},r={};for(const n of e){const e=Be(n.value);if(r[n.id]=e,n.id.startsWith("ui.")){const r=n.id.split(".");r.shift();let s=t;for(;r.length>1;){const e=r.shift();"object"!=typeof s[e]&&(s[e]={}),s=s[e]}s[r[0]]=e}}return[r,t]}async function Br(){if(!Mr)return await new Promise((e=>setTimeout(e,20))),void await Br();Mr=0;const e=Date.now(),t=await async function(e){const t=new Date(Date.now()-br);if(Array.isArray(e)){const r=await pr.find({_id:{$in:e}}).toArray(),n={};e.forEach(((e,t)=>{n[e]=t}));const s=[];return r.forEach((e=>{e.expire>t&&(s[n[e._id]]=e.value)})),s}{const r=await pr.findOne({_id:{$in:[e]}});return r&&r.expire>t?r.value:null}}("presets_hash");if(Lr&&t===Lr)return void(Mr=e+(3e3-e%3e3));const r=await xr("presets_hash_lock",3),n=await Promise.all([$r(),qr(),jr(),Wr(),Ur(),Fr(),Gr()]),s={presets:n[0],provisions:n[1],virtualParameters:n[2],files:n[3],permissions:n[4],users:n[5],config:n[6][0],ui:n[6][1]};if(Lr){const e=Lr,t=Pr.get(e);setTimeout((()=>{Pr.get(e)===t&&Pr.delete(e)}),6e4).unref()}Lr=function(e){const t=A.createHash("md5");for(const r of e.presets)t.update(JSON.stringify(r.name)),t.update(JSON.stringify(r.channel)),t.update(JSON.stringify(r.schedule)),t.update(JSON.stringify(r.events)),t.update(JSON.stringify(r.precondition)),t.update(JSON.stringify(r.provisions));let r;r=Object.keys(e.provisions).sort(),t.update(JSON.stringify(r));for(const n of r)t.update(e.provisions[n].md5);r=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(r));for(const n of r)t.update(e.virtualParameters[n].md5);r=Object.keys(e.config).sort(),t.update(JSON.stringify(r));for(const n of r)t.update(JSON.stringify(e.config[n]));r=Object.keys(e.files).sort(),t.update(JSON.stringify(r));for(const n of r)t.update(JSON.stringify(e.files[n]));r=Object.keys(e.users).sort(),t.update(JSON.stringify(r));for(const n of r)t.update(JSON.stringify(e.users[n]));const n=Object.keys(e.permissions).sort();t.update(JSON.stringify(n));for(const s of n){const n=Object.keys(e.permissions[s]).sort();t.update(JSON.stringify(n));for(const i of n){r=Object.keys(e.permissions[s][i]).sort(),t.update(JSON.stringify(r));for(const n of r)t.update(JSON.stringify(e.permissions[s][i][n]))}}return t.digest("hex")}(s),Pr.set(Lr,s),await async function(e,t,r=lr){const n=new Date(Date.now()-br+1e3*r);await pr.replaceOne({_id:e},{_id:e,value:t,expire:n},{upsert:!0})}("presets_hash",Lr,300),await r(0),Mr=e+(3e3-e%3e3)}async function Jr(){return Date.now()>Mr&&await Br(),Lr}function Hr(e,t,r,n,s){const i=Pr.get(e);if(!i)throw new Error("Cache snapshot does not exist");const a={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in i.config)){if(t in a){let e;return r&&r.id?e=r.id:s&&(e=s(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),K(a[t],e)}return null}const o=Be(i.config[t],r,n,s);return Array.isArray(o)?null:o}function Kr(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.users}function zr(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.ui}function Vr(e){const t=(e=e.trim()).split(" ",1)[0],r={method:t};return Object.assign(r,function(e){const t={},r=e.split(",");let n;for(;null!=(n=r.shift());){const e=n.split("=",1)[0];if(e.length===n.length){if(!n.trim())continue;throw new Error("Unable to parse auth header")}let s=n.slice(e.length+1);if(/^\s*"/.test(s)){for(;!/[^\\]"\s*$/.test(s);){const e=r.shift();if(null==e)throw new Error("Unable to parse auth header");s+=","+e}try{s=JSON.parse(s)}catch(e){throw new Error("Unable to parse auth header")}}else s=s.trim();t[e.trim()]=s}return t}(e.slice(t.length+1))),r}function Zr(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function Xr(e,t,r,n,s,i){const a=A.randomBytes(8).toString("hex"),o="00000001";let c;i.qop&&(c=-1!==i.qop.indexOf(",")?"auth":i.qop);const u=function(e,t,r,n,s,i,a,o,c,u){const l=A.createHash("md5");l.update(e).update(":").update(t).update(":").update(r);const f=l.digest("hex"),p=A.createHash("md5");if(p.update(s).update(":").update(i),"auth-int"===a){const e=A.createHash("md5").update(o||"").digest("hex");p.update(":").update(e)}const d=p.digest("hex"),m=A.createHash("md5");return m.update(f).update(":").update(n),a&&m.update(":").update(u).update(":").update(c).update(":").update(a),m.update(":").update(d),m.digest("hex")}(e,i.realm,t,i.nonce,n,r,c,s,a,o);let l=`Digest username="${e}"`;return l+=`,realm="${i.realm}"`,l+=`,nonce="${i.nonce}"`,l+=`,uri="${r}"`,i.algorithm&&(l+=",algorithm="+i.algorithm),c&&(l+=`,qop=${c},nc=${o},cnonce="${a}"`),l+=`,response="${u}"`,i.opaque&&(l+=`,opaque="${i.opaque}"`),l}function Yr(e){return new Promise(((t,r)=>{A.randomBytes(e,((e,n)=>{e?r(e):t(n.toString("hex"))}))}))}function Qr(e,t){return new Promise(((r,n)=>{A.pbkdf2(e,t,1e4,128,"sha512",((e,t)=>{e?n(e):r(t.toString("hex"))}))}))}const en=+K("EXT_TIMEOUT"),tn={},rn=new Map;function nn(e){const t=rn.get(e[0]);t&&(rn.delete(e[0]),t({fault:e[1],value:e[2]}))}function sn(e){return new Promise((t=>{const r=Date.now()+5e3;e.kill();const n=setInterval((()=>{e.connected?Date.now()>r&&(e.kill("SIGKILL"),clearInterval(n),t()):(clearInterval(n),t())}),100)}))}async function an(){await Promise.all(Object.entries(tn).map((([e,t])=>(delete tn[e],sn(t)))))}const on=""+K("DEBUG_FILE"),cn=""+K("DEBUG_FORMAT"),un=new WeakMap;function ln(e){let t=un.get(e);return t||(t=new Date,un.set(e,t)),t}function fn(e,r,n,s){if(!on)return;const i={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:r,remotePort:n,body:s};if("yaml"===cn)t.appendFileSync(on,"---\n"+E.stringify(i));else{if("json"!==cn)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(on,JSON.stringify(i)+"\n")}}async function pn(e,t){let r,n;const s=await Je(e,{},0,(async e=>{if(!r&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:r}=await(s=e.slice(2),new Promise((e=>{const t=s[0],r=A.randomBytes(8).toString("hex");if(rn.set(r,e),!tn[t]){const n=O.spawn(W+"/bin/genieacs-ext",[t],{stdio:["inherit","inherit","inherit","ipc"]});tn[t]=n,n.on("error",(s=>{tn[t]===n&&(rn.delete(r)&&e({fault:{code:s.name,message:s.message},value:null}),sn(tn[t]),delete tn[t])})),n.on("disconnect",(()=>{tn[t]===n&&delete tn[t]})),n.on("message",nn)}return setTimeout((()=>{rn.delete(r)&&e({fault:{code:"timeout",message:"Extension timed out"},value:null})}),en),!!tn[t].connected&&tn[t].send([r,s.slice(1)])})));return t?null:r}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(r=e[2]||"",n=e[3]||""),t}var s;return e}));return[r,n,s]}function dn(e,r,n,s){return new Promise(((a,o)=>{const c=i.get(e,(r=>{r.resume(),a({statusCode:r.statusCode,headers:r.headers}),n&&(function(e,r,n,s){if(!on)return;const i=new Date,a=e.socket,o={event:"outgoing HTTP request",timestamp:i,remoteAddress:a.remoteAddress,deviceId:r,connection:ln(a),remotePort:n.port,method:n.method||"GET",url:n.path,headers:e.getHeaders(),body:s};if("yaml"===cn)t.appendFileSync(on,"---\n"+E.stringify(o));else{if("json"!==cn)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(on,JSON.stringify(o)+"\n")}}(c,s,e,null),function(e,r,n){if(!on)return;const s={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.socket.remoteAddress,deviceId:r,connection:ln(e.socket),statusCode:e.statusCode,headers:e.headers,body:n};if("yaml"===cn)t.appendFileSync(on,"---\n"+E.stringify(s));else{if("json"!==cn)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(on,JSON.stringify(s)+"\n")}}(r,s,null))})).on("error",(r=>{c.abort(),o(new Error("Device is offline")),n&&function(e,r,n,s){if(!on)return;const i={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:n.hostname,deviceId:r,connection:null,remotePort:n.port,method:n.method,url:n.path,headers:e.getHeaders(),error:s.message};if("yaml"===cn)t.appendFileSync(on,"---\n"+E.stringify(i));else{if("json"!==cn)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(on,JSON.stringify(i)+"\n")}}(c,s,e,r)})).on("socket",(e=>{e.setTimeout(r),e.on("timeout",(()=>{c.abort()}))}))}))}async function mn(e,t){if(!t){const r=await mr.findOne({_id:e});if(!r)throw new Error("No such device");t=st(r)}let r,n,s,a;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(r=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],n=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],a=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(r=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],n=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],s=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],a=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const o=_.parse(r).host,c=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]&&"string"==typeof e[1]){let r=e[1];if("id"===r)r="DeviceID.ID";else if("serialNumber"===r)r="DeviceID.SerialNumber";else if("productClass"===r)r="DeviceID.ProductClass";else if("oui"===r)r="DeviceID.OUI";else{if("remoteAddress"===r)return o;if("username"===r)return s;if("password"===r)return a}const n=t[r];if(n&&n.value)return n.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return o;if("USERNAME"===e[1])return s;if("PASSWORD"===e[1])return a}return e},u=await Jr(),l=Date.now(),f=+Hr(u,"cwmp.udpConnectionRequestPort",{},l,c),p=+Hr(u,"cwmp.connectionRequestTimeout",{},l,c),d=!!Hr(u,"cwmp.connectionRequestAllowBasicAuth",{},l,c);let m=function(e,t){const r=Pr.get(e);if(!r)throw new Error("Cache snapshot does not exist");return r.config[t]}(u,"cwmp.connectionRequestAuth");void 0===m&&(m=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),m=Be(m,{},l,c);const h=!!Hr(u,"cwmp.debug",{},l,c);let y;n&&(y=async function(e,t,r=0,n,s){const[i,a]=e.split(":",2),o=a?parseInt(a):80,c=Date.now(),u=I.createSocket({type:"udp4",reuseAddr:!0});let l,f;for(r&&u.bind({port:r,exclusive:!0}),[l,f,t]=await pn(t,null),null==l&&(l=""),null==f&&(f="");null!=l&&null!=f;){const r=Math.trunc(c/1e3),a=Math.trunc(4294967295*Math.random()),p=A.randomBytes(8).toString("hex"),d=`GET http://${e}?ts=${r}&id=${a}&un=${l}&cn=${p}&sig=${A.createHmac("sha1",f).update(`${r}${a}${l}${p}`).digest("hex")} HTTP/1.1\r\nHost: ${e}\r\n\r\n`,m=Buffer.from(d);for(let e=0;e<3;++e)await new Promise(((e,t)=>{u.send(m,0,m.length,o,i,(r=>{r?t(r):e(),n&&fn(i,s,o,d)}))}));[l,f,t]=await pn(t,null)}u.close()}(n,m,f,h,e));try{await async function(e,t,r,n,s,a){const o=_.parse(e);if("http:"!==o.protocol)throw new Error("Invalid connection request URL or protocol");let c,u,l;for(o.agent=new i.Agent({maxSockets:1,keepAlive:!0});!c||null!=u&&null!=l;){let e=o;if(c)if("Basic"===c.method){if(!r)throw new Error("Basic HTTP authentication not allowed");e=Object.assign({headers:{Authorization:Zr(u||"",l||"")}},o)}else{if("Digest"!==c.method)throw new Error("Unrecognized auth method");e=Object.assign({headers:{Authorization:Xr(u,l,o.path,"GET",null,c)}},o)}let i=await dn(e,n,s,a);if(0===i.statusCode&&c&&(i=await dn(e,n,s,a)),0===i.statusCode)throw new Error("Device is offline");if(200===i.statusCode||204===i.statusCode)return;if(401!==i.statusCode||!i.headers["www-authenticate"])throw new Error("Unexpected response code from device: "+i.statusCode);c=Vr(i.headers["www-authenticate"]),[u,l,t]=await pn(t,!1)}throw new Error("Incorrect connection request credentials")}(r,m,d,p,h,e)}catch(e){if(!y)throw e;await y}}async function hn(e,t,r){await new Promise((e=>setTimeout(e,500)));if(!await dr.findOne({_id:t},{projection:{_id:1}}))return"completed";const n={_id:`${e}:task_${t}`};return await wr.findOne(n,{projection:{_id:1}})?"fault":(r-=500)<=0?"timeout":hn(e,t,r)}function yn(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(e.expiry instanceof Date||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`);break;case"refreshObject":if("string"!=typeof e.objectName)throw new Error("Missing 'objectName' property");break;case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const r of e.parameterValues)if(!t(r))throw new Error(`Invalid parameter value '${r}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property");break;case"provisions":if(!Array.isArray(e.provisions)||!e.provisions.every((e=>e.every((e=>null==e||["boolean","number","string"].includes(typeof e))))))throw new Error("Invalid 'provisions' property")}return e}async function vn(e,t){switch(e){case"devices":await async function(e){await Promise.all([dr.deleteMany({device:e}),mr.deleteOne({_id:e}),wr.deleteMany({_id:{$regex:`^${Ve(e)}\\:`}}),Sr.deleteMany({_id:{$regex:`^${Ve(e)}\\:`}}),Dr(e+"_tasks_faults_operations")])}(t);break;case"files":await ar(t);break;case"faults":await async function(e){const t=e.split(":",1)[0],r=e.slice(t.length+1);await Promise.all([or(e),r.startsWith("task_")?cr(new y.ObjectID(r.slice(5))):null]),await Dr(t+"_tasks_faults_operations")}(t);break;case"provisions":await function(e){return er("provisions",e)}(t);break;case"presets":await function(e){return er("presets",e)}(t);break;case"virtualParameters":await function(e){return er("virtualParameters",e)}(t);break;case"config":await function(e){return er("config",e)}(t);break;case"permissions":await function(e){return er("permissions",e)}(t);break;case"users":await function(e){return er("users",e)}(t)}await Dr("presets_hash")}async function gn(e,t,r,n){for(const r of t)delete r._id,r.device=e;const s=(t=await async function(e){if(e&&!Array.isArray(e))e=[e];else if(!e||0===e.length)return e||[];for(const t of e)yn(t),t.uniqueKey&&await dr.deleteOne({device:t.device,uniqueKey:t.uniqueKey});return await dr.insertMany(e),e}(t)).map((e=>({_id:e._id,status:"pending"})));await Dr(e+"_tasks_faults_operations");try{await mn(e,n)}catch(e){return await Promise.all(s.map((e=>cr(new y.ObjectID(e._id))))),{connectionRequest:e.message,tasks:s}}const i=t[t.length-1];await hn(e,i._id,r);const a=[];for(const t of s)a.push(Xt("tasks",["=",["PARAM","_id"],t._id])),a.push(Xt("faults",["=",["PARAM","_id"],`${e}:task_${t._id}`]));const o=await Promise.all(a);for(const[e,t]of s.entries())0===o[2*e].length?t.status="done":1===o[2*e+1].length&&(t.status="fault",t.fault=o[2*e+1][0]);return await Promise.all(s.map((e=>cr(new y.ObjectID(e._id))))),{connectionRequest:"OK",tasks:s}}async function wn(e,t,r){"presets"===e?await tr(t,r):"provisions"===e?await rr(t,r):"virtualParameters"===e?await function(e,t){t.script||(t.script="");try{new v.Script(`"use strict";(function(){\n${t.script}\n})();`)}catch(e){return Promise.reject(e)}return Qt("virtualParameters",e,t)}(t,r):"config"===e?await nr(t,r):"permissions"===e?await sr(t,r):"users"===e&&(delete r.password,delete r.salt,await ir(t,r)),await Dr("presets_hash")}function An(e,t,r){return new Promise(((n,s)=>{const i=Kr(e)[t];i&&i.password?Qr(r,i.salt).then((e=>{e===i.password?n(!0):n(!1)})).catch(s):n(null)}))}const Sn=new D.default;function _n(e){e.message+=" not authorized",ge(e)}const In={devices:"DeviceID.ID",presets:"_id",provisions:"_id",files:"_id",virtualParameters:"_id",config:"_id",permissions:"_id",users:"_id",faults:"_id",tasks:"_id"},On={devices:1,presets:3,provisions:3,files:1,virtualParameters:3,config:3,permissions:3,users:3,faults:1,tasks:0};Sn.get("/devices/:id.csv",(async e=>{const t=e.state.authorizer,r={message:"Query device (CSV)",context:e,id:e.params.id},n=He(t.getFilter("devices",2),["=",["PARAM",In.devices],e.params.id]);if(!t.hasAccess("devices",2))return _n(r),void(e.status=403);const s=await Xt("devices",n);if(s[0]){e.type="text/csv",e.attachment(`device-${e.params.id}-${(new Date).toISOString().replace(/[:.]/g,"")}.csv`),e.body=new h.PassThrough,e.body.write("Parameter,Object,Object timestamp,Writable,Writable timestamp,Value,Value type,Value timestamp,Notification,Notification timestamp,Access list,Access list timestamp\n");for(const t of Object.keys(s[0]).sort()){const r=s[0][t],n=[t,r.object,r.objectTimestamp,r.writable,r.writableTimestamp,null!=r.value?`"${r.value[0].toString().replace(/"/g,'""')}"`:"",null!=r.value?r.value[1]:"",r.valueTimestamp,r.notification,r.notificationTimestamp,r.accessList?r.accessList.join(", "):"",r.accessListTimestamp];e.body.write(n.map((e=>null!=e?e:"")).join(",")+"\n")}e.body.end(),ve(r)}else e.status=404}));for(const[e,t]of Object.entries(On))Sn.head("/"+e,(async t=>{const r=t.state.authorizer;let n=r.getFilter(e,1);t.request.query.filter&&(n=He(n,Pe(t.request.query.filter)));const s={message:"Count "+e,context:t,filter:t.request.query.filter,count:null};if(!r.hasAccess(e,1))return _n(s),void(t.status=403);"tasks"!==e&&"faults"!==e||(n=He(n,["OR",[">=",["PARAM","expiry"],Date.now()+6e4],["IS NULL",["PARAM","expiry"]]]));const i=await Yt(e,n);t.set("X-Total-Count",""+i),t.body="",s.count=i,ve(s)})),Sn.get("/"+e,(async t=>{const r=t.state.authorizer,n={};let s=r.getFilter(e,2);t.request.query.filter&&(s=He(s,Pe(t.request.query.filter))),t.request.query.limit&&(n.limit=+t.request.query.limit),t.request.query.skip&&(n.skip=+t.request.query.skip),t.request.query.sort&&(n.sort=JSON.parse(t.request.query.sort)),t.request.query.projection&&(n.projection=t.request.query.projection.split(",").reduce(((e,t)=>Object.assign(e,{[t]:1})),{}));const i={message:"Query "+e,context:t,filter:t.request.query.filter,limit:n.limit,skip:n.skip,sort:n.sort,projection:n.projection};if(!r.hasAccess(e,2))return _n(i),void(t.status=403);"tasks"!==e&&"faults"!==e||(s=He(s,["OR",[">=",["PARAM","expiry"],Date.now()+6e4],["IS NULL",["PARAM","expiry"]]])),t.body=new h.PassThrough,t.type="application/json";let a=0;t.body.write("[\n"),await Xt(e,s,n,(e=>{t.body.write((a++?",":"")+JSON.stringify(e)+"\n")})),t.body.end("]"),ve(i)})),Sn.get(`/${e}.csv`,(async t=>{const r=t.state.authorizer,n={projection:{}};let s=r.getFilter(e,2);t.request.query.filter&&(s=He(s,Pe(t.request.query.filter))),t.request.query.limit&&(n.limit=+t.request.query.limit),t.request.query.skip&&(n.skip=+t.request.query.skip),t.request.query.sort&&(n.sort=JSON.parse(t.request.query.sort));const i={message:`Query ${e} (CSV)`,context:t,filter:t.request.query.filter,limit:n.limit,skip:n.skip,sort:n.sort};if(!r.hasAccess(e,2))return _n(i),void(t.status=403);const a=JSON.parse(t.request.query.columns),o=Date.now();for(const[e,t]of Object.entries(a)){const r=Be(Pe(t),null,o);a[e]=r;for(const e of ze(r))"string"==typeof e&&(n.projection[e]=1)}"tasks"!==e&&"faults"!==e||(s=He(s,["OR",[">=",["PARAM","expiry"],Date.now()+6e4],["IS NULL",["PARAM","expiry"]]])),t.body=new h.PassThrough,t.type="text/csv",t.attachment(`${e}-${new Date(o).toISOString().replace(/[:.]/g,"")}.csv`),t.body.write(Object.keys(a).map((e=>`"${e.replace(/"/,'""')}"`))+"\n"),await Xt(e,s,n,(r=>{const n=Object.values(a).map((t=>{const n=Be(t,r,null,(t=>{if(Array.isArray(t))if("PARAM"===t[0]){if("devices"===e&&"Tags"===t[1]){const e=[];for(const t in r)t.startsWith("Tags.")&&e.push(Xe(t.slice(5)));return e.join(", ")}}else if("FUNC"===t[0]&&"DATE_STRING"===t[1]&&t[2]&&!Array.isArray(t[2]))return new Date(t[2]).toISOString();return t}));return Array.isArray(n)||null==n?"":"string"==typeof n?`"${n.replace(/"/g,'""')}"`:n}));t.body.write(n.join(",")+"\n")})),t.body.end(),ve(i)})),Sn.head(`/${e}/:id`,(async t=>{const r=t.state.authorizer,n={message:"Count "+e,context:t,filter:`${In[e]} = "${t.params.id}"`},s=He(r.getFilter(e,2),["=",["PARAM",In[e]],t.params.id]);if(!r.hasAccess(e,2))return _n(n),void(t.status=403);(await Xt(e,s)).length?(ve(n),t.body=""):t.status=404})),Sn.get(`/${e}/:id`,(async t=>{const r=t.state.authorizer,n={message:"Query "+e,context:t,filter:`${In[e]} = "${t.params.id}"`},s=He(r.getFilter(e,2),["=",["PARAM",In[e]],t.params.id]);if(!r.hasAccess(e,2))return _n(n),void(t.status=403);const i=await Xt(e,s);i.length?(ve(n),t.body=i[0]):t.status=404})),1&t&&Sn.delete(`/${e}/:id`,(async t=>{const r=t.state.authorizer,n={message:"Delete "+e,context:t,id:t.params.id},s=He(r.getFilter(e,3),["=",["PARAM",In[e]],t.params.id]);if(!r.hasAccess(e,3))return _n(n),void(t.status=403);const i=await Xt(e,s);if(!i.length)return void(t.status=404);if(!r.getValidator(e,i[0])("delete"))return _n(n),void(t.status=403);await vn(e,t.params.id),ve(n),t.body=""})),2&t&&Sn.put(`/${e}/:id`,(async t=>{const r=t.state.authorizer,n=t.params.id,s={message:"Put "+e,context:t,id:n};if(!r.hasAccess(e,3))return _n(s),void(t.status=403);const i=t.request.body;if(!r.getValidator(e,i)("put"))return _n(s),void(t.status=403);try{await wn(e,n,i)}catch(e){return s.message+=" failed",ge(s),t.body=`${e.name}: ${e.message}`,void(t.status=400)}ve(s),t.body=""}));Sn.put("/files/:id",(async e=>{const t=e.state.authorizer,r="files",n=e.params.id,s={message:"Upload files",context:e,id:n,metadata:null};if(!t.hasAccess(r,3))return _n(s),void(e.status=403);const i={fileType:e.request.headers["metadata.filetype"]||"",oui:e.request.headers["metadata.oui"]||"",productClass:e.request.headers["metadata.productclass"]||"",version:e.request.headers["metadata.version"]||""};if(!t.getValidator(r,i)("put"))return _n(s),void(e.status=403);try{await ar(n)}catch(e){}await function(e,t,r){return new Promise(((n,s)=>{Zt().then((i=>{const a=new y.GridFSBucket(i.db()).openUploadStreamWithId(e,e,{metadata:t});a.on("error",s),r.on("error",s),a.on("finish",n),r.pipe(a)})).catch(s)}))}(n,i,e.req),s.metadata=i,ve(s),e.body=""})),Sn.post("/devices/:id/tasks",(async e=>{const t=e.state.authorizer,r={message:"Commit tasks",context:e,deviceId:e.params.id,tasks:null},n=He(t.getFilter("devices",3),["=",["PARAM","DeviceID.ID"],e.params.id]);if(!t.hasAccess("devices",3))return _n(r),void(e.status=403);const s=await Xt("devices",n);if(!s.length)return void(e.status=404);const i=s[0],a=t.getValidator("devices",i);for(const t of e.request.body)if(!a("task",t))return _n(r),void(e.status=403);const o=Hr(e.state.configSnapshot,"cwmp.deviceOnlineThreshold",{},Date.now(),(e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]){const t=i[e[1]];if(t&&t.value)return t.value[0]}else if("FUNC"===e[0]&&"REMOTE_ADDRESS"===e[1]){for(const e of["InternetGatewayDevice","Device"]){const t=i[e+".ManagementServer.ConnectionRequestURL"];if(t&&t.value)return _.parse(t.value[0]).host}return null}return e})),c=await gn(e.params.id,e.request.body,o,i);r.tasks=c.tasks.map((e=>e._id)).join(","),ve(r),e.set("Connection-Request",c.connectionRequest),e.body=c.tasks})),Sn.post("/devices/:id/tags",(async e=>{const t=e.state.authorizer,r={message:"Update tags",context:e,deviceId:e.params.id,tags:e.request.body},n=He(t.getFilter("devices",3),["=",["PARAM","DeviceID.ID"],e.params.id]);if(!t.hasAccess("devices",3))return _n(r),void(e.status=403);const s=await Xt("devices",n);if(!s.length)return void(e.status=404);if(!t.getValidator("devices",s[0])("tags",e.request.body))return _n(r),void(e.status=403);try{await async function(e,t){const r=[],n=[];for(let[e,s]of Object.entries(t))e=e.trim(),s?r.push(e):n.push(e);const s=(await Zt()).db().collection("devices"),i={};r&&r.length&&(i.$addToSet={_tags:{$each:r}}),n&&n.length&&(i.$pullAll={_tags:n}),await s.updateOne({_id:e},i)}(e.params.id,e.request.body)}catch(t){return r.message+=" failed",ge(r),e.body=t.message,void(e.status=400)}ve(r),e.body=""})),Sn.get("/ping/:host",(async e=>new Promise((t=>{!function(e,t){let n,s,i;switch(r.platform()){case"linux":n="ping -w 1 -i 0.2 -c 3 "+e,s=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss[^]*([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,i=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss/;break;case"freebsd":n="ping -t 1 -c 3 "+e,s=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,i=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/;break;default:return t(new Error("Platform not supported"))}O.exec(n,((e,r)=>{let n;if(r){const e=r.match(s);if(e)n={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:+e[4],avg:+e[5],max:+e[6],mdev:+e[7]};else{const e=r.match(i);e&&(n={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}}t(e,n,r)}))}(e.params.host,((r,n)=>{n?e.body=n:(e.status=500,e.body=`${r.name}: ${r.message}`),t()}))})))),Sn.put("/users/:id/password",(async e=>{const t=e.state.authorizer,r=e.params.id,n={message:"Change password",context:e,username:r};if(e.state.user){if(!t.hasAccess("users",3))return _n(n),void(e.status=403)}else if(!await An(e.state.configSnapshot,r,e.request.body.authPassword))return _n(n),e.status=401,void(e.body="Authentication failed, check your username and password");const s=He(t.getFilter("users",3),["=",["PARAM",In.users],r]),i=await Xt("users",s);if(!i.length)return void(e.status=404);const a=e.request.body.newPassword;if(e.state.user){if(!t.getValidator("users",i[0])("password",{password:a}))return _n(n),void(e.status=403)}const o=await Yr(64),c=await Qr(a,o);await ir(r,{password:c,salt:o}),await Dr("presets_hash"),ve(n),e.body=""}));class En{constructor(e){this.permissionSets=e,this.validatorCache=new WeakMap,this.hasAccessCache=new Map,this.getFilterCache=new Map}hasAccess(e,t){const r=`${e}-${t}`;if(this.hasAccessCache.has(r))return this.hasAccessCache.get(r);let n=!1;for(const r of this.permissionSets)for(const s of r)if(s[e]&&s[e].access>=t){n=!0;break}return this.hasAccessCache.set(r,n),n}getFilter(e,t){const r=`${e}-${t}`;if(this.getFilterCache.has(r))return this.getFilterCache.get(r);let n=null;for(const r of this.permissionSets)for(const s of r)s[e]&&s[e].access>=t&&(n=Ke(n,s[e].filter));return this.getFilterCache.set(r,n),n}getValidator(e,t){if(this.validatorCache.has(t))return this.validatorCache.get(t);const r=[];for(const t of this.permissionSets)for(const n of t)n[e]&&n[e].access>=3&&n[e].validate&&r.push(n[e].validate);const n=(n,s,i)=>{if(!r.length)return!1;const a={mutationType:n,mutation:s,resourceType:e,object:t,options:i},o=Be(r.length>1?["OR",r]:r[0],(e=>{const t=e.split(".",1)[0];e=e.slice(t.length+1);let r=null;if(["mutation","options"].includes(t)){r=a[t];for(const t of e.split("."))if(r=null!=r&&"object"!=typeof r?null:r[t],null==r)break}else a[t]&&(r=e?a[t][e]:a[t]);return r}),Date.now());return!Array.isArray(o)&&!!o};return this.validatorCache.set(t,n),n}getPermissionSets(){return this.permissionSets}}const Nn='\nconst now = Date.now();\n\n// Clear cached data model to force a refresh\nclear("Device", now);\nclear("InternetGatewayDevice", now);\n'.trim(),bn='\nconst hourly = Date.now(3600000);\n\n// Refresh basic parameters hourly\ndeclare("InternetGatewayDevice.DeviceInfo.HardwareVersion", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.DeviceInfo.SoftwareVersion", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.MACAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.ExternalIPAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.SSID", {path: hourly, value: hourly});\n// Don\'t refresh password field periodically because CPEs always report blank passowrds for security reasons\ndeclare("InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.KeyPassphrase", {path: hourly, value: 1});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.HostName", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.IPAddress", {path: hourly, value: hourly});\ndeclare("InternetGatewayDevice.LANDevice.*.Hosts.Host.*.MACAddress", {path: hourly, value: hourly});\n'.trim(),Tn='\n// Device ID as user name\nconst username = declare("DeviceID.ID", {value: 1}).value[0]\n\n// Password will be fixed a given device because Math.random() is seeded with devcie ID by default.\nconst password = Math.trunc(Math.random() * Number.MAX_SAFE_INTEGER).toString(36);\n\nconst informInterval = 300;\n\n// Refresh values daily\nconst daily = Date.now(86400000);\n\n// Unique inform offset per device for better load distribution\nconst informTime = daily % 86400000;\n\ndeclare("InternetGatewayDevice.ManagementServer.ConnectionRequestUsername", {value: daily}, {value: username});\ndeclare("InternetGatewayDevice.ManagementServer.ConnectionRequestPassword", {value: daily}, {value: password});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformEnable", {value: daily}, {value: true});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformInterval", {value: daily}, {value: informInterval});\ndeclare("InternetGatewayDevice.ManagementServer.PeriodicInformTime", {value: daily}, {value: informTime});\n\ndeclare("Device.ManagementServer.ConnectionRequestUsername", {value: daily}, {value: username});\ndeclare("Device.ManagementServer.ConnectionRequestPassword", {value: daily}, {value: password});\ndeclare("Device.ManagementServer.PeriodicInformEnable", {value: daily}, {value: true});\ndeclare("Device.ManagementServer.PeriodicInformInterval", {value: daily}, {value: informInterval});\ndeclare("Device.ManagementServer.PeriodicInformTime", {value: daily}, {value: informTime});\n'.trim();async function Dn(){const e=await Jr(),t=Kr(e),r=function(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.presets}(e),n=zr(e);return{users:!Object.keys(t).length,presets:!r.length,filters:!Object.keys(n.filters).length,device:!Object.keys(n.device).length,index:!Object.keys(n.index).length,overview:!Object.keys(n.overview).length}}const xn="1.2.3+20201030155156";let Cn=new Map,Rn=new Map;const Pn=new WeakMap;function Ln(e){if(null===e)return"null";if(void 0===e)return"undefined";const t=typeof e;if("number"===t||"boolean"===t||"string"===t)return`${t}:${e}`;if("function"!==t&&"object"!==t)throw new Error(`Cannot memoize ${t} arguments`);let r=Pn.get(e);if(!r){r=`${t}:${Math.trunc(Math.random()*Number.MAX_SAFE_INTEGER).toString(36)}`,Pn.set(e,r)}return r}const Mn=setInterval((()=>{Rn=Cn,Cn=new Map}),12e4);Mn.unref&&Mn.unref();const kn=new T.default,$n=new D.default,qn=""+K("UI_JWT_SECRET"),jn=function(e){const t=Ln(e);return(...r)=>{const n=JSON.stringify(r.map(Ln))+t;if(Cn.has(n))return Cn.get(n);let s;return s=Rn.has(n)?Rn.get(n):e(...r),Cn.set(n,s),s}}(((e,t)=>{const r=JSON.parse(t),n=function(e){const t=Pr.get(e);if(!t)throw new Error("Cache snapshot does not exist");return t.permissions}(e),s=r.map((e=>Object.values(n[e]||{})));return new En(s)}));kn.on("error",(async e=>{setTimeout((()=>{throw e}))})),kn.use((async(e,t)=>{const r=await Jr();return e.state.configSnapshot=r,e.set("X-Config-Snapshot",r),e.set("GenieACS-Version",xn),t()})),kn.use(P.default({secret:qn,passthrough:!0,cookie:"genieacs-ui-jwt",isRevoked:async(e,t)=>"local"!==t.authMethod||!Kr(e.state.configSnapshot)[t.username]})),kn.use((async(e,t)=>{let r=[];if(e.state.user&&e.state.user.username){let t;if("local"!==e.state.user.authMethod)throw new Error("Invalid auth method");t=Kr(e.state.configSnapshot)[e.state.user.username],r=t.roles||[]}return e.state.authorizer=jn(e.state.configSnapshot,JSON.stringify(r)),t()})),$n.post("/login",(async e=>{if(!qn)return e.status=500,e.body="UI_JWT_SECRET is not set",void he({message:"UI_JWT_SECRET is not set"});const t=e.request.body.username,r=e.request.body.password,n={message:"Log in",context:e,username:t,method:null};await An(e.state.configSnapshot,t,r)?function(r){n.method=r;const s=l.sign({username:t,authMethod:r},qn);e.cookies.set("genieacs-ui-jwt",s,{sameSite:"lax"}),e.body=JSON.stringify(s),ve(n)}("local"):(e.status=400,e.body="Incorrect username or password",n.message+=" failed",ge(n))})),$n.post("/logout",(async e=>{e.cookies.set("genieacs-ui-jwt"),e.body="",ve({message:"Log out",context:e})})),kn.use((async(e,t)=>("application/octet-stream"===e.request.type&&(e.disableBodyParser=!0),t()))),kn.use(R.default()),$n.use("/api",Sn.routes(),Sn.allowedMethods()),$n.get("/status",(e=>{e.body="OK"})),$n.get("/init",(async e=>{const t=await Dn();Object.keys(Kr(e.state.configSnapshot)).length&&(e.state.authorizer.hasAccess("users",3)||(t.users=!1),e.state.authorizer.hasAccess("permissions",3)||(t.users=!1),e.state.authorizer.hasAccess("config",3)||(t.filters=!1,t.device=!1,t.index=!1,t.overview=!1),e.state.authorizer.hasAccess("presets",3)||(t.presets=!1),e.state.authorizer.hasAccess("provisions",3)||(t.presets=!1)),e.body=t})),$n.post("/init",(async e=>{const t=e.request.body;Object.keys(Kr(e.state.configSnapshot)).length&&(e.state.authorizer.hasAccess("users",3)||(t.users=!1),e.state.authorizer.hasAccess("permissions",3)||(t.users=!1),e.state.authorizer.hasAccess("config",3)||(t.filters=!1,t.device=!1,t.index=!1,t.overview=!1),e.state.authorizer.hasAccess("presets",3)||(t.presets=!1),e.state.authorizer.hasAccess("provisions",3)||(t.presets=!1)),await async function(e){const t={},r=[];if(e.users&&(t.permissions=[{role:"admin",resource:"devices",access:3,validate:"true"},{role:"admin",resource:"faults",access:3,validate:"true"},{role:"admin",resource:"files",access:3,validate:"true"},{role:"admin",resource:"presets",access:3,validate:"true"},{role:"admin",resource:"provisions",access:3,validate:"true"},{role:"admin",resource:"config",access:3,validate:"true"},{role:"admin",resource:"permissions",access:3,validate:"true"},{role:"admin",resource:"users",access:3,validate:"true"},{role:"admin",resource:"virtualParameters",access:3,validate:"true"}],t.users=[{username:"admin",password:"admin",roles:["admin"]}]),e.filters&&(t.config=(t.config||[]).concat([{_id:"ui.filters.0.label",value:"'Serial number'"},{_id:"ui.filters.0.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.filters.0.type",value:"'string'"},{_id:"ui.filters.1.label",value:"'Product class'"},{_id:"ui.filters.1.parameter",value:"DeviceID.ProductClass"},{_id:"ui.filters.1.type",value:"'string'"},{_id:"ui.filters.2.label",value:"'Tag'"},{_id:"ui.filters.2.type",value:"'tag'"}])),e.device&&(t.config=(t.config||[]).concat([{_id:"ui.device.0.type",value:"'tags'"},{_id:"ui.device.1.type",value:"'ping'"},{_id:"ui.device.2.type",value:"'parameter-list'"},{_id:"ui.device.2.parameters.0.type",value:"'container'"},{_id:"ui.device.2.parameters.0.element",value:"'span.inform'"},{_id:"ui.device.2.parameters.0.label",value:"'Last inform'"},{_id:"ui.device.2.parameters.0.components.0.type",value:"'parameter'"},{_id:"ui.device.2.parameters.0.components.1.chart",value:"'online'"},{_id:"ui.device.2.parameters.0.components.1.type",value:"'overview-dot'"},{_id:"ui.device.2.parameters.0.components.2.type",value:"'summon-button'"},{_id:"ui.device.2.parameters.0.components.2.parameters.0",value:"InternetGatewayDevice.DeviceInfo.HardwareVersion"},{_id:"ui.device.2.parameters.0.components.2.parameters.1",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.device.2.parameters.0.components.2.parameters.2",value:"InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.MACAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.3",value:"InternetGatewayDevice.WANDevice.*.WANConnectionDevice.*.WANIPConnection.*.ExternalIPAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.4",value:"InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.SSID"},{_id:"ui.device.2.parameters.0.components.2.parameters.5",value:"InternetGatewayDevice.LANDevice.*.WLANConfiguration.*.KeyPassphrase"},{_id:"ui.device.2.parameters.0.components.2.parameters.6",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.HostName"},{_id:"ui.device.2.parameters.0.components.2.parameters.7",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.IPAddress"},{_id:"ui.device.2.parameters.0.components.2.parameters.8",value:"InternetGatewayDevice.LANDevice.*.Hosts.Host.*.MACAddress"},{_id:"ui.device.2.parameters.0.parameter",value:"DATE_STRING(Events.Inform)"},{_id:"ui.device.2.parameters.1.label",value:"'Serial number'"},{_id:"ui.device.2.parameters.1.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.device.2.parameters.2.label",value:"'Product class'"},{_id:"ui.device.2.parameters.2.parameter",value:"DeviceID.ProductClass"},{_id:"ui.device.2.parameters.3.label",value:"'OUI'"},{_id:"ui.device.2.parameters.3.parameter",value:"DeviceID.OUI"},{_id:"ui.device.2.parameters.4.label",value:"'Manufacturer'"},{_id:"ui.device.2.parameters.4.parameter",value:"DeviceID.Manufacturer"},{_id:"ui.device.2.parameters.5.label",value:"'Hardware version'"},{_id:"ui.device.2.parameters.5.parameter",value:"InternetGatewayDevice.DeviceInfo.HardwareVersion"},{_id:"ui.device.2.parameters.6.label",value:"'Software version'"},{_id:"ui.device.2.parameters.6.parameter",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.device.2.parameters.7.label",value:"'MAC'"},{_id:"ui.device.2.parameters.7.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.MACAddress"},{_id:"ui.device.2.parameters.8.label",value:"'IP'"},{_id:"ui.device.2.parameters.8.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ExternalIPAddress"},{_id:"ui.device.2.parameters.9.label",value:"'WLAN SSID'"},{_id:"ui.device.2.parameters.9.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID"},{_id:"ui.device.2.parameters.10.label",value:"'WLAN passphrase'"},{_id:"ui.device.2.parameters.10.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.KeyPassphrase"},{_id:"ui.device.3.type",value:"'parameter-table'"},{_id:"ui.device.3.label",value:"'WLAN hosts'"},{_id:"ui.device.3.parameter",value:"InternetGatewayDevice.LANDevice.1.Hosts.Host"},{_id:"ui.device.3.childParameters.0.label",value:"'Host name'"},{_id:"ui.device.3.childParameters.0.parameter",value:"HostName"},{_id:"ui.device.3.childParameters.1.label",value:"'IP address'"},{_id:"ui.device.3.childParameters.1.parameter",value:"IPAddress"},{_id:"ui.device.3.childParameters.2.label",value:"'MAC address'"},{_id:"ui.device.3.childParameters.2.parameter",value:"MACAddress"},{_id:"ui.device.4.type",value:"'container'"},{_id:"ui.device.4.element",value:"'div'"},{_id:"ui.device.4.components.0.components.0",value:"'Faults'"},{_id:"ui.device.4.components.0.element",value:"'h3'"},{_id:"ui.device.4.components.0.type",value:"'container'"},{_id:"ui.device.4.components.1.type",value:"'device-faults'"},{_id:"ui.device.5.type",value:"'container'"},{_id:"ui.device.5.element",value:"'div.container-full-width'"},{_id:"ui.device.5.components.0.components.0",value:"'All parameters'"},{_id:"ui.device.5.components.0.element",value:"'h3'"},{_id:"ui.device.5.components.0.type",value:"'container'"},{_id:"ui.device.5.components.1.type",value:"'all-parameters'"},{_id:"ui.device.6.type",value:"'device-actions'"}])),e.index&&(t.config=(t.config||[]).concat([{_id:"ui.index.0.type",value:"'device-link'"},{_id:"ui.index.0.label",value:"'Serial number'"},{_id:"ui.index.0.parameter",value:"DeviceID.SerialNumber"},{_id:"ui.index.0.components.0.type",value:"'parameter'"},{_id:"ui.index.1.label",value:"'Product class'"},{_id:"ui.index.1.parameter",value:"DeviceID.ProductClass"},{_id:"ui.index.2.label",value:"'Software version'"},{_id:"ui.index.2.parameter",value:"InternetGatewayDevice.DeviceInfo.SoftwareVersion"},{_id:"ui.index.3.label",value:"'IP'"},{_id:"ui.index.3.parameter",value:"InternetGatewayDevice.WANDevice.1.WANConnectionDevice.1.WANIPConnection.1.ExternalIPAddress"},{_id:"ui.index.4.label",value:"'SSID'"},{_id:"ui.index.4.parameter",value:"InternetGatewayDevice.LANDevice.1.WLANConfiguration.1.SSID"},{_id:"ui.index.5.type",value:"'container'"},{_id:"ui.index.5.label",value:"'Last inform'"},{_id:"ui.index.5.element",value:"'span.inform'"},{_id:"ui.index.5.parameter",value:"DATE_STRING(Events.Inform)"},{_id:"ui.index.5.components.0.type",value:"'parameter'"},{_id:"ui.index.5.components.1.chart",value:"'online'"},{_id:"ui.index.5.components.1.type",value:"'overview-dot'"},{_id:"ui.index.6.type",value:"'tags'"},{_id:"ui.index.6.label",value:"'Tags'"},{_id:"ui.index.6.parameter",value:"Tags"},{_id:"ui.index.6.unsortable",value:"true"},{_id:"ui.index.6.writable",value:"false"}])),e.overview&&(t.config=(t.config||[]).concat([{_id:"ui.overview.charts.online.label",value:"'Online status'"},{_id:"ui.overview.charts.online.slices.1_onlineNow.color",value:"'#31a354'"},{_id:"ui.overview.charts.online.slices.1_onlineNow.filter",value:"Events.Inform > NOW() - 5 * 60 * 1000"},{_id:"ui.overview.charts.online.slices.1_onlineNow.label",value:"'Online now'"},{_id:"ui.overview.charts.online.slices.2_past24.color",value:"'#a1d99b'"},{_id:"ui.overview.charts.online.slices.2_past24.filter",value:"Events.Inform > (NOW() - 5 * 60 * 1000) - (24 * 60 * 60 * 1000) AND Events.Inform < (NOW() - 5 * 60 * 1000)"},{_id:"ui.overview.charts.online.slices.2_past24.label",value:"'Past 24 hours'"},{_id:"ui.overview.charts.online.slices.3_others.color",value:"'#e5f5e0'"},{_id:"ui.overview.charts.online.slices.3_others.filter",value:"Events.Inform < (NOW() - 5 * 60 * 1000) - (24 * 60 * 60 * 1000)"},{_id:"ui.overview.charts.online.slices.3_others.label",value:"'Others'"},{_id:"ui.overview.groups.online.label",value:"''"},{_id:"ui.overview.groups.online.charts.0",value:"'online'"}])),e.presets&&(t.presets=[{_id:"bootstrap",weight:0,channel:"bootstrap",events:"0 BOOTSTRAP",provision:"bootstrap"},{_id:"default",weight:0,channel:"default",provision:"default"},{_id:"inform",weight:0,channel:"inform",provision:"inform"}],t.provisions=[{_id:"bootstrap",script:Nn},{_id:"default",script:bn},{_id:"inform",script:Tn}]),t.permissions)for(const e of t.permissions)e._id=`${e.role}:${e.resource}:${e.access}`,r.push(sr(e._id,e));if(t.users)for(const e of t.users)e.salt=await Yr(64),e.password=await Qr(e.password,e.salt),e.roles=(e.roles||[]).join(","),e._id=e.username,delete e.username,r.push(ir(e._id,e));if(t.provisions)for(const e of t.provisions)r.push(rr(e._id,e));if(t.presets)for(const e of t.presets)r.push(tr(e._id,e));if(t.config)for(const e of t.config)r.push(nr(e._id,e));return await r,Dr("presets_hash")}(t),e.body=""})),$n.get("/",(async e=>{const t=e.state.authorizer.getPermissionSets();let r="";Object.keys(Kr(e.state.configSnapshot)).length||(r='<script>window.location.hash = "#!/wizard";<\/script>'),e.body=`\n  <html>\n    <head>\n      <title>GenieACS</title>\n      <link rel="shortcut icon" type="image/png" href="favicon.png" />\n      <link rel="stylesheet" href="app.css">\n    </head>\n    <body>\n    <noscript>GenieACS UI requires JavaScript to work. Please enable JavaScript in your browser.</noscript>\n      <script>\n        window.clientConfig = ${JSON.stringify({ui:zr(e.state.configSnapshot)})};\n        window.configSnapshot = ${JSON.stringify(e.state.configSnapshot)};\n        window.genieacsVersion = ${JSON.stringify(xn)};\n        window.username = ${JSON.stringify(e.state.user?e.state.user.username:"")};\n        window.permissionSets = ${JSON.stringify(t)};\n      <\/script>\n      <script src="app.js"><\/script>${r} \n    </body>\n  </html>\n  `})),kn.use(C.default({gzip:{flush:o.constants.Z_SYNC_FLUSH},deflate:{flush:o.constants.Z_SYNC_FLUSH}})),kn.use($n.routes()),kn.use(x.default(W+"/public"));const Un=kn.callback();!function(e,n){ee.hostname=r.hostname(),ee.pid=process.pid,ee.name="genieacs-"+e,ee.version=n,te=K(e.toUpperCase()+"_LOG_FILE"),re=K(e.toUpperCase()+"_ACCESS_LOG_FILE"),te&&(ie=t.createWriteStream(null,{fd:t.openSync(te,"a")}),ae=t.fstatSync(ie.fd)),re&&(oe=t.createWriteStream(null,{fd:t.openSync(re,"a")}),ce=t.fstatSync(oe.fd));const s=process.env.JOURNAL_STREAM;if(s){const[e,t]=s.split(":").map(parseInt);ne=ae.dev===e&&ae.ino===t,se=ce.dev===e&&ce.ino===t}(te||re)&&setTimeout(ue,6e4-Date.now()%6e4).unref()}("ui",xn);const Wn=K("UI_INTERFACE"),Fn=K("UI_PORT");function Gn(){setTimeout(Bn,5e3).unref(),Promise.all([ur(),Cr(),Tr(),an(),Oe.disconnect()]).catch(Bn)}function Bn(){an().finally((()=>{process.exit(1)}))}if(Oe){const r=K("UI_SSL_KEY"),n=K("UI_SSL_CERT"),s={port:Fn,host:Wn,ssl:r&&n?{key:r,cert:n}:null,timeout:3e4};let o=!1;process.on("uncaughtException",(e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(he({message:"Uncaught exception",exception:e,pid:process.pid}),o=!0,be().then(Gn).catch(Bn))}));const c=(e,t)=>{o&&t.setHeader("Connection","close"),Un(e,t)},u=Promise.all([async function(){Er=y.MongoClient.connect(""+K("MONGODB_CONNECTION_URL"),{useNewUrlParser:!0,useUnifiedTopology:!0}),Nr=await Er;const e=Nr.db();dr=e.collection("tasks"),await dr.createIndex({device:1,timestamp:1}),mr=e.collection("devices"),hr=e.collection("presets"),yr=e.collection("objects"),Ar=e.collection("fs.files"),vr=e.collection("provisions"),gr=e.collection("virtualParameters"),wr=e.collection("faults"),Sr=e.collection("operations"),_r=e.collection("permissions"),Ir=e.collection("users"),Or=e.collection("config")}(),async function(){const e=""+K("MONGODB_CONNECTION_URL");fr=y.MongoClient.connect(e,{useNewUrlParser:!0,useUnifiedTopology:!0});const t=(await fr).db();pr=t.collection("cache"),await pr.createIndex({expire:1},{expireAfterSeconds:0});const r=Date.now(),n=await t.command({hostInfo:1});br=n.system.currentTime.getTime()-r}()]).then((()=>{!function(r,n){if(Ne=n,r.ssl){const n={key:r.ssl.key.split(":").map((r=>t.readFileSync(e.resolve(W,r.trim())))),cert:r.ssl.cert.split(":").map((r=>t.readFileSync(e.resolve(W,r.trim()))))};Ee=a.createServer(n,Ne),r.onConnection&&Ee.on("secureConnection",r.onConnection)}else Ee=i.createServer(Ne),r.onConnection&&Ee.on("connection",r.onConnection);Ee.timeout=r.timeout||0,null!=r.keepAliveTimeout&&(Ee.keepAliveTimeout=r.keepAliveTimeout),Ee.listen({port:r.port,host:r.host})}(s,c)})).catch((e=>{setTimeout((()=>{throw e}))}));process.on("SIGINT",(()=>{o=!0,u.finally((()=>{be().then(Gn).catch(Bn)}))})),process.on("SIGTERM",(()=>{o=!0,u.finally((()=>{be().then(Gn).catch(Bn)}))}))}else{const e=K("UI_WORKER_PROCESSES");me({message:"genieacs-ui starting",pid:process.pid,version:xn}),function(e,t,n){b.default.on("listening",((e,r)=>{4!==r.addressType&&6!==r.addressType||r.address!==n||r.port!==t||me({message:"Worker listening",pid:e.process.pid,address:r.address,port:r.port})})),b.default.on("exit",_e),e||(e=Math.max(2,r.cpus().length));for(let t=0;t<e;++t)Se()}(e,Fn,Wn),process.on("SIGINT",(()=>{me({message:"Received signal SIGINT, exiting",pid:process.pid}),Ie()})),process.on("SIGTERM",(()=>{me({message:"Received signal SIGTERM, exiting",pid:process.pid}),Ie()}))}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
