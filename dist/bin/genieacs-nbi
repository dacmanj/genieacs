#!/usr/bin/env node
"use strict";const e=require("path"),t=require("fs"),n=require("os"),s=require("ipaddr.js"),r=require("cluster"),i=require("http"),a=require("https"),o=require("url"),l=require("mongodb"),c=require("querystring"),u=require("vm"),d=require("parsimmon"),f=require("crypto"),p=require("later"),m=require("dgram"),h=require("child_process"),g=require("yaml");function _(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}const w=_(r),y=_(d);let E,O,S,T,v,A,b=e.resolve(__dirname,"..");for(;!t.existsSync(b+"/package.json");){const t=e.resolve(b,"..");if(t===b){b=process.cwd();break}b=t}const I={EXT_DIR:{type:"path",default:e.resolve(b,"config/ext")},MONGODB_CONNECTION_URL:{type:"string",default:"mongodb://127.0.0.1/genieacs"},CWMP_WORKER_PROCESSES:{type:"int",default:0},CWMP_PORT:{type:"int",default:7547},CWMP_INTERFACE:{type:"string",default:"0.0.0.0"},CWMP_SSL_CERT:{type:"string",default:""},CWMP_SSL_KEY:{type:"string",default:""},CWMP_LOG_FILE:{type:"path",default:""},CWMP_ACCESS_LOG_FILE:{type:"path",default:""},NBI_WORKER_PROCESSES:{type:"int",default:0},NBI_PORT:{type:"int",default:7557},NBI_INTERFACE:{type:"string",default:"0.0.0.0"},NBI_SSL_CERT:{type:"string",default:""},NBI_SSL_KEY:{type:"string",default:""},NBI_LOG_FILE:{type:"path",default:""},NBI_ACCESS_LOG_FILE:{type:"path",default:""},FS_WORKER_PROCESSES:{type:"int",default:0},FS_PORT:{type:"int",default:7567},FS_INTERFACE:{type:"string",default:"0.0.0.0"},FS_SSL_CERT:{type:"string",default:""},FS_SSL_KEY:{type:"string",default:""},FS_URL_PREFIX:{type:"string",default:""},FS_LOG_FILE:{type:"path",default:""},FS_ACCESS_LOG_FILE:{type:"path",default:""},UI_WORKER_PROCESSES:{type:"int",default:0},UI_PORT:{type:"int",default:3e3},UI_INTERFACE:{type:"string",default:"0.0.0.0"},UI_SSL_CERT:{type:"string",default:""},UI_SSL_KEY:{type:"string",default:""},UI_LOG_FILE:{type:"path",default:""},UI_ACCESS_LOG_FILE:{type:"path",default:""},UI_JWT_SECRET:{type:"string",default:""},UDP_CONNECTION_REQUEST_PORT:{type:"int",default:0},FORWARDED_HEADER:{type:"string",default:""},DOWNLOAD_TIMEOUT:{type:"int",default:3600},EXT_TIMEOUT:{type:"int",default:3e3},MAX_CACHE_TTL:{type:"int",default:86400},DEBUG_FILE:{type:"path",default:""},DEBUG_FORMAT:{type:"string",default:"yaml"},DEBUG:{type:"bool",default:!1},RETRY_DELAY:{type:"int",default:300},SESSION_TIMEOUT:{type:"int",default:30},CONNECTION_REQUEST_TIMEOUT:{type:"int",default:2e3},GPN_NEXT_LEVEL:{type:"int",default:0},GPV_BATCH_SIZE:{type:"int",default:32},MAX_DEPTH:{type:"int",default:16},COOKIES_PATH:{type:"string"},LOG_FORMAT:{type:"string",default:"simple"},ACCESS_LOG_FORMAT:{type:"string",default:""},MAX_CONCURRENT_REQUESTS:{type:"int",default:20},DATETIME_MILLISECONDS:{type:"bool",default:!0},BOOLEAN_LITERAL:{type:"bool",default:!0},CONNECTION_REQUEST_ALLOW_BASIC_AUTH:{type:"bool",default:!1},MAX_COMMIT_ITERATIONS:{type:"int",default:32},DEVICE_ONLINE_THRESHOLD:{type:"int",default:4e3}},N={};function $(t,n,s=!1){if(null!=N[t])return!0;function r(t,n){switch(n){case"int":return Number(t);case"bool":return["true","1"].includes(String(t).trim().toLowerCase());case"string":return String(t);case"path":return t?e.resolve(t):"";default:return null}}"CONFIG_DIR"!==t&&"config-dir"!==t||(E=E||e.resolve(b,n)),"CWMP_SSL"!==t&&"cwmp-ssl"!==t||(O=O||String(n).toLowerCase().trim()),"NBI_SSL"!==t&&"nbi-ssl"!==t||(S=S||String(n).toLowerCase().trim()),"FS_SSL"!==t&&"fs-ssl"!==t||(T=T||String(n).toLowerCase().trim()),"UI_SSL"!==t&&"ui-ssl"!==t||(v=v||String(n).toLowerCase().trim()),"FS_HOSTNAME"!==t&&"fs-hostname"!==t||(A=A||String(n).trim()),"PRESETS_CACHE_DURATION"!==t&&"presets-cache-duration"!==t||$("MAX_CACHE_TTL",n),"GET_PARAMETER_NAMES_DEPTH_THRESHOLD"!==t&&"get-parameter-names-depth-threshold"!==t||$("GPN_NEXT_LEVEL",n),"TASK_PARAMETERS_BATCH_SIZE"!==t&&"task-parameters-batch-size"!==t||$("GPV_BATCH_SIZE",n),"FS_IP"!==t&&"fs-ip"!==t||$("FS_HOSTNAME",n);let i=null;for(const[e,a]of Object.entries(I)){let o=e;if(s&&(o=o.toLowerCase().replace(/_/g,"-")),t===o?(i=r(n,a.type),o=e):t.startsWith(o+"-")&&(i=r(n,a.type),o=`${e}-${t.slice(e.length+1)}`),null!=i)return N[o]=i,process.env["GENIEACS_"+o]=i,!0}return!1}const C=process.argv.slice(2);for(;C.length;){const e=C.shift();if("-"===e[0]){const t=C.shift();$(e.slice(2),t,!0)}}for(const[e,t]of Object.entries(process.env))e.startsWith("GENIEACS_")&&$(e.slice(9),t);const x=E?E+"/config.json":b+"/config/config.json";if(t.existsSync(x)){const e=JSON.parse(t.readFileSync(x).toString());for(const[t,n]of Object.entries(e))$(t,n)||(process.env["GENIEACS_"+t]=""+n)}if(E&&$("EXT_DIR",E+"/ext"),["true","1"].includes(O)){const e=E||b+"/config";$("CWMP_SSL_CERT",e+"/cwmp.crt"),$("CWMP_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(S)){const e=E||b+"/config";$("NBI_SSL_CERT",e+"/cwmp.crt"),$("NBI_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(T)){const e=E||b+"/config";$("FS_SSL_CERT",e+"/cwmp.crt"),$("FS_SSL_KEY",e+"/cwmp.key")}if(["true","1"].includes(v)){const e=E||b+"/config";$("UI_SSL_CERT",e+"/cwmp.crt"),$("UI_SSL_KEY",e+"/cwmp.key")}if(A){const e=N.FS_PORT||7567;$("FS_URL_PREFIX",(!!N.FS_SSL_CERT?"https":"http")+`://${A}:${e}/`)}for(const[e,t]of Object.entries(I))null!=t.default&&$(e,t.default);function D(e,t){if(!t)return N[e];let n=N[e=`${e}-${t}`];if(null!=n)return n;let s=e.lastIndexOf("-");return n=N[e.slice(0,s)],null!=n?n:(s=e.lastIndexOf("-",s-1),n=N[e.slice(0,s)],null!=n?n:(s=e.lastIndexOf("-",s-1),n=N[e.slice(0,s)],null!=n?n:(s=e.lastIndexOf("-",s-1),s>0&&(n=N[e.slice(0,s)],null!=n)?n:null)))}const L=""+D("FORWARDED_HEADER"),k=new WeakMap,R=[];for(const e of L.split(",").map((e=>e.trim())))try{R.push(s.parseCIDR(e))}catch(t){try{const t=s.parse(e);R.push([t,8*t.toByteArray().length])}catch(e){}}function j(e){let t=k.get(e);if(!t){const n=e.socket;t={localAddress:n.localAddress,localPort:n.localPort,remoteAddress:n.remoteAddress,remotePort:n.remotePort,host:e.headers.host,encrypted:!!e.socket.encrypted};const r=e.headers.forwarded;if(r){const e=s.parse(n.remoteAddress);if(R.some((t=>e.match(t)))){const e=function(e){e=e.toLowerCase();const t={};let n,s=0,r=-1;for(let i=0;i<e.length;++i){const a=e.charCodeAt(i);if(61===a)s>=0&&(n=e.slice(s,i).trim(),s=-1,r=i+1);else if(59===a)r>=0&&(t[n]=e.slice(r,i).trim()),r=-1,s=i+1;else{if(44===a)return r>=0&&(t[n]=e.slice(r,i).trim()),t;if(34===a&&r>=0){const a=i;if(!e.slice(r,a).trim())for(i+=1;i<e.length;++i){const o=e.charCodeAt(i);if(92===o&&++i,34===o){t[n]=JSON.parse(e.slice(a,i+1).trim()),r=-1,s=i+1;break}}}}}return r>=0&&(t[n]=e.slice(r).trim()),t}(r);if("https"===e.proto?(t.encrypted=!0,t.localPort=443):"http"===e.proto&&(t.encrypted=!1,t.localPort=80),e.host){t.host=e.host;const[,n]=e.host.split(":",2);t.localPort=+n||t.localPort}if(e.for)if(e.for.startsWith("[")){const n=e.for.lastIndexOf("]");n>=0&&(t.remoteAddress=e.for.slice(1,n),t.remotePort=parseInt(e.for.slice(n+2))||t.remotePort)}else{const n=e.for.lastIndexOf(":");n>=0?(t.remoteAddress=e.for.slice(0,n),t.remotePort=parseInt(e.for.slice(n+1))||t.remotePort):t.remoteAddress=e.for}if(e.by)if(e.by.startsWith("[")){const n=e.by.lastIndexOf("]");n>=0&&(t.localAddress=e.by.slice(1,n),t.localPort=parseInt(e.by.slice(n+2))||t.localPort)}else{const n=e.by.lastIndexOf(":");n>=0?(t.localAddress=e.by.slice(0,n),t.localPort=parseInt(e.by.slice(n+1))||t.localPort):t.localAddress=e.by}}}k.set(e,t)}return t}const P=D("LOG_FORMAT"),M=(D("ACCESS_LOG_FORMAT"),{});let U,q,F=!1,H=t.createWriteStream(null,{fd:process.stderr.fd}),W=t.fstatSync(H.fd),B=t.createWriteStream(null,{fd:process.stdout.fd}),G=t.fstatSync(B.fd);function J(){let e=1;U&&(++e,t.stat(U,((n,s)=>{if(n&&!n.message.startsWith("ENOENT:"))throw n;s&&s.dev===W.dev&&s.ino===W.ino||(H.end(),H=t.createWriteStream(null,{fd:t.openSync(U,"a")}),W=t.fstatSync(H.fd)),0==--e&&setTimeout(J,6e4-Date.now()%6e4).unref()}))),q&&(++e,t.stat(q,((n,s)=>{if(n&&!n.message.startsWith("ENOENT:"))throw n;s&&s.dev===G.dev&&s.ino===G.ino||(B.end(),B=t.createWriteStream(null,{fd:t.openSync(q,"a")}),G=t.fstatSync(B.fd)),0==--e&&setTimeout(J,6e4-Date.now()%6e4).unref()}))),0==--e&&setTimeout(J,6e4-Date.now()%6e4).unref()}function V(e){if(e.sessionContext){const t=e.sessionContext;e.deviceId=t.deviceId,e.remoteAddress=j(t.httpRequest).remoteAddress,delete e.sessionContext}if(e.exception){const t=e.exception;e.exceptionName=t.name,e.exceptionMessage=t.message,e.exceptionStack=t.stack,delete e.exception}if(e.task&&(e.taskId=e.task._id,delete e.task),e.rpc){const t=e.rpc;t.acsRequest?(e.acsRequestId=t.id,e.acsRequestName=t.acsRequest.name,t.acsRequest.commandKey&&(e.acsRequestCommandKey=t.acsRequest.commandKey)):t.cpeRequest?(e.cpeRequestId=t.id,"Inform"===t.cpeRequest.name?(e.informEvent=t.cpeRequest.event.join(","),e.informRetryCount=t.cpeRequest.retryCount):(e.cpeRequestName=t.cpeRequest.name,t.cpeRequest.commandKey&&(e.cpeRequestCommandKey=t.cpeRequest.commandKey))):t.cpeFault&&(e.acsRequestId=t.id,e.cpeFaultCode=t.cpeFault.detail.faultCode,e.cpeFaultString=t.cpeFault.detail.faultString),delete e.rpc}if(e.fault){const t=e.fault;e.faultCode=t.code,e.faultMessage=t.message,delete e.fault}e.context&&(e.remoteAddress=j(e.context.req).remoteAddress,e.context.state.user&&(e.user=e.context.state.user.username),delete e.context);for(const[t,n]of Object.entries(e))null==n&&delete e[t];return e}function z(e){e.timestamp=(new Date).toISOString(),"json"===P?(e=Object.assign({},M,e),H.write(function(e,t){if(t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${JSON.stringify(V(e))}${n.EOL}`}return`${JSON.stringify(V(e))}${n.EOL}`}(e,F))):H.write(function(e,t){const s={user:!0,remoteAddress:!0,severity:!0,timestamp:!0,message:!0,deviceId:!!e.sessionContext};V(e);let r="";e.remoteAddress&&(r=e.deviceId&&s.deviceId?`${e.remoteAddress} ${e.deviceId}: `:e.user?`${e.user}@${e.remoteAddress}: `:e.remoteAddress+": ");const i=Object.keys(e);let a="";const o=[];for(const t of i)s[t]||o.push(`${t}=${JSON.stringify(e[t])}`);if(o.length&&(a="; "+o.join(" ")),t){let t="";return"info"===e.severity?t="<6>":"warn"===e.severity?t="<4>":"error"===e.severity&&(t="<3>"),`${t}${r}${e.message}${a}${n.EOL}`}return`${e.timestamp} [${e.severity.toUpperCase()}] ${r}${e.message}${a}${n.EOL}`}(e,F))}function Z(e){e.severity="info",z(e)}function K(e){e.severity="error",z(e)}let X=0,Y=[];function Q(){const e=w.default.fork();return e.on("error",(t=>{if("EPIPE"!==t.code)throw t;setTimeout((()=>{if(!e.isDead())throw t}),50)})),e}function ee(e,t,n){const s={message:"Worker died",pid:e.process.pid,exitCode:null,signal:null};null!=t&&(s.exitCode=t),null!=n&&(s.signal=n),K(s);const r=Date.now();Y.push(r);let i=0,a=0,o=0;if(Y=Y.filter((e=>{if(e>r-6e4)++i;else if(e>r-12e4)++a;else{if(!(e>r-18e4))return!1;++o}return!0})),i>5&&a>5&&o>5){process.exitCode=1,w.default.removeListener("exit",ee);for(const e in w.default.workers)w.default.workers[e].kill();K({message:"Too many crashes, exiting",pid:process.pid})}else X=Math.max(r,X+2e3),X!==r?setTimeout((()=>{process.exitCode||Q()}),X-r):Q()}function te(){w.default.removeListener("exit",ee);for(const e in w.default.workers)w.default.workers[e].kill()}const ne=w.default.worker;let se,re;function ie(){return new Promise(((e,t)=>{var n,s;setTimeout((()=>{t(new Error("Could not close server in a timely manner"))}),3e4).unref(),n=2e4,s=e,se?(setTimeout((()=>{if(!s)return;se.removeListener("request",re),se.setTimeout(1);const e=s;s=null,setTimeout(e,1e3)}),n).unref(),se.close((()=>{if(!s)return;const e=s;s=null,setTimeout(e,50)}))):s()}))}function ae(e){return e.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&")}function oe(e){return encodeURIComponent(e).replace(/[!~*'()]/g,(e=>"%"+e.charCodeAt(0).toString(16).toUpperCase())).replace(/0x(?=[0-9A-Z]{2})/g,"0%78").replace(/%/g,"0x")}function le(e){const t={b:"\b",f:"\f",n:"\n",r:"\r",t:"\t"};return e.replace(/\\(u[0-9a-fA-F]{4}|[^u])/,((e,n)=>{const s=n.charAt(0),r=n.slice(1);return"u"===s?String.fromCharCode(parseInt(r,16)):t.hasOwnProperty(s)?t[s]:s}))}function ce(e,t){if(!Array.isArray(e))return t(e);let n;for(let s=1;s<e.length;++s){const r=ce(e[s],t);r!==e[s]&&(n=n||e.slice(),n[s]=r)}return t(n||e)}async function ue(e,t){if(!Array.isArray(e))return t(e);let n;for(let s=1;s<e.length;++s){const r=await ue(e[s],t);r!==e[s]&&(n=n||e.slice(),n[s]=r)}return t(n||e)}function de(e,t){return y.default.seqMap(t,y.default.seq(e,t).many(),((e,t)=>t.reduce(((e,t)=>{const[n,s]=t;return Array.isArray(e)&&n===e[0]?e.concat([s]):Array.isArray(s)&&n===s[0]?[n,e].concat(s.slice(1)):[n,e,s]}),e)))}const fe=y.default.createLanguage({ComparisonOperator:function(){return y.default.alt(y.default.string(">="),y.default.string("<>"),y.default.string("<="),y.default.string("="),y.default.string(">"),y.default.string("<")).skip(y.default.optWhitespace)},LikeOperator:function(){return y.default.alt(y.default.regexp(/like/i).result("LIKE").desc("LIKE"),y.default.regexp(/not\s+like/i).result("NOT LIKE").desc("NOT LIKE")).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace)},IsNullOperator:function(){return y.default.alt(y.default.regexp(/is\s+null/i).result("IS NULL").desc("IS NULL"),y.default.regexp(/is\s+not\s+null/i).result("IS NOT NULL").desc("IS NOT NULL")).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace)},NotOperator:function(){return y.default.regexp(/not/i).result("NOT").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("NOT")},AndOperator:function(){return y.default.regexp(/and/i).result("AND").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("AND")},OrOperator:function(){return y.default.regexp(/or/i).result("OR").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("OR")},Parameter:function(e){return y.default.alt(y.default.regexp(/[a-zA-Z0-9_.*-]+/),e.Expression.wrap(y.default.string("{").skip(y.default.optWhitespace),y.default.string("}"))).atLeast(1).map((e=>["PARAM",e.length>1?["||"].concat(e):e[0]])).skip(y.default.optWhitespace).desc("parameter")},StringValueSql:function(){return y.default.regexp(/'([^']*)'/,1).atLeast(1).skip(y.default.optWhitespace).map((e=>e.join("'"))).desc("string")},StringValueJs:function(){return y.default.regexp(/"((?:\\.|.)*?)"/,1).skip(y.default.optWhitespace).map(le).desc("string")},NumberValue:function(){return y.default.regexp(/-?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?/).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).map(Number).desc("number")},BooleanValue:function(){return y.default.alt(y.default.regexp(/true/i).result(!0).desc("TRUE"),y.default.regexp(/false/i).result(!1).desc("FALSE")).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace)},NullValue:function(){return y.default.regexp(/null/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).result(null).desc("NULL")},FuncValue:function(e){return y.default.seqMap(y.default.regexp(/([a-zA-Z0-9_]+)/,1).skip(y.default.optWhitespace).desc("function"),e.ExpressionList.wrap(y.default.string("(").skip(y.default.optWhitespace),y.default.string(")").skip(y.default.optWhitespace)),((e,t)=>["FUNC",e.toUpperCase()].concat(t)))},WhenPair:function(e){return y.default.seq(y.default.regexp(/when/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("WHEN").then(e.Expression),y.default.regexp(/then/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("THEN").then(e.Expression))},CaseStatement:function(e){return y.default.seqMap(y.default.regexp(/case/i).result("CASE").notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("CASE"),e.WhenPair.many(),y.default.regexp(/else/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/)).skip(y.default.optWhitespace).desc("ELSE").then(e.Expression).map((e=>[[!0,e]])).fallback(null).skip(y.default.regex(/end/i).notFollowedBy(y.default.regexp(/[a-zA-Z0-9_]/))).skip(y.default.optWhitespace),((...e)=>e.flat(2)))},Value:function(e){return y.default.alt(e.NullValue,e.BooleanValue,e.NumberValue,e.StringValueSql,e.StringValueJs,e.FuncValue,e.CaseStatement)},ValueExpression:function(e){return de(y.default.string("||").skip(y.default.optWhitespace),de(y.default.alt(y.default.string("+"),y.default.string("-")).skip(y.default.optWhitespace),de(y.default.alt(y.default.string("*"),y.default.string("/")).skip(y.default.optWhitespace),y.default.alt(e.Value,e.Parameter,e.Expression.wrap(y.default.string("(").skip(y.default.optWhitespace),y.default.string(")").skip(y.default.optWhitespace))))))},Comparison:function(e){return y.default.alt(y.default.seqMap(e.ValueExpression,e.IsNullOperator,((e,t)=>[t,e])),y.default.seqMap(e.ValueExpression,e.ComparisonOperator,e.ValueExpression,((e,t,n)=>[t,e,n])),y.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression.skip(y.default.regexp(/escape/i).result("ESCAPE").skip(y.default.whitespace).desc("ESCAPE")),e.ValueExpression,((e,t,n,s)=>[t,e,n,s])),y.default.seqMap(e.ValueExpression,e.LikeOperator,e.ValueExpression,((e,t,n)=>[t,e,n])))},ExpressionList:function(e){return e.Expression.sepBy(y.default.string(",").skip(y.default.optWhitespace))},Expression:function(e){return de(e.OrOperator,de(e.AndOperator,(t=e.NotOperator,n=e.Comparison.or(e.ValueExpression),y.default.seq(t,n).or(n)))).trim(y.default.optWhitespace);var t,n}});function pe(e){return e?fe.Expression.tryParse(e):null}let me=new Map,he=new Map;class ge{constructor(e){let t=0,n=0;const s=e.map(((e,s)=>{if(Array.isArray(e)){t|=1<<s;return`[${e.map((e=>`${e[0].toString()}:${JSON.stringify(e[1])}`)).join(",")}]`}return"*"===e&&(n|=1<<s),e}));let r=0;const i=s.map(((e,t)=>(r+=e.length)+t));this.segments=e,this.wildcard=n,this.alias=t,this._string=s.join("."),this._stringIndex=i}static parseAlias(e,t){const n=[];for(;t<e.length&&"]"!==e[t];){const{index:s,segments:r}=ge.parsePath(e,t);let i=t=s+1;for(;"]"!==e[i]&&","!==e[i];){if('"'===e[i]&&t===i)for(++i;'"'!==e[i]||"\\"===e[i-1];)if(++i>=e.length)throw new Error("Invalid alias expression");if(++i>=e.length)throw new Error("Invalid alias expression")}let a=e.slice(t,i).trim();if(t=i,'"'===a[0])try{a=JSON.parse(a)}catch(e){throw new Error("Invalid alias expression")}n.push([new ge(r),a]),","===e[t]&&++t}return n.sort(((e,t)=>e[0].toString()>t[0].toString()?1:e[0].toString()<t[0].toString()?-1:e[1]>t[1]?1:e[1]<t[1]?-1:0)),Object.freeze(n),{index:t,alias:n}}static parsePath(e,t){const n=[];if(t<e.length&&":"!==e[t])for(;;){if("["===e[t]){const{index:s,alias:r}=ge.parseAlias(e,t+1);t=s+1,n.push(r)}else{const s=t;for(;t<e.length&&":"!==e[t]&&"."!==e[t];)++t;const r=e.slice(s,t).trim();if(!r)throw new Error("Invalid parameter path");n.push(r)}if(t>=e.length||":"===e[t])break;if("."!==e[t])throw new Error("Invalid alias expression");++t}return Object.freeze(n),{index:t,segments:n}}static parse(e){let t=me.get(e);if(!t){if(t=he.get(e),!t){const{segments:n}=ge.parsePath(e,0);t=new ge(n),t.toString()!==e&&me.set(t.toString(),t)}me.set(e,t)}return t}get length(){return this.segments.length}toString(){return this._string}slice(e=0,t=this.segments.length){let n;if(e<0&&(e=Math.max(0,this.segments.length+e)),t<0&&(t=Math.max(0,this.segments.length+t)),e>=t)n="";else{const s=e>0?this._stringIndex[e-1]+1:0,r=t<=this.segments.length?this._stringIndex[t-1]:this._string.length;n=this._string.slice(s,r)}let s=me.get(n);if(!s){if(s=he.get(n),!s){const n=this.segments.slice(e,t);Object.freeze(n),s=new ge(n)}me.set(n,s)}return s}concat(e){if(!e._string)return this;if(!this._string)return e;const t=`${this._string}.${e._string}`;let n=me.get(t);if(!n){if(n=he.get(t),!n){const t=this.segments.concat(e.segments);Object.freeze(t),n=new ge(t)}me.set(t,n)}return n}stripAlias(){if(!this.alias)return this;const e=this.segments.map((e=>Array.isArray(e)?"*":e)),t=e.join(".");let n=me.get(t);return n||(n=he.get(t),n||(Object.freeze(e),n=new ge(e)),me.set(t,n)),n}}const _e=setInterval((()=>{he=me,me=new Map}),12e4);let we,ye,Ee,Oe,Se,Te,ve,Ae,be,Ie,Ne,$e,Ce,xe;function De(e,t){if(e.length!==t.length)return!1;for(const[n,s]of e.entries())if(s!==t[n])return!1;return!0}async function Le(){Ce=l.MongoClient.connect(""+D("MONGODB_CONNECTION_URL"),{useNewUrlParser:!0,useUnifiedTopology:!0}),xe=await Ce;const e=xe.db();we=e.collection("tasks"),await we.createIndex({device:1,timestamp:1}),ye=e.collection("devices"),Ee=e.collection("presets"),Oe=e.collection("objects"),Ae=e.collection("fs.files"),Se=e.collection("provisions"),Te=e.collection("virtualParameters"),ve=e.collection("faults"),be=e.collection("operations"),Ie=e.collection("permissions"),Ne=e.collection("users"),$e=e.collection("config")}async function ke(){Ce&&await(await Ce).close()}async function Re(){return Ee.find().toArray()}async function je(){return Oe.find().toArray()}async function Pe(){return Se.find().toArray()}async function Me(){return Te.find().toArray()}function Ue(){return Ae.find().toArray()}async function qe(){return(await $e.find().toArray()).map((e=>({id:e._id,value:pe(e.value)})))}async function Fe(){return Ie.find().toArray()}async function He(){return Ne.find().toArray()}_e.unref&&_e.unref();const We=Object.freeze({__proto__:null,get tasksCollection(){return we},get devicesCollection(){return ye},get presetsCollection(){return Ee},get objectsCollection(){return Oe},get provisionsCollection(){return Se},get virtualParametersCollection(){return Te},get faultsCollection(){return ve},get filesCollection(){return Ae},get operationsCollection(){return be},get permissionsCollection(){return Ie},get usersCollection(){return Ne},get configCollection(){return $e},get client(){return xe},connect:Le,disconnect:ke,fetchDevice:async function(e,t){const n=[[ge.parse("Events"),t,{object:[t,1],writable:[t,0]}],[ge.parse("DeviceID"),t,{object:[t,1],writable:[t,0]}]],s=await ye.findOne({_id:e});if(!s)return null;for(const[e,r]of Object.entries(s))switch(e){case"_lastInform":n.push([ge.parse("Events.Inform"),+r,{object:[+r,0],writable:[+r,0],value:[+r,[+r,"xsd:dateTime"]]}]);break;case"_lastBoot":n.push([ge.parse("Events.1_BOOT"),+r,{object:[+r,0],writable:[+r,0],value:[+r,[+r,"xsd:dateTime"]]}]);break;case"_lastBootstrap":n.push([ge.parse("Events.0_BOOTSTRAP"),+r,{object:[+r,0],writable:[+r,0],value:[+r,[+r,"xsd:dateTime"]]}]);break;case"_registered":n.push([ge.parse("Events.Registered"),t,{object:[t,0],writable:[t,0],value:[t,[+r,"xsd:dateTime"]]}]);break;case"_id":n.push([ge.parse("DeviceID.ID"),t,{object:[t,0],writable:[t,0],value:[t,[r,"xsd:string"]]}]);break;case"_tags":r.length&&n.push([ge.parse("Tags"),t,{object:[t,1],writable:[t,0]}]);for(const e of r)n.push([ge.parse("Tags."+oe(e)),t,{object:[t,0],writable:[t,1],value:[t,[!0,"xsd:boolean"]]}]);break;case"_deviceId":null!=r._Manufacturer&&n.push([ge.parse("DeviceID.Manufacturer"),t,{object:[t,0],writable:[t,0],value:[t,[r._Manufacturer,"xsd:string"]]}]),null!=r._OUI&&n.push([ge.parse("DeviceID.OUI"),t,{object:[t,0],writable:[t,0],value:[t,[r._OUI,"xsd:string"]]}]),null!=r._ProductClass&&n.push([ge.parse("DeviceID.ProductClass"),t,{object:[t,0],writable:[t,0],value:[t,[r._ProductClass,"xsd:string"]]}]),null!=r._SerialNumber&&n.push([ge.parse("DeviceID.SerialNumber"),t,{object:[t,0],writable:[t,0],value:[t,[r._SerialNumber,"xsd:string"]]}])}return function e(t,s,r,i){t._timestamp&&(t._timestamp=+t._timestamp),t._attributesTimestamp&&(t._attributesTimestamp=+t._attributesTimestamp);const a={};let o=t._timestamp||1;i>o&&(o=i),null!=t._value&&(a.value=[t._timestamp||1,[t._value,t._type]],"xsd:dateTime"===t._type&&(a.value[1][0]=+a.value[1][0]),t._object=!1),null!=t._writable&&(a.writable=[i||1,t._writable?1:0]),null!=t._object&&(a.object=[o,t._object?1:0]),null!=t._notification&&(a.notification=[t._attributesTimestamp||1,t._notification]),null!=t._accessList&&(a.accessList=[t._attributesTimestamp||1,t._accessList]),n.push([ge.parse(s.slice(0,-1)),o,a]);for(const[n,i]of Object.entries(t))n.startsWith("_")||(t._object=!0,e(i,s+n+".",r+1,t._timestamp));!t._object&&r||!t._timestamp||n.push([ge.parse(s+"*"),t._timestamp])}(s,"",0,0),n},saveDevice:async function(e,t,n,s){const r={$set:{},$unset:{},$addToSet:{},$pull:{}};for(const e of t.timestamps.diff()){if(e[0].wildcard!==1<<e[0].length-1)continue;if("Events"===e[0].segments[0]||"DeviceID"===e[0].segments[0]||"Tags"===e[0].segments[0])continue;const n=t.paths.get(e[0].slice(0,-1));e[2]>s&&(e[2]=s),null==e[2]&&null!=e[1]?r.$unset[n.length?n.toString()+"._timestamp":"_timestamp"]=1:!n||n.length&&!t.attributes.has(n)||(r.$set[n.length?n.toString()+"._timestamp":"_timestamp"]=new Date(e[2]))}for(const e of t.attributes.diff()){const t=e[0],n=(((e[1]||{}).value||[])[1]||[])[0],i=(((e[2]||{}).value||[])[1]||[])[0],a=(((e[1]||{}).value||[])[1]||[])[1],o=(((e[2]||{}).value||[])[1]||[])[1],l=((e[1]||{}).value||[])[0],c=((e[2]||{}).value||[])[0],u=((e[1]||{}).object||[])[1],d=((e[2]||{}).object||[])[1],f=((e[2]||{}).writable||[])[1],p=((e[1]||{}).writable||[])[1],m=((e[1]||{}).notification||[])[0],h=((e[2]||{}).notification||[])[0],g=((e[1]||{}).notification||[])[1],_=((e[2]||{}).notification||[])[1],w=((e[1]||{}).accessList||[])[1],y=((e[2]||{}).accessList||[])[1];switch(t.segments[0]){case"Events":if(2===t.length&&i!==n)if(e[2]){const n=new Date(e[2].value[1][0]);switch(t.segments[1]){case"Inform":r.$set._lastInform=n;break;case"1_BOOT":r.$set._lastBoot=n;break;case"0_BOOTSTRAP":r.$set._lastBootstrap=n;break;case"Registered":r.$set._registered=n}}else switch(t.segments[1]){case"Inform":r.$unset._lastInform=1;break;case"1_BOOT":r.$unset._lastBoot=1;break;case"0_BOOTSTRAP":r.$unset._lastBootstrap=1;break;case"Registered":r.$unset._registered=1}break;case"DeviceID":if(i!==n){const n=e[2].value[1][0];switch(t.segments[1]){case"ID":r.$set._id=n;break;case"Manufacturer":r.$set["_deviceId._Manufacturer"]=n;break;case"OUI":r.$set["_deviceId._OUI"]=n;break;case"ProductClass":r.$set["_deviceId._ProductClass"]=n;break;case"SerialNumber":r.$set["_deviceId._SerialNumber"]=n}}break;case"Tags":i!==n&&(null!=i?(r.$addToSet._tags||(r.$addToSet._tags={$each:[]}),r.$addToSet._tags.$each.push(t.segments[1])):(r.$pull._tags||(r.$pull._tags={$in:[]}),r.$pull._tags.$in.push(t.segments[1])));break;default:if(!e[2]){r.$unset[t.toString()]=1;continue}for(const E of Object.keys(e[2]))if(e[2][E][0]>s&&(e[2][E][0]=s),null!=e[2][E][1])switch(E){case"value":i!==n&&("xsd:dateTime"===o&&Number.isInteger(i)?r.$set[t.toString()+"._value"]=new Date(i):r.$set[t.toString()+"._value"]=i),o!==a&&(r.$set[t.toString()+"._type"]=o),c!==l&&(r.$set[t.toString()+"._timestamp"]=new Date(c));break;case"object":e[1]&&e[1].object&&d===u||(r.$set[t.length?t.toString()+"._object":"_object"]=!!d);break;case"writable":e[1]&&e[1].writable&&f===p||(r.$set[t.length?t.toString()+"._writable":"_writable"]=!!f);break;case"notification":e[1]&&e[1].notification&&_===g||(r.$set[t.length?t.toString()+"._notification":"_notification"]=_),h!==m&&(r.$set[t.toString()+"._attributesTimestamp"]=new Date(h));break;case"accessList":e[1]&&e[1].accessList&&De(y,w)||(r.$set[t.length?t.toString()+"._accessList":"_accessList"]=y),h!==m&&(r.$set[t.toString()+"._attributesTimestamp"]=new Date(h))}if(e[1])for(const n of Object.keys(e[1]))if(!(null==e[1][n][1]||e[2]&&e[2][n]&&null!=e[2][n][1])){const e=t.length?t.toString()+".":"";r.$unset[`${e}_${n}`]=1,"value"===n?(r.$unset[e+"_type"]=1,r.$unset[e+"_timestamp"]=1):"notification"===n?null==y&&(r.$unset[e+"_attributesTimestamp"]=1):"accessList"===n&&null==_&&(r.$unset[e+"_attributesTimestamp"]=1)}}}r.$unset=function(e){if(e[""])return{"":e[""]};const t=Object.keys(e).sort();if(t.length<=1)return e;for(let n=1;n<t.length;++n){const s=t[n-1],r=t[n];r.startsWith(s)&&("."!==r.charAt(s.length)&&"."!==r.charAt(s.length-1)||(delete e[r],t.splice(n--,1)))}return e}(r.$unset);for(const e of Object.keys(r.$unset))null!=r.$set[e]&&delete r.$unset[e];for(const[e,t]of Object.entries(r)){if("$addToSet"===e)for(const[e,n]of Object.entries(t))n.$each.length||delete t[e];else if("$pull"===e)for(const[e,n]of Object.entries(t))n.$in.length||delete t[e];Object.keys(t).length||delete r[e]}if(!Object.keys(r).length)return;let i;if(r.$addToSet&&r.$pull&&(i={$pull:r.$pull},delete r.$pull),1!==(await ye.updateOne({_id:e},r,{upsert:n})).result.n)throw new Error(`Device ${e} not found in database`);i&&await ye.updateOne({_id:e},i)},getFaults:async function(e){const t=await ve.find({_id:{$regex:`^${ae(e)}\\:`}}).toArray(),n={};for(const s of t){const t=s._id.slice(e.length+1);delete s._id,delete s.channel,delete s.device,s.timestamp=+s.timestamp,s.provisions=JSON.parse(s.provisions),n[t]=s}return n},saveFault:async function(e,t,n){const s=`${e}:${t}`,r=Object.assign({},n);r._id=s,r.device=e,r.channel=t,r.timestamp=new Date(n.timestamp),r.provisions=JSON.stringify(n.provisions),await ve.replaceOne({_id:s},r,{upsert:!0})},deleteFault:async function(e,t){await ve.deleteOne({_id:`${e}:${t}`})},getDueTasks:async function(e,t){const n=we.find({device:e}).sort({timestamp:1}),s=[];for await(const e of n){if(e.timestamp&&(e.timestamp=+e.timestamp),e.expiry&&(e.expiry=+e.expiry),e.timestamp>=t)return[s,+e.timestamp];if(e._id=String(e._id),s.push(e),"download"===e.name&&e.file){let t;t=l.ObjectID.isValid(e.file)?{_id:{$in:[e.file,new l.ObjectID(e.file)]}}:{_id:e.file};const n=await Ae.find(t).toArray();n[0]&&(e.fileType||(e.fileType=n[0].metadata.fileType),e.fileName||(e.fileName=n[0].filename||n[0]._id.toString()))}}return[s,null]},clearTasks:async function(e,t){await we.deleteMany({_id:{$in:t.map((e=>new l.ObjectID(e)))}})},getOperations:async function(e){const t=await be.find({_id:{$regex:`^${ae(e)}\\:`}}).toArray(),n={};for(const s of t){const t=s._id.slice(e.length+1);delete s._id,"string"==typeof s.provisions?(s.timestamp=+s.timestamp,s.args&&(s.args=JSON.parse(s.args)),s.provisions=JSON.parse(s.provisions),s.retries=JSON.parse(s.retries),n[t]=s):n[t]=s}return n},saveOperation:async function(e,t,n){const s=`${e}:${t}`,r=Object.assign({},n);r._id=s,r.timestamp=new Date(n.timestamp),r.provisions=JSON.stringify(n.provisions),r.retries=JSON.stringify(n.retries),r.args=JSON.stringify(n.args),await be.replaceOne({_id:s},r,{upsert:!0})},deleteOperation:async function(e,t){await be.deleteOne({_id:`${e}:${t}`})},getPresets:Re,getObjects:je,getProvisions:Pe,getVirtualParameters:Me,getFiles:Ue,getConfig:qe,getPermissions:Fe,getUsers:He});function Be(e){return"[object Object]"===Object.prototype.toString.call(e)}function Ge(e){if("string"==typeof e){const t=[e],n=/^\/(.*?)\/(g?i?m?y?)$/.exec(e);n&&t.push({$regex:new RegExp(n[1],n[2])}),+e===parseFloat(e)&&t.push(+e);const s=new Date(e);e.length>=8&&s.getFullYear()>1983&&t.push(s);const r=function(e,t){if(-1===e.indexOf("*"))return!1;let n=e.replace(/[[\]\\^$.|?+()]/,"\\$&");return n="*"===n[0]?n.replace(/^\*+/g,""):"^"+n,"*"===n[n.length-1]?n=n.replace(/\*+$/g,""):n+="$",n=n.replace(/[*]/,".*"),new RegExp(n,t)}(e);return!1!==r&&t.push({$regex:r}),t}return e}function Je(e){if(Array.isArray(e)){let t=[];for(const n of e)t=t.concat(Je(n));return[t]}if(!Be(e)){const t=Ge(e);return Array.isArray(t)?t:[t]}const t=[],n=[],s=[],r=[];for(const[t,i]of Object.entries(e))s.push(t),r.push(Je(i)),n.push(0);let i=0;for(;i<n.length;){const e={};for(let t=0;t<s.length;++t)e[s[t]]=r[t][n[t]];for(t.push(e),i=0;i<n.length&&(n[i]+=1,!(n[i]<r[i].length));++i)n[i]=0}return t}function Ve(e,t){const n=[],s=Je(t);"_"!==e[e.lastIndexOf(".")+1]&&(e+="._value");for(const t of s){const s={};s[e]=t,n.push(s)}return n}function ze(e){const t={};for(const[n,s]of Object.entries(e))if("$"===n[0])t[n]=s.map((e=>ze(e)));else{const e=Ve(n,s);if(e.length>1)if(t.$and=t.$and||[],!s||null==s.$ne&&null==s.$not)t.$and.push({$or:e});else{if(Object.keys(s).length>1)throw new Error("Cannot mix $ne or $not with other operators");for(const n of e)t.$an.push(n)}else Object.assign(t,e[0])}return t}function Ze(e,t){for(const[n,s]of Object.entries(e))if("$"===n[0])for(const e of s)Ze(e,t);else if(n in t)if(Be(s))for(const[e,r]of Object.entries(s))switch(e){case"$in":case"$nin":for(let e=0;e<r.length;++e)r[e]=t[n](r[e]);break;case"$eq":case"$gt":case"$gte":case"$lt":case"$lte":case"$ne":s[e]=t[n](r);break;case"$exists":case"$type":break;default:throw new Error("Operator not supported")}else e[n]=t[n](e[n]);return e}const Ke=+D("MAX_CACHE_TTL");let Xe,Ye,Qe=0;async function et(){Xe&&await(await Xe).close()}async function tt(e){Array.isArray(e)?await Ye.deleteMany({_id:{$in:e}}):await Ye.deleteOne({_id:e})}async function nt(e,t){const n=Math.random().toString(36).slice(2);const s=new Date(Date.now()-Qe),r=new Date(Date.now()-Qe+1e3*t);try{await Ye.updateOne({_id:e,expire:{$lte:s}},{$set:{value:n,expire:r}},{upsert:!0})}catch(n){if(n&&11e3===n.code)return await new Promise((e=>setTimeout(e,200))),nt(e,t)}return async function(t){if(t){const s=new Date(Date.now()-Qe+1e3*t);if(1!==(await Ye.updateOne({_id:e,value:n},{expire:s})).result.n)throw new Error("Lock expired")}else{if(1!==(await Ye.deleteOne({_id:e,value:n})).result.n)throw new Error("Lock expired")}}}const st=Array.isArray,rt=new WeakMap,it={};function at(e,t){let n=!0;for(;n;){n=!1;for(let s=2;s<e.length;++s){const r=t(e[s-1],e[s],s-2);r!==it&&(n=!0,(e=e.slice()).splice(s-1,2,r))}}return 2===e.length?e[1]:e}function ot(e,t="",n=""){const s={"-":"\\-","/":"\\/","\\":"\\/","^":"\\^",$:"\\$","*":"\\*","+":"\\+","?":"\\?",".":"\\.","(":"\\(",")":"\\)","|":"\\|","[":"\\[","]":"\\]","{":"\\{","}":"\\}","\\%":".*","\\_":"."};let r=function(e,t){const n=e.split("");for(let e=0;e<n.length;++e){const s=n[e];if(s===t)n[e]=n[e+1]||"",n[e+1]="";else if("_"===s)n[e]="\\_";else if("%"===s)for(n[e]="\\%";"%"===n[e+1];)n[++e]=""}return n.filter((e=>e))}(e,t);if(!r.length)return new RegExp("^$",n);r=r.map((e=>s[e]||e)),r[0]=".*"===r[0]?"":"^"+r[0];const i=r.length-1;return r[i]=[".*",""].includes(r[i])?"":r[i]+"$",new RegExp(r.join(""),n)}function lt(e,t){return"boolean"==typeof e&&(e=+e),"boolean"==typeof t&&(t=+t),typeof e!=typeof t?"string"==typeof e?1:-1:e>t?1:e<t?-1:0}function ct(e){switch(typeof e){case"number":return e;case"boolean":return+e;case"string":return parseFloat(e)||0}}function ut(e){switch(typeof e){case"string":return e;case"number":return e.toString();case"boolean":return(+e).toString()}}function dt(e){if(!Array.isArray(e))return e;if("CASE"===e[0]){for(let t=1;t<e.length;t+=2){if(Array.isArray(e[t]))return e;if(e[t])return e[t+1]}return null}if("FUNC"===e[0]){if("COALESCE"===e[1]){const t=[];for(let n=2;n<e.length;++n){const s=e[n];if(null!=s&&(t.push(s),!Array.isArray(s)))break}return t.length?1===t.length?t[0]:["FUNC","COALESCE",...t]:null}if("UPPER"===e[1]){if(null==e[2])return null;if(!st(e[2]))return ut(e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!st(e[2]))return ut(e[2]).toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null}else{if("AND"===e[0]){for(let t=1;t<e.length;++t)if(!Array.isArray(e[t])&&null!=e[t]&&!e[t])return!1;const t=[];for(let n=1;n<e.length;++n){const s=e[n];if(null==s)return null;Array.isArray(s)&&("AND"===s[0]?t.push(...s.slice(1)):t.push(s))}return!t.length||(1===t.length&&t.push(!0),["AND",...t])}if("OR"===e[0]){const t=[];for(let n=1;n<e.length;++n){const s=e[n];if(Array.isArray(s))"OR"===s[0]?t.push(...s.slice(1)):t.push(s);else if(s)return!0}return t.length?(1===t.length&&t.push(!1),["OR",...t]):!!e.some((e=>null==e))&&null}if("NOT"===e[0]){if(null==e[1])return null;if(!st(e[1]))return!e[1];if("NOT"===e[1][0])return e[1][1]}else{if("IS NULL"===e[0])return st(e[1])?e:null==e[1]||null;if("IS NOT NULL"===e[0])return st(e[1])?e:null!=e[1]||null;if("LIKE"===e[0]){if(st(e[1])||st(e[2])||st(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=rt.get(e);return t||(t=ot(e[2],e[3]),rt.set(e,t)),t.test(e[1])}if("NOT LIKE"===e[0]){if(st(e[1])||st(e[2])||st(e[3]))return e;if(null==e[1]||null==e[2]||e.length>=4&&null==e[3])return null;let t=rt.get(e);return t||(t=ot(e[2],e[3]),rt.set(e,t)),!t.test(e[1])}if("="===e[0])return null==e[1]||null==e[2]?null:st(e[1])||st(e[2])?e:0===lt(e[1],e[2]);if("<>"===e[0])return null==e[1]||null==e[2]?null:st(e[1])||st(e[2])?e:0!==lt(e[1],e[2]);if(">"===e[0])return null==e[1]||null==e[2]?null:st(e[1])||st(e[2])?e:lt(e[1],e[2])>0;if(">="===e[0])return null==e[1]||null==e[2]?null:st(e[1])||st(e[2])?e:lt(e[1],e[2])>=0;if("<"===e[0])return null==e[1]||null==e[2]?null:st(e[1])||st(e[2])?e:lt(e[1],e[2])<0;if("<="===e[0])return null==e[1]||null==e[2]?null:st(e[1])||st(e[2])?e:lt(e[1],e[2])<=0;if("*"===e[0])return at(e,((e,t)=>null==e||null==t?null:st(e)||st(t)?it:ct(e)*ct(t)));if("/"===e[0])return at(e,((e,t,n)=>null==e||null==t?null:st(e)||st(t)?it:0===n?ct(e)/ct(t):ct(e)*ct(t)));if("+"===e[0])return at(e,((e,t)=>null==e||null==t?null:st(e)||st(t)?it:ct(e)+ct(t)));if("-"===e[0])return at(e,((e,t,n)=>null==e||null==t?null:st(e)||st(t)?it:0===n?ct(e)-ct(t):ct(e)+ct(t)));if("||"===e[0])return at(e,((e,t)=>null==e||null==t?null:st(e)||st(t)?it:ut(e)+ut(t)))}}return e}function ft(e,t,n,s){return ce(e,(e=>{if(s&&(e=s(e)),!st(e))return e;if("FUNC"===e[0]&&"NOW"===e[1]){if(n)return n}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!st(e[1])){let n;return n="function"==typeof t?t(e[1]):t[e[1]],null==n?null:("object"==typeof n&&(n=n.value?n.value[0]:null),n)}}return dt(e)}))}async function pt(e,t,n,s){return ue(e,(async e=>{if(s&&(e=await s(e)),!st(e))return e;if("FUNC"===e[0]){if("NOW"===e[1]){if(n)return n}else if("UPPER"===e[1]){if(null==e[2])return null;if(!st(e[2]))return(""+e[2]).toUpperCase()}else if("LOWER"===e[1]){if(null==e[2])return null;if(!st(e[2]))return(""+e[2]).toLowerCase()}}else if("PARAM"===e[0]){if(null==e[1])return null;if(t&&!st(e[1])){let n=t[e[1]];return null==n?null:("object"==typeof n&&(n=n.value?n.value[0]:null),n)}}return dt(e)}))}const mt=Array.isArray;function ht(e){const t=+e;return isNaN(t)?""+e:t}function gt(e){const t=e.trim().split(/\s+/);return 5===t.length&&t.unshift("*"),p.schedule(p.parse.cron(t.join(" "),!0))}const _t=new Map;let wt=null,yt=1;function Et(e,t="",n={}){for(const s of Object.keys(e)){const r=e[s];"object"!=typeof r||Array.isArray(r)?n[`${t}${s}`]=r:Et(r,`${t}${s}.`,n)}return n}async function Ot(){const e=await Re();let t=await je();t=t.map((e=>((e=Et(e))._keys&&e._keys.length||(e._keys=Object.keys(e).filter((e=>!e.startsWith("_")))),e))),e.sort(((e,t)=>e.weight===t.weight?e._id>t._id?1:e._id<t._id?-1:0:e.weight-t.weight));const n=[];for(const i of e){let e=null;if(i.schedule){const t=i.schedule.trim().split(/\s+/);e={md5:f.createHash("md5").update(i.schedule).digest("hex"),duration:null,schedule:null};try{e.duration=1e3*+t.shift(),e.schedule=gt(t.join(" "))}catch(t){(r={message:"Invalid preset schedule",preset:i._id,schedule:i.schedule}).severity="warn",z(r),e.schedule=!1}}const a=i.events||{};let o=!0;if(i.precondition){try{o=pe(i.precondition)}catch(e){s=JSON.parse(i.precondition),o=!Object.keys(s).length||function e(t){const n=[];for(const[s,r]of Object.entries(t))if("$"===s[0])if("$and"===s){const t=["AND"];for(const n of Object.values(r))t.push(e(n));n.push(t)}else{if("$or"!==s)throw new Error(`Operator ${s} not supported`);{const t=["OR"];for(const n of Object.values(r))t.push(e(n));n.push(t)}}else if("_tags"===s)if("object"==typeof r){if(mt(r))throw new Error("Invalid type");const e=[];for(const[t,n]of Object.entries(r))if("$ne"===t){if("string"!=typeof r.$ne)throw new Error("Only string values are allowed for _tags");e.push(["IS NULL",["PARAM","Tags."+oe(n)]])}else{if("$eq"!==t)throw new Error("Invalid tag query");if("string"!=typeof r.$eq)throw new Error("Only string values are allowed for _tags");e.push(["IS NOT NULL",["PARAM","Tags."+oe(n)]])}1===e.length?n.push(e[0]):e.length>1&&n.push(["AND",...e])}else n.push(["IS NOT NULL",["PARAM","Tags."+oe(r)]]);else if(s.startsWith("Tags.")){let e;if("boolean"==typeof r)e=r;else if(r.hasOwnProperty("$eq"))e=!!r.$eq;else if(r.hasOwnProperty("$ne"))e=!r.$ne;else{if(!r.hasOwnProperty("$exists"))throw new Error("Invalid tag query");e=!!r.$exists}n.push([e?"IS NOT NULL":"IS NULL",["PARAM",s]])}else if("object"==typeof r){if(mt(r))throw new Error("Invalid type");const e=[];for(const[t,n]of Object.entries(r)){if("$eq"===t)e.push(["=",["PARAM",s],n]);else if("$ne"===t)e.push(["OR",["<>",["PARAM",s],n],["IS NULL",["PARAM",s]]]);else if("$lt"===t)e.push(["<",["PARAM",s],n]);else if("$lte"===t)e.push(["<=",["PARAM",s],n]);else if("$gt"===t)e.push([">",["PARAM",s],n]);else{if("$gte"!==t)throw new Error(`Operator ${t} not supported`);e.push([">=",["PARAM",s],n])}if(!["string","number","boolean"].includes(typeof n))throw new Error(`Invalid value for ${t} operator`)}if(1===e.length)n.push(e[0]);else if(e.length>1){const t=["AND"];n.push(t.concat(e))}}else n.push(["=",["PARAM",s],r]);return 1===n.length?n[0]:0===n.length||["AND",...n]}(s)}o=ft(o)}const l=i.provisions||[];for(const e of i.configurations)switch(e.type){case"age":l.push(["refresh",e.name,+e.age]);break;case"value":l.push(["value",e.name,e.value]);break;case"add_tag":l.push(["tag",e.tag,!0]);break;case"delete_tag":l.push(["tag",e.tag,!1]);break;case"provision":l.push([e.name].concat(e.args||[]));break;case"add_object":for(const n of t)if(n._id===e.object){const t=n._keys.map((e=>`${e}:${JSON.stringify(n[e])}`)).join(","),s=`${e.name}.[${t}]`;l.push(["instances",s,1]);for(const e in n)e.startsWith("_")||-1!==n._keys.indexOf(e)||l.push(["value",`${s}.${e}`,n[e]])}break;case"delete_object":for(const n of t)if(n._id===e.object){const t=n._keys.map((e=>`${e}:${JSON.stringify(n[e])}`)).join(","),s=`${e.name}.[${t}]`;l.push(["instances",s,0])}break;default:throw new Error("Unknown configuration type "+e.type)}n.push({name:i._id,channel:i.channel||"default",schedule:e,events:a,precondition:o,provisions:l})}var s,r;return n}async function St(){const e=await Pe(),t={};for(const n of e)t[n._id]={},t[n._id].md5=f.createHash("md5").update(n.script).digest("hex"),t[n._id].script=new u.Script(`"use strict";(function(){\n${n.script}\n})();`,{filename:n._id,lineOffset:-1,timeout:50});return t}async function Tt(){const e=await Me(),t={};for(const n of e)t[n._id]={},t[n._id].md5=f.createHash("md5").update(n.script).digest("hex"),t[n._id].script=new u.Script(`"use strict";(function(){\n${n.script}\n})();`,{filename:n._id,lineOffset:-1,timeout:50});return t}async function vt(){const e=await Fe(),t={};for(const n of e)t[n.role]||(t[n.role]={}),t[n.role][n.access]||(t[n.role][n.access]={}),t[n.role][n.access][n.resource]={access:n.access,filter:pe(n.filter||"true")},n.validate&&(t[n.role][n.access][n.resource].validate=pe(n.validate));return t}async function At(){const e=await Ue(),t={};for(const n of e){const e=n.filename||n._id.toString();t[e]={},t[e].length=n.length,t[e].md5=n.md5,t[e].contentType=n.contentType}return t}async function bt(){const e=await He(),t={};for(const n of e)t[n._id]={password:n.password,salt:n.salt,roles:n.roles.split(",").map((e=>e.trim()))};return t}async function It(){const e=await qe();e.sort(((e,t)=>e.id>t.id?1:e.id<t.id?-1:0));const t={filters:{},device:{},index:{},overview:{}},n={};for(const s of e){const e=ft(s.value);if(n[s.id]=e,s.id.startsWith("ui.")){const n=s.id.split(".");n.shift();let r=t;for(;n.length>1;){const e=n.shift();"object"!=typeof r[e]&&(r[e]={}),r=r[e]}r[n[0]]=e}}return[n,t]}async function Nt(){if(!yt)return await new Promise((e=>setTimeout(e,20))),void await Nt();yt=0;const e=Date.now(),t=await async function(e){const t=new Date(Date.now()-Qe);if(Array.isArray(e)){const n=await Ye.find({_id:{$in:e}}).toArray(),s={};e.forEach(((e,t)=>{s[e]=t}));const r=[];return n.forEach((e=>{e.expire>t&&(r[s[e._id]]=e.value)})),r}{const n=await Ye.findOne({_id:{$in:[e]}});return n&&n.expire>t?n.value:null}}("presets_hash");if(wt&&t===wt)return void(yt=e+(3e3-e%3e3));const n=await nt("presets_hash_lock",3),s=await Promise.all([Ot(),St(),Tt(),At(),vt(),bt(),It()]),r={presets:s[0],provisions:s[1],virtualParameters:s[2],files:s[3],permissions:s[4],users:s[5],config:s[6][0],ui:s[6][1]};if(wt){const e=wt,t=_t.get(e);setTimeout((()=>{_t.get(e)===t&&_t.delete(e)}),6e4).unref()}wt=function(e){const t=f.createHash("md5");for(const n of e.presets)t.update(JSON.stringify(n.name)),t.update(JSON.stringify(n.channel)),t.update(JSON.stringify(n.schedule)),t.update(JSON.stringify(n.events)),t.update(JSON.stringify(n.precondition)),t.update(JSON.stringify(n.provisions));let n;n=Object.keys(e.provisions).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(e.provisions[s].md5);n=Object.keys(e.virtualParameters).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(e.virtualParameters[s].md5);n=Object.keys(e.config).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.config[s]));n=Object.keys(e.files).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.files[s]));n=Object.keys(e.users).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.users[s]));const s=Object.keys(e.permissions).sort();t.update(JSON.stringify(s));for(const r of s){const s=Object.keys(e.permissions[r]).sort();t.update(JSON.stringify(s));for(const i of s){n=Object.keys(e.permissions[r][i]).sort(),t.update(JSON.stringify(n));for(const s of n)t.update(JSON.stringify(e.permissions[r][i][s]))}}return t.digest("hex")}(r),_t.set(wt,r),await async function(e,t,n=Ke){const s=new Date(Date.now()-Qe+1e3*n);await Ye.replaceOne({_id:e},{_id:e,value:t,expire:s},{upsert:!0})}("presets_hash",wt,300),await n(0),yt=e+(3e3-e%3e3)}function $t(e,t,n,s,r){const i=_t.get(e);if(!i)throw new Error("Cache snapshot does not exist");const a={"cwmp.downloadTimeout":"DOWNLOAD_TIMEOUT","cwmp.debug":"DEBUG","cwmp.retryDelay":"RETRY_DELAY","cwmp.sessionTimeout":"SESSION_TIMEOUT","cwmp.connectionRequestTimeout":"CONNECTION_REQUEST_TIMEOUT","cwmp.gpnNextLevel":"GPN_NEXT_LEVEL","cwmp.gpvBatchSize":"GPV_BATCH_SIZE","cwmp.cookiesPath":"COOKIES_PATH","cwmp.datetimeMilliseconds":"DATETIME_MILLISECONDS","cwmp.booleanLiteral":"BOOLEAN_LITERAL","cwmp.connectionRequestAllowBasicAuth":"CONNECTION_REQUEST_ALLOW_BASIC_AUTH","cwmp.maxCommitIterations":"MAX_COMMIT_ITERATIONS","cwmp.deviceOnlineThreshold":"DEVICE_ONLINE_THRESHOLD","cwmp.udpConnectionRequestPort":"UDP_CONNECTION_REQUEST_PORT"};if(!(t in i.config)){if(t in a){let e;return n&&n.id?e=n.id:r&&(e=r(["PARAM","DeviceID.ID"]),Array.isArray(e)&&(e=null)),D(a[t],e)}return null}const o=ft(i.config[t],n,s,r);return Array.isArray(o)?null:o}function Ct(e){const t=(e=e.trim()).split(" ",1)[0],n={method:t};return Object.assign(n,function(e){const t={},n=e.split(",");let s;for(;null!=(s=n.shift());){const e=s.split("=",1)[0];if(e.length===s.length){if(!s.trim())continue;throw new Error("Unable to parse auth header")}let r=s.slice(e.length+1);if(/^\s*"/.test(r)){for(;!/[^\\]"\s*$/.test(r);){const e=n.shift();if(null==e)throw new Error("Unable to parse auth header");r+=","+e}try{r=JSON.parse(r)}catch(e){throw new Error("Unable to parse auth header")}}else r=r.trim();t[e.trim()]=r}return t}(e.slice(t.length+1))),n}function xt(e,t){return"Basic "+Buffer.from(`${e}:${t}`).toString("base64")}function Dt(e,t,n,s,r,i){const a=f.randomBytes(8).toString("hex"),o="00000001";let l;i.qop&&(l=-1!==i.qop.indexOf(",")?"auth":i.qop);const c=function(e,t,n,s,r,i,a,o,l,c){const u=f.createHash("md5");u.update(e).update(":").update(t).update(":").update(n);const d=u.digest("hex"),p=f.createHash("md5");if(p.update(r).update(":").update(i),"auth-int"===a){const e=f.createHash("md5").update(o||"").digest("hex");p.update(":").update(e)}const m=p.digest("hex"),h=f.createHash("md5");return h.update(d).update(":").update(s),a&&h.update(":").update(c).update(":").update(l).update(":").update(a),h.update(":").update(m),h.digest("hex")}(e,i.realm,t,i.nonce,s,n,l,r,a,o);let u=`Digest username="${e}"`;return u+=`,realm="${i.realm}"`,u+=`,nonce="${i.nonce}"`,u+=`,uri="${n}"`,i.algorithm&&(u+=",algorithm="+i.algorithm),l&&(u+=`,qop=${l},nc=${o},cnonce="${a}"`),u+=`,response="${c}"`,i.opaque&&(u+=`,opaque="${i.opaque}"`),u}const Lt=+D("EXT_TIMEOUT"),kt={},Rt=new Map;function jt(e){const t=Rt.get(e[0]);t&&(Rt.delete(e[0]),t({fault:e[1],value:e[2]}))}function Pt(e){return new Promise((t=>{const n=Date.now()+5e3;e.kill();const s=setInterval((()=>{e.connected?Date.now()>n&&(e.kill("SIGKILL"),clearInterval(s),t()):(clearInterval(s),t())}),100)}))}async function Mt(){await Promise.all(Object.entries(kt).map((([e,t])=>(delete kt[e],Pt(t)))))}const Ut=""+D("DEBUG_FILE"),qt=""+D("DEBUG_FORMAT"),Ft=new WeakMap;function Ht(e){let t=Ft.get(e);return t||(t=new Date,Ft.set(e,t)),t}function Wt(e,n,s,r){if(!Ut)return;const i={event:"outgoing UDP message",timestamp:new Date,remoteAddress:e,deviceId:n,remotePort:s,body:r};if("yaml"===qt)t.appendFileSync(Ut,"---\n"+g.stringify(i));else{if("json"!==qt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Ut,JSON.stringify(i)+"\n")}}async function Bt(e,t){let n,s;const r=await pt(e,{},0,(async e=>{if(!n&&Array.isArray(e)&&"FUNC"===e[0]){if("EXT"===e[1]){if("string"!=typeof e[2]||"string"!=typeof e[3])return null;for(let t=4;t<e.length;t++)if(Array.isArray(e[t]))return null;const{fault:t,value:n}=await(r=e.slice(2),new Promise((e=>{const t=r[0],n=f.randomBytes(8).toString("hex");if(Rt.set(n,e),!kt[t]){const s=h.spawn(b+"/bin/genieacs-ext",[t],{stdio:["inherit","inherit","inherit","ipc"]});kt[t]=s,s.on("error",(r=>{kt[t]===s&&(Rt.delete(n)&&e({fault:{code:r.name,message:r.message},value:null}),Pt(kt[t]),delete kt[t])})),s.on("disconnect",(()=>{kt[t]===s&&delete kt[t]})),s.on("message",jt)}return setTimeout((()=>{Rt.delete(n)&&e({fault:{code:"timeout",message:"Extension timed out"},value:null})}),Lt),!!kt[t].connected&&kt[t].send([n,r.slice(1)])})));return t?null:n}if("AUTH"===e[1])return Array.isArray(e[2])||Array.isArray(e[3])||(n=e[2]||"",s=e[3]||""),t}var r;return e}));return[n,s,r]}function Gt(e,n,s,r){return new Promise(((a,o)=>{const l=i.get(e,(n=>{n.resume(),a({statusCode:n.statusCode,headers:n.headers}),s&&(function(e,n,s,r){if(!Ut)return;const i=new Date,a=e.socket,o={event:"outgoing HTTP request",timestamp:i,remoteAddress:a.remoteAddress,deviceId:n,connection:Ht(a),remotePort:s.port,method:s.method||"GET",url:s.path,headers:e.getHeaders(),body:r};if("yaml"===qt)t.appendFileSync(Ut,"---\n"+g.stringify(o));else{if("json"!==qt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Ut,JSON.stringify(o)+"\n")}}(l,r,e,null),function(e,n,s){if(!Ut)return;const r={event:"incoming HTTP response",timestamp:new Date,remoteAddress:e.socket.remoteAddress,deviceId:n,connection:Ht(e.socket),statusCode:e.statusCode,headers:e.headers,body:s};if("yaml"===qt)t.appendFileSync(Ut,"---\n"+g.stringify(r));else{if("json"!==qt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Ut,JSON.stringify(r)+"\n")}}(n,r,null))})).on("error",(n=>{l.abort(),o(new Error("Device is offline")),s&&function(e,n,s,r){if(!Ut)return;const i={event:"outgoing HTTP request",timestamp:new Date,remoteAddress:s.hostname,deviceId:n,connection:null,remotePort:s.port,method:s.method,url:s.path,headers:e.getHeaders(),error:r.message};if("yaml"===qt)t.appendFileSync(Ut,"---\n"+g.stringify(i));else{if("json"!==qt)throw new Error("Unrecognized DEBUG_FORMAT option");t.appendFileSync(Ut,JSON.stringify(i)+"\n")}}(l,r,e,n)})).on("socket",(e=>{e.setTimeout(n),e.on("timeout",(()=>{l.abort()}))}))}))}async function Jt(e,t){if(!t){const n=await ye.findOne({_id:e});if(!n)throw new Error("No such device");t=function(e){const t={};return function e(t,n,s,r){for(const[i,a]of Object.entries(t)){if(!n)if("_lastInform"===i)s["Events.Inform"]={value:[ht(a),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_registered"===i)s["Events.Registered"]={value:[ht(a),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_lastBoot"===i)s["Events.1_BOOT"]={value:[ht(a),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_lastBootstrap"===i)s["Events.0_BOOTSTRAP"]={value:[ht(a),"xsd:dateTime"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_id"===i)s["DeviceID.ID"]={value:[a,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_deviceId"===i)s["DeviceID.Manufacturer"]={value:[a._Manufacturer,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r},s["DeviceID.OUI"]={value:[a._OUI,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r},s["DeviceID.ProductClass"]={value:[a._ProductClass,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r},s["DeviceID.SerialNumber"]={value:[a._SerialNumber,"xsd:string"],valueTimestamp:r,writable:!1,writableTimestamp:r,object:!1,objectTimestamp:r};else if("_tags"===i){s.Tags={writable:!1,writableTimestamp:r,object:!0,objectTimestamp:r};for(const e of a)s["Tags."+oe(e)]={value:[!0,"xsd:boolean"],valueTimestamp:r,writable:!0,writableTimestamp:r,object:!1,objectTimestamp:r}}if(i.startsWith("_"))continue;let o=r;n?+t._timestamp>r&&(o=+t._timestamp):o=+(t._timestamp||1);const l={};null!=a._value?(l.value=[a._value instanceof Date?+a._value:a._value,a._type],l.valueTimestamp=+(a._timestamp||o),l.object=!1,l.objectTimestamp=o):null!=a._object&&(l.object=a._object,l.objectTimestamp=o),null!=a._writable&&(l.writable=a._writable,l.writableTimestamp=o),null!=a._notification&&(l.notification=a._notification,l.notificationTimestamp=+a._attributesTimestamp||1),null!=a._accessList&&(l.accessList=a._accessList,l.accessListTimestamp=+a._attributesTimestamp||1);const c=n?`${n}.${i}`:i;s[c]=l,(l.object||null==a.object)&&e(a,c,s,o)}}(e,"",t,new Date(e._lastInform||1).getTime()),t}(n)}let n,s,r,a;t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"]?(n=(t["InternetGatewayDevice.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["InternetGatewayDevice.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],r=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],a=((t["InternetGatewayDevice.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]):(n=(t["Device.ManagementServer.ConnectionRequestURL"].value||[""])[0],s=((t["Device.ManagementServer.UDPConnectionRequestAddress"]||{}).value||[""])[0],r=((t["Device.ManagementServer.ConnectionRequestUsername"]||{}).value||[""])[0],a=((t["Device.ManagementServer.ConnectionRequestPassword"]||{}).value||[""])[0]);const l=o.parse(n).host,c=e=>{if(!Array.isArray(e))return e;if("PARAM"===e[0]&&"string"==typeof e[1]){let n=e[1];if("id"===n)n="DeviceID.ID";else if("serialNumber"===n)n="DeviceID.SerialNumber";else if("productClass"===n)n="DeviceID.ProductClass";else if("oui"===n)n="DeviceID.OUI";else{if("remoteAddress"===n)return l;if("username"===n)return r;if("password"===n)return a}const s=t[n];if(s&&s.value)return s.value[0]}else if("FUNC"===e[0]){if("REMOTE_ADDRESS"===e[1])return l;if("USERNAME"===e[1])return r;if("PASSWORD"===e[1])return a}return e},u=await async function(){return Date.now()>yt&&await Nt(),wt}(),d=Date.now(),p=+$t(u,"cwmp.udpConnectionRequestPort",{},d,c),h=+$t(u,"cwmp.connectionRequestTimeout",{},d,c),g=!!$t(u,"cwmp.connectionRequestAllowBasicAuth",{},d,c);let _=function(e,t){const n=_t.get(e);if(!n)throw new Error("Cache snapshot does not exist");return n.config[t]}(u,"cwmp.connectionRequestAuth");void 0===_&&(_=["FUNC","AUTH",["PARAM","username"],["PARAM","password"]]),_=ft(_,{},d,c);const w=!!$t(u,"cwmp.debug",{},d,c);let y;s&&(y=async function(e,t,n=0,s,r){const[i,a]=e.split(":",2),o=a?parseInt(a):80,l=Date.now(),c=m.createSocket({type:"udp4",reuseAddr:!0});let u,d;for(n&&c.bind({port:n,exclusive:!0}),[u,d,t]=await Bt(t,null),null==u&&(u=""),null==d&&(d="");null!=u&&null!=d;){const n=Math.trunc(l/1e3),a=Math.trunc(4294967295*Math.random()),p=f.randomBytes(8).toString("hex"),m=`GET http://${e}?ts=${n}&id=${a}&un=${u}&cn=${p}&sig=${f.createHmac("sha1",d).update(`${n}${a}${u}${p}`).digest("hex")} HTTP/1.1\r\nHost: ${e}\r\n\r\n`,h=Buffer.from(m);for(let e=0;e<3;++e)await new Promise(((e,t)=>{c.send(h,0,h.length,o,i,(n=>{n?t(n):e(),s&&Wt(i,r,o,m)}))}));[u,d,t]=await Bt(t,null)}c.close()}(s,_,p,w,e));try{await async function(e,t,n,s,r,a){const l=o.parse(e);if("http:"!==l.protocol)throw new Error("Invalid connection request URL or protocol");let c,u,d;for(l.agent=new i.Agent({maxSockets:1,keepAlive:!0});!c||null!=u&&null!=d;){let e=l;if(c)if("Basic"===c.method){if(!n)throw new Error("Basic HTTP authentication not allowed");e=Object.assign({headers:{Authorization:xt(u||"",d||"")}},l)}else{if("Digest"!==c.method)throw new Error("Unrecognized auth method");e=Object.assign({headers:{Authorization:Dt(u,d,l.path,"GET",null,c)}},l)}let i=await Gt(e,s,r,a);if(0===i.statusCode&&c&&(i=await Gt(e,s,r,a)),0===i.statusCode)throw new Error("Device is offline");if(200===i.statusCode||204===i.statusCode)return;if(401!==i.statusCode||!i.headers["www-authenticate"])throw new Error("Unexpected response code from device: "+i.statusCode);c=Ct(i.headers["www-authenticate"]),[u,d,t]=await Bt(t,!1)}throw new Error("Incorrect connection request credentials")}(n,_,g,h,w,e)}catch(e){if(!y)throw e;await y}}async function Vt(e,t,n){await new Promise((e=>setTimeout(e,500)));if(!await we.findOne({_id:t},{projection:{_id:1}}))return"completed";const s={_id:`${e}:task_${t}`};return await ve.findOne(s,{projection:{_id:1}})?"fault":(n-=500)<=0?"timeout":Vt(e,t,n)}function zt(e){e.timestamp=new Date(e.timestamp||Date.now()),e.expiry&&(e.expiry instanceof Date||isNaN(e.expiry)?e.expiry=new Date(e.expiry):e.expiry=new Date(e.timestamp.getTime()+1e3*+e.expiry));const t=e=>!(!Array.isArray(e)||e.length<2||"string"!=typeof e[0]||!e[0].length||!["string","boolean","number"].includes(typeof e[1])||null!=e[2]&&"string"!=typeof e[2]);switch(e.name){case"getParameterValues":if(!Array.isArray(e.parameterNames)||!e.parameterNames.length)throw new Error("Missing 'parameterNames' property");for(const t of e.parameterNames)if("string"!=typeof t||!t.length)throw new Error(`Invalid parameter name '${t}'`);break;case"setParameterValues":if(!Array.isArray(e.parameterValues)||!e.parameterValues.length)throw new Error("Missing 'parameterValues' property");for(const n of e.parameterValues)if(!t(n))throw new Error(`Invalid parameter value '${n}'`);break;case"refreshObject":if("string"!=typeof e.objectName)throw new Error("Missing 'objectName' property");break;case"deleteObject":if("string"!=typeof e.objectName||!e.objectName.length)throw new Error("Missing 'objectName' property");break;case"addObject":if(null!=e.parameterValues){if(!Array.isArray(e.parameterValues))throw new Error("Invalid 'parameterValues' property");for(const n of e.parameterValues)if(!t(n))throw new Error(`Invalid parameter value '${n}'`)}break;case"download":if(!e.file){if("string"!=typeof e.fileType||!e.fileType.length)throw new Error("Missing 'fileType' property");if("string"!=typeof e.fileName||!e.fileName.length)throw new Error("Missing 'fileName' property")}if(null!=e.targetFileName&&"string"!=typeof e.targetFileName)throw new Error("Invalid 'targetFileName' property");break;case"provisions":if(!Array.isArray(e.provisions)||!e.provisions.every((e=>e.every((e=>null==e||["boolean","number","string"].includes(typeof e))))))throw new Error("Invalid 'provisions' property")}return e}const Zt="1.2.3+20201030155156";const Kt=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tasks\/?$/,Xt=/^\/tasks\/([a-zA-Z0-9\-_%]+)(\/[a-zA-Z_]*)?$/,Yt=/^\/devices\/([a-zA-Z0-9\-_%]+)\/tags\/([a-zA-Z0-9\-_%]+)\/?$/,Qt=/^\/presets\/([a-zA-Z0-9\-_%]+)\/?$/,en=/^\/objects\/([a-zA-Z0-9\-_%]+)\/?$/,tn=/^\/files\/([a-zA-Z0-9%!*'();:@&=+$,?#[\]\-_.~]+)\/?$/,nn=/^\/ping\/([a-zA-Z0-9\-_.:]+)\/?$/,sn=/^\/([a-zA-Z0-9_]+)\/?$/,rn=/^\/devices\/([a-zA-Z0-9\-_%]+)\/?$/,an=/^\/provisions\/([a-zA-Z0-9\-_%]+)\/?$/,on=/^\/virtual_parameters\/([a-zA-Z0-9\-_%]+)\/?$/,ln=/^\/faults\/([a-zA-Z0-9\-_%:]+)\/?$/;function cn(e,t){throw t&&(t.writeHead(500,{Connection:"close"}),t.end(`${e.name}: ${e.message}`)),e}function un(e,t){const s=[];let r=0;t.setHeader("GenieACS-Version",Zt),e.addListener("data",(e=>{s.push(e),r+=e.length})),e.addListener("end",(()=>{const i=function(){const e=Buffer.allocUnsafe(r);let t=0;for(const n of s)n.copy(e,t,0,n.length),t+=n.length;return e}(),a=o.parse(e.url,!0);if(Qt.test(a.pathname)){const n=c.unescape(Qt.exec(a.pathname)[1]);if("PUT"===e.method){const e=JSON.parse(i.toString());e._id=n,Ee.replaceOne({_id:n},e,{upsert:!0},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}else"DELETE"===e.method?Ee.deleteOne({_id:n},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(en.test(a.pathname)){const n=c.unescape(en.exec(a.pathname)[1]);if("PUT"===e.method){const e=JSON.parse(i.toString());e._id=n,Oe.replaceOne({_id:n},e,{upsert:!0},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}else"DELETE"===e.method?Oe.deleteOne({_id:n},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(an.test(a.pathname)){const n=c.unescape(an.exec(a.pathname)[1]);if("PUT"===e.method){const e={_id:n,script:i.toString()};try{new u.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}Se.replaceOne({_id:n},e,{upsert:!0},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}else"DELETE"===e.method?Se.deleteOne({_id:n},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(on.test(a.pathname)){const n=c.unescape(on.exec(a.pathname)[1]);if("PUT"===e.method){const e={_id:n,script:i.toString()};try{new u.Script(`"use strict";(function(){\n${e.script}\n})();`)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}Te.replaceOne({_id:n},e,{upsert:!0},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}else"DELETE"===e.method?Te.deleteOne({_id:n},(e=>{e?cn(e,t):tt("presets_hash").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))})):(t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed"))}else if(Yt.test(a.pathname)){const n=Yt.exec(a.pathname),s=c.unescape(n[1]),r=c.unescape(n[2]);"POST"===e.method?ye.updateOne({_id:s},{$addToSet:{_tags:r}},(e=>{e?cn(e,t):(t.writeHead(200),t.end())})):"DELETE"===e.method?ye.updateOne({_id:s},{$pull:{_tags:r}},(e=>{e?cn(e,t):(t.writeHead(200),t.end())})):(t.writeHead(405,{Allow:"POST, DELETE"}),t.end("405 Method Not Allowed"))}else if(ln.test(a.pathname))if("DELETE"===e.method){const e=c.unescape(ln.exec(a.pathname)[1]),n=e.split(":",1)[0],s=e.slice(n.length+1);ve.deleteOne({_id:e},(e=>{if(e)cn(e,t);else if(s.startsWith("task_")){const e=new l.ObjectID(s.slice(5));we.deleteOne({_id:e},(e=>{e?cn(e,t):tt(n+"_tasks_faults_operations").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}else tt(n+"_tasks_faults_operations").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}else t.writeHead(405,{Allow:"DELETE"}),t.end("405 Method Not Allowed");else if(Kt.test(a.pathname))if("POST"===e.method){const e=c.unescape(Kt.exec(a.pathname)[1]);if(i.length){const n=JSON.parse(i.toString());n.device=e,async function(e){if(e&&!Array.isArray(e))e=[e];else if(!e||0===e.length)return e||[];for(const t of e)zt(t),t.uniqueKey&&await we.deleteOne({device:t.device,uniqueKey:t.uniqueKey});return await we.insertMany(e),e}(n).then((()=>{tt(e+"_tasks_faults_operations").then((()=>{null!=a.query.connection_request?Jt(e).then((()=>{const s=a.query.timeout&&parseInt(a.query.timeout)||D("DEVICE_ONLINE_THRESHOLD",e);Vt(e,n._id,s).then((e=>{"timeout"===e?(t.writeHead(202,"Task queued but not processed",{"Content-Type":"application/json"}),t.end(JSON.stringify(n))):"fault"===e?we.findOne({_id:n._id},((e,n)=>{e?cn(e,t):(t.writeHead(202,"Task faulted",{"Content-Type":"application/json"}),t.end(JSON.stringify(n)))})):(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(n)))})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))})).catch((e=>{t.writeHead(202,e.message,{"Content-Type":"application/json"}),t.end(JSON.stringify(n))})):(t.writeHead(202,{"Content-Type":"application/json"}),t.end(JSON.stringify(n)))})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}else null!=a.query.connection_request?Jt(e).then((()=>{t.writeHead(200),t.end()})).catch((e=>{t.writeHead(504),t.end(`${e.name}: ${e.message}`)})):(t.writeHead(400),t.end())}else t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed");else if(Xt.test(a.pathname)){const n=Xt.exec(a.pathname),s=c.unescape(n[1]),r=n[2];r&&"/"!==r?"/retry"===r?"POST"===e.method?we.findOne({_id:new l.ObjectID(s)},{projection:{device:1}},((e,n)=>{if(e)return void cn(e,t);const r=n.device;ve.deleteOne({_id:`${r}:task_${s}`},(e=>{e?cn(e,t):tt(r+"_tasks_faults_operations").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))})):(t.writeHead(405,{Allow:"POST"}),t.end("405 Method Not Allowed")):(t.writeHead(404),t.end()):"DELETE"===e.method?we.findOne({_id:new l.ObjectID(s)},{projection:{device:1}},((e,n)=>{if(e)return void cn(e,t);if(!n)return t.writeHead(404),void t.end("Task not found");const r=n.device;we.deleteOne({_id:new l.ObjectID(s)},(e=>{e?cn(e,t):ve.deleteOne({_id:`${r}:task_${s}`},(e=>{e?cn(e,t):tt(r+"_tasks_faults_operations").then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}))}))})):(t.writeHead(405,{Allow:"PUT DELETE"}),t.end("405 Method Not Allowed"))}else if(tn.test(a.pathname)){const n=c.unescape(tn.exec(a.pathname)[1]);if("PUT"===e.method){const s={fileType:e.headers.filetype,oui:e.headers.oui,productClass:e.headers.productclass,version:e.headers.version},r=new l.GridFSBucket(xe.db());r.delete(n,(()=>{const e=r.openUploadStreamWithId(n,n,{metadata:s});e.on("error",(e=>{cn(e,t)})),e.end(i,(()=>{t.writeHead(201),t.end()}))}))}else if("DELETE"===e.method){new l.GridFSBucket(xe.db()).delete(n,(e=>{if(e)return e.message.startsWith("FileNotFound")?(t.writeHead(404),void t.end("404 Not Found")):void cn(e,t);t.writeHead(200),t.end()}))}else t.writeHead(405,{Allow:"PUT, DELETE"}),t.end("405 Method Not Allowed")}else if(nn.test(a.pathname)){!function(e,t){let s,r,i;switch(n.platform()){case"linux":s="ping -w 1 -i 0.2 -c 3 "+e,r=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss[^]*([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+)/,i=/(\d+) packets transmitted, (\d+) received, ([\d.]+)% packet loss/;break;case"freebsd":s="ping -t 1 -c 3 "+e,r=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss\nround-trip min\/avg\/max\/stddev = ([\d.]+)\/([\d.]+)\/([\d.]+)\/([\d.]+) ms/,i=/(\d+) packets transmitted, (\d+) packets received, ([\d.]+)% packet loss/;break;default:return t(new Error("Platform not supported"))}h.exec(s,((e,n)=>{let s;if(n){const e=n.match(r);if(e)s={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:+e[4],avg:+e[5],max:+e[6],mdev:+e[7]};else{const e=n.match(i);e&&(s={packetsTransmitted:+e[1],packetsReceived:+e[2],packetLoss:+e[3],min:null,avg:null,max:null,mdev:null})}}t(e,s,n)}))}(c.unescape(nn.exec(a.pathname)[1]),((e,n,s)=>{if(e)return n?(t.writeHead(404,{"Cache-Control":"no-cache"}),void t.end(`${e.name}: ${e.message}`)):(t.writeHead(500,{Connection:"close"}),void t.end(`${e.name}: ${e.message}`));t.writeHead(200,{"Content-Type":"text/plain","Cache-Control":"no-cache"}),t.end(s)}))}else if(rn.test(a.pathname)){if("DELETE"!==e.method)return t.writeHead(405,{Allow:"DELETE"}),void t.end("405 Method Not Allowed");(async function(e){await Promise.all([we.deleteMany({device:e}),ye.deleteOne({_id:e}),ve.deleteMany({_id:{$regex:`^${ae(e)}\\:`}}),be.deleteMany({_id:{$regex:`^${ae(e)}\\:`}}),tt(e+"_tasks_faults_operations")])})(c.unescape(rn.exec(a.pathname)[1])).then((()=>{t.writeHead(200),t.end()})).catch((e=>{setTimeout((()=>{cn(e,t)}))}))}else if(sn.test(a.pathname)){let n=sn.exec(a.pathname)[1],s=n.indexOf("_");for(;s++>=0;){const e=s<n.length?n[s].toUpperCase():"";n=n.slice(0,s-1)+e+n.slice(s+1),s=n.indexOf("_",s)}if("GET"!==e.method&&"HEAD"!==e.method)return t.writeHead(405,{Allow:"GET, HEAD"}),void t.end("405 Method Not Allowed");const r=We[n+"Collection"];if(!r)return t.writeHead(404),void t.end("404 Not Found");let i={};if(a.query.query)try{i=JSON.parse(a.query.query)}catch(e){return t.writeHead(400),void t.end(`${e.name}: ${e.message}`)}switch(n){case"devices":i=ze(i);break;case"tasks":i=Ze(i,{_id:e=>new l.ObjectID(e),timestamp:e=>new Date(e),retries:Number});break;case"faults":i=Ze(i,{timestamp:e=>new Date(e),retries:Number})}let o=null;if(a.query.projection){o={};for(const e of a.query.projection.split(","))o[e.trim()]=1}const c=r.find(i,{projection:o});if(a.query.sort){const e=JSON.parse(a.query.sort),t={};for(const[s,r]of Object.entries(e))"_"!==s[s.lastIndexOf(".")+1]&&"devices"===n?t[s+"._value"]=r:t[s]=r;c.sort(t)}a.query.skip&&c.skip(parseInt(a.query.skip)),a.query.limit&&c.limit(parseInt(a.query.limit)),c.count(!1,((n,r)=>{n?cn(n):(t.writeHead(200,{"Content-Type":"application/json",total:r}),"HEAD"!==e.method?(t.write("[\n"),s=0,c.forEach((e=>{s++&&t.write(",\n"),t.write(JSON.stringify(e))}),(e=>{e?cn(e):t.end("\n]")}))):t.end())}))}else t.writeHead(404),t.end("404 Not Found")}))}!function(e,s){M.hostname=n.hostname(),M.pid=process.pid,M.name="genieacs-"+e,M.version=s,U=D(e.toUpperCase()+"_LOG_FILE"),q=D(e.toUpperCase()+"_ACCESS_LOG_FILE"),U&&(H=t.createWriteStream(null,{fd:t.openSync(U,"a")}),W=t.fstatSync(H.fd)),q&&(B=t.createWriteStream(null,{fd:t.openSync(q,"a")}),G=t.fstatSync(B.fd));const r=process.env.JOURNAL_STREAM;if(r){const[e,t]=r.split(":").map(parseInt);F=W.dev===e&&W.ino===t}(U||q)&&setTimeout(J,6e4-Date.now()%6e4).unref()}("nbi",Zt);const dn=D("NBI_INTERFACE"),fn=D("NBI_PORT");function pn(){setTimeout(mn,5e3).unref(),Promise.all([ke(),et(),Mt(),ne.disconnect()]).catch(mn)}function mn(){Mt().finally((()=>{process.exit(1)}))}if(ne){const n=D("NBI_SSL_KEY"),s=D("NBI_SSL_CERT"),r={port:fn,host:dn,ssl:n&&s?{key:n,cert:s}:null,timeout:3e4};let o=!1;process.on("uncaughtException",(e=>{"ERR_IPC_DISCONNECTED"!==e.code&&(K({message:"Uncaught exception",exception:e,pid:process.pid}),o=!0,ie().then(pn).catch(mn))}));const c=(e,t)=>{o&&t.setHeader("Connection","close"),un(e,t)},u=Promise.all([Le(),async function(){const e=""+D("MONGODB_CONNECTION_URL");Xe=l.MongoClient.connect(e,{useNewUrlParser:!0,useUnifiedTopology:!0});const t=(await Xe).db();Ye=t.collection("cache"),await Ye.createIndex({expire:1},{expireAfterSeconds:0});const n=Date.now(),s=await t.command({hostInfo:1});Qe=s.system.currentTime.getTime()-n}()]).then((()=>{!function(n,s){if(re=s,n.ssl){const s={key:n.ssl.key.split(":").map((n=>t.readFileSync(e.resolve(b,n.trim())))),cert:n.ssl.cert.split(":").map((n=>t.readFileSync(e.resolve(b,n.trim()))))};se=a.createServer(s,re),n.onConnection&&se.on("secureConnection",n.onConnection)}else se=i.createServer(re),n.onConnection&&se.on("connection",n.onConnection);se.timeout=n.timeout||0,null!=n.keepAliveTimeout&&(se.keepAliveTimeout=n.keepAliveTimeout),se.listen({port:n.port,host:n.host})}(r,c)})).catch((e=>{setTimeout((()=>{throw e}))}));process.on("SIGINT",(()=>{o=!0,u.finally((()=>{ie().then(pn).catch(mn)}))})),process.on("SIGTERM",(()=>{o=!0,u.finally((()=>{ie().then(pn).catch(mn)}))}))}else{const e=D("NBI_WORKER_PROCESSES");Z({message:"genieacs-nbi starting",pid:process.pid,version:Zt}),function(e,t,s){w.default.on("listening",((e,n)=>{4!==n.addressType&&6!==n.addressType||n.address!==s||n.port!==t||Z({message:"Worker listening",pid:e.process.pid,address:n.address,port:n.port})})),w.default.on("exit",ee),e||(e=Math.max(2,n.cpus().length));for(let t=0;t<e;++t)Q()}(e,fn,dn),process.on("SIGINT",(()=>{Z({message:"Received signal SIGINT, exiting",pid:process.pid}),te()})),process.on("SIGTERM",(()=>{Z({message:"Received signal SIGTERM, exiting",pid:process.pid}),te()}))}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
